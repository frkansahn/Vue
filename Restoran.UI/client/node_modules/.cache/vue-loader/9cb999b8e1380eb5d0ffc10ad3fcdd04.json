{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\vue-phone-mask-input\\src\\PhoneMaskInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\vue-phone-mask-input\\src\\PhoneMaskInput.vue","mtime":1554213243000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1581760786797}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IFRoZU1hc2sgfSBmcm9tICJ2dWUtdGhlLW1hc2siOwppbXBvcnQgeyBwYXJzZVBob25lTnVtYmVyRnJvbVN0cmluZyB9IGZyb20gImxpYnBob25lbnVtYmVyLWpzIjsKaW1wb3J0IENvdW50cnlGbGFnIGZyb20gInZ1ZS1jb3VudHJ5LWZsYWciOwoKaW1wb3J0IHsKICBnZXRNYXNrVG9MaWJQaG9uZU51bWJlciwKICBmaW5kRmlyc3RDb3VudHJ5QnlBbHBoYTIsCiAgZmluZEZpcnN0Q291bnRyeUJ5Q29kZSwKICBpc0NhbmFkYQp9IGZyb20gIi4vY291bnRyeV90ZWxlcGhvbmVfZGF0YS5qcyI7CmltcG9ydCB2aXNpdG9ySW5mbyBmcm9tICJ2aXNpdG9yLWluZm8iOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJQaG9uZU1hc2tJbnB1dCIsCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0KICAgIH0sCiAgICBzaG93RmxhZzogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGF1dG9EZXRlY3RDb3VudHJ5OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgZGVmYXVsdENvdW50cnk6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgcGxhY2Vob2xkZXI6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgZmxhZ1NpemU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAibm9ybWFsIgogICAgfSwKICAgIGRpc2FibGVkOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgd3JhcHBlckNsYXNzOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogInBob25lLW1hc2std3JhcHBlci1saWIiCiAgICB9LAogICAgaW5wdXRDbGFzczogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICJwaG9uZS1pbnB1dC1saWIiCiAgICB9LAogICAgZmxhZ0NsYXNzOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogImNvdW50cnktZmxhZy1saWIiCiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7IFRoZU1hc2ssIENvdW50cnlGbGFnIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlubmVyVmFsdWU6IHRoaXMudmFsdWUsCiAgICAgIGNvdW50cnlDb2RlOiAiIiwKICAgICAgbWFzazogIiojIyMjIyMjIyMjIyMiLAogICAgICBkZWZhdWx0TWFzazogIiojIyMjIyMjIyMjIyMiLAogICAgICBjb3VudHJ5OiAiIiwKICAgICAgaXNWYWxpZDogZmFsc2UsCiAgICAgIHBsdXNUb2tlbnM6IHsKICAgICAgICAiIyI6IHsKICAgICAgICAgIHBhdHRlcm46IC9cZC8KICAgICAgICB9LAogICAgICAgICIqIjogewogICAgICAgICAgcGF0dGVybjogL1xkfFwrLwogICAgICAgIH0KICAgICAgfQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjdXJyZW50TnVtYmVyOiBmdW5jdGlvbigpIHsKICAgICAgY29uc3QgcGx1cyA9IC9eXCsvLnRlc3QodGhpcy5pbm5lclZhbHVlKSB8fCAhdGhpcy5pbm5lclZhbHVlID8gIiIgOiAiKyI7CiAgICAgIGNvbnN0IGZpbHRlcmVkTnVtYmVyQXJyID0gdGhpcy5pbm5lclZhbHVlCiAgICAgICAgPyB0aGlzLmlubmVyVmFsdWUubWF0Y2goL1tcZCtdL2cpCiAgICAgICAgOiBudWxsOwogICAgICBjb25zdCBmaWx0ZXJlZE51bWJlciA9IGZpbHRlcmVkTnVtYmVyQXJyCiAgICAgICAgPyBmaWx0ZXJlZE51bWJlckFyci5qb2luKCIiKQogICAgICAgIDogIiI7CgogICAgICByZXR1cm4gdGhpcy5tYXNrID09PSB0aGlzLmRlZmF1bHRNYXNrCiAgICAgICAgPyBgJHtwbHVzfSR7ZmlsdGVyZWROdW1iZXJ9YAogICAgICAgIDogZmlsdGVyZWROdW1iZXI7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBvbklucHV0OiBmdW5jdGlvbih2YWx1ZSkgewogICAgICBsZXQgZmlsdGVyZWRWYWx1ZSA9IHZhbHVlLm1hdGNoKC9bXGQrXS9nKTsKICAgICAgdGhpcy5pbm5lclZhbHVlID0gZmlsdGVyZWRWYWx1ZSA/IGZpbHRlcmVkVmFsdWUuam9pbigiIikgOiAiIjsKICAgICAgdGhpcy51cGRhdGVNYXNrRGF0YSgpOwoKICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKSB7CiAgICAgICAgc2V0VGltZW91dCh0aGlzLnNldEZvY3VzVG9FbmQuYmluZCh0aGlzKSwgMCk7CiAgICAgIH0pOwogICAgfSwKCiAgICBzZXRGb2N1c1RvRW5kOiBmdW5jdGlvbigpIHsKICAgICAgY29uc3QgbGVuZ3RoID0gdGhpcy4kcmVmcy5waG9uZU1hc2suJGVsLnZhbHVlLmxlbmd0aDsKICAgICAgdGhpcy4kcmVmcy5waG9uZU1hc2suJGVsLmZvY3VzKCk7CiAgICAgIHRoaXMuJHJlZnMucGhvbmVNYXNrLiRlbC5zZXRTZWxlY3Rpb25SYW5nZShsZW5ndGgsIGxlbmd0aCk7CiAgICB9LAoKICAgIHVwZGF0ZU1hc2tEYXRhOiBmdW5jdGlvbigpIHsKICAgICAgbGV0IHsKICAgICAgICBjdXJyZW50TnVtYmVyLAogICAgICAgIHZpc2l0b3JDb3VudHJ5LAogICAgICAgIGlubmVyVmFsdWUsCiAgICAgICAgY291bnRyeUNvZGUsCiAgICAgICAgZGVmYXVsdE1hc2ssCiAgICAgICAgYXV0b0RldGVjdENvdW50cnksCiAgICAgICAgZGVmYXVsdENvdW50cnkKICAgICAgfSA9IHRoaXM7CgogICAgICBsZXQgcGhvbmVJbmZvID0gcGFyc2VQaG9uZU51bWJlckZyb21TdHJpbmcoY3VycmVudE51bWJlcik7CgogICAgICBpZiAoIXBob25lSW5mbyAmJiAhY3VycmVudE51bWJlcikgewogICAgICAgIGxldCBjb3VudHJ5ID0gZmluZEZpcnN0Q291bnRyeUJ5QWxwaGEyKGRlZmF1bHRDb3VudHJ5KTsKICAgICAgICBpZiAoY291bnRyeSkgewogICAgICAgICAgcGhvbmVJbmZvID0geyBjb3VudHJ5OiBkZWZhdWx0Q291bnRyeSB9OwogICAgICAgICAgYXV0b0RldGVjdENvdW50cnkgPSBmYWxzZTsKICAgICAgICAgIHRoaXMuaW5uZXJWYWx1ZSA9IGArJHtjb3VudHJ5LmNvZGV9YDsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChwaG9uZUluZm8gJiYgIXBob25lSW5mby5jb3VudHJ5KSB7CiAgICAgICAgc3dpdGNoIChwaG9uZUluZm8uY291bnRyeUNhbGxpbmdDb2RlKSB7CiAgICAgICAgICBjYXNlICI0NCI6IHsKICAgICAgICAgICAgcGhvbmVJbmZvLmNvdW50cnkgPSAiR0IiOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICAgIGNhc2UgIjEiOiB7CiAgICAgICAgICAgIGlmIChjdXJyZW50TnVtYmVyLmxlbmd0aCA+IDQpCiAgICAgICAgICAgICAgcGhvbmVJbmZvLmNvdW50cnkgPSBpc0NhbmFkYShjdXJyZW50TnVtYmVyKSA/ICJDQSIgOiAiVVMiOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAoYXV0b0RldGVjdENvdW50cnkgJiYgdmlzaXRvckNvdW50cnkgJiYgIWlubmVyVmFsdWUpCiAgICAgICAgcGhvbmVJbmZvID0geyBjb3VudHJ5OiB2aXNpdG9yQ291bnRyeSB9OwogICAgICBlbHNlIGlmICghcGhvbmVJbmZvICYmIGN1cnJlbnROdW1iZXIubGVuZ3RoID4gMikKICAgICAgICBwaG9uZUluZm8gPSB7IGNvdW50cnk6IGZpbmRGaXJzdENvdW50cnlCeUNvZGUoY3VycmVudE51bWJlcikgfTsKCiAgICAgIGNvbnN0IGNvbXB1dGVkTWFzayA9IGdldE1hc2tUb0xpYlBob25lTnVtYmVyKHBob25lSW5mbyk7CiAgICAgIGNvbnN0IGNvbXB1dGVkQ291bnRyeSA9CiAgICAgICAgcGhvbmVJbmZvICYmIHBob25lSW5mby5jb3VudHJ5ID8gcGhvbmVJbmZvLmNvdW50cnkudG9Mb3dlckNhc2UoKSA6ICIiOwoKICAgICAgaWYgKGF1dG9EZXRlY3RDb3VudHJ5ICYmIHZpc2l0b3JDb3VudHJ5KSB7CiAgICAgICAgaWYgKCFpbm5lclZhbHVlKSB0aGlzLmlubmVyVmFsdWUgPSBjb21wdXRlZE1hc2suY291bnRyeUNvZGU7CiAgICAgICAgdGhpcy52aXNpdG9yQ291bnRyeSA9IG51bGw7CiAgICAgIH0KCiAgICAgIGlmIChjb21wdXRlZE1hc2sgJiYgY29tcHV0ZWRNYXNrLm1hc2spIHsKICAgICAgICB0aGlzLm1hc2sgPSBjb21wdXRlZE1hc2subWFzazsKICAgICAgICB0aGlzLmNvdW50cnkgPSBjb21wdXRlZENvdW50cnk7CiAgICAgICAgdGhpcy5jb3VudHJ5Q29kZSA9IGNvbXB1dGVkTWFzay5jb3VudHJ5Q29kZTsKICAgICAgICB0aGlzLmlzVmFsaWQgPSAhIXBob25lSW5mbyAmJiAhIXBob25lSW5mby5pc1ZhbGlkICYmIHBob25lSW5mby5pc1ZhbGlkKCk7CiAgICAgIH0gZWxzZSBpZiAoY291bnRyeUNvZGUubGVuZ3RoID4gY3VycmVudE51bWJlci5sZW5ndGgpIHsKICAgICAgICB0aGlzLm1hc2sgPSBkZWZhdWx0TWFzazsKICAgICAgICB0aGlzLmNvdW50cnkgPSAiIjsKICAgICAgICB0aGlzLmNvdW50cnlDb2RlID0gIiI7CiAgICAgICAgdGhpcy5pc1ZhbGlkID0gZmFsc2U7CiAgICAgIH0KICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBjdXJyZW50TnVtYmVyKHZhbHVlKSB7CiAgICAgIHRoaXMuJGVtaXQoImlucHV0IiwgdmFsdWUpOwogICAgICB0aGlzLiRlbWl0KCJvblZhbGlkYXRlIiwge251bWJlcjogdmFsdWUsIGlzVmFsaWRCeUxpYlBob25lTnVtYmVySnM6IHRoaXMuaXNWYWxpZCwgY291bnRyeTogdGhpcy5jb3VudHJ5fSk7CiAgICB9CiAgfSwKICBiZWZvcmVNb3VudCgpIHsKICAgIGlmICh0aGlzLmF1dG9EZXRlY3RDb3VudHJ5KSB7CiAgICAgIGNvbnN0IHZpc2l0b3JDb250cnlJbmZvID0gdmlzaXRvckluZm8oKTsKICAgICAgdGhpcy52aXNpdG9yQ291bnRyeSA9CiAgICAgICAgdmlzaXRvckNvbnRyeUluZm8gJiYgdmlzaXRvckNvbnRyeUluZm8uY291bnRyeQogICAgICAgICAgPyB2aXNpdG9yQ29udHJ5SW5mby5jb3VudHJ5LmFscGhhMgogICAgICAgICAgOiAiIjsKICAgIH0KICAgIHRoaXMudXBkYXRlTWFza0RhdGEoKTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICAgdGhpcy4kcmVmcy5waG9uZU1hc2suJGVsLm9uYmx1ciA9ICgpID0+IHt0aGlzLiRlbWl0KCJvbkJsdXIiKX0KICAgICB0aGlzLiRyZWZzLnBob25lTWFzay4kZWwub25mb2N1cyA9ICgpID0+IHt0aGlzLiRlbWl0KCJvbkZvY3VzIil9CgogIH0KfTsK"},{"version":3,"sources":["PhoneMaskInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmfile":"PhoneMaskInput.vue","sourceRoot":"node_modules/vue-phone-mask-input/src","sourcesContent":["<template>\n  <div :class=\"wrapperClass\">\n    <the-mask\n      :mask=\"mask\"\n      :value=\"innerValue\"\n      v-on:input=\"onInput\"\n      :tokens=\"plusTokens\"\n      :placeholder=\"placeholder\"\n      :disabled=\"disabled\"\n      masked\n      type=\"tel\"\n      :class=\"inputClass\"\n      ref=\"phoneMask\"\n    />\n    <CountryFlag :country=\"country\" v-if=\"country && showFlag\" :size=\"flagSize\" :class=\"flagClass\"/>\n  </div>\n</template>\n\n<script>\nimport { TheMask } from \"vue-the-mask\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport CountryFlag from \"vue-country-flag\";\n\nimport {\n  getMaskToLibPhoneNumber,\n  findFirstCountryByAlpha2,\n  findFirstCountryByCode,\n  isCanada\n} from \"./country_telephone_data.js\";\nimport visitorInfo from \"visitor-info\";\n\nexport default {\n  name: \"PhoneMaskInput\",\n  props: {\n    value: {\n      type: [String, Number]\n    },\n    showFlag: {\n      type: Boolean,\n      default: false\n    },\n    autoDetectCountry: {\n      type: Boolean,\n      default: false\n    },\n    defaultCountry: {\n      type: String\n    },\n    placeholder: {\n      type: String\n    },\n    flagSize: {\n      type: String,\n      default: \"normal\"\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    wrapperClass: {\n      type: String,\n      default: \"phone-mask-wrapper-lib\"\n    },\n    inputClass: {\n      type: String,\n      default: \"phone-input-lib\"\n    },\n    flagClass: {\n      type: String,\n      default: \"country-flag-lib\"\n    }\n  },\n  components: { TheMask, CountryFlag },\n  data() {\n    return {\n      innerValue: this.value,\n      countryCode: \"\",\n      mask: \"*############\",\n      defaultMask: \"*############\",\n      country: \"\",\n      isValid: false,\n      plusTokens: {\n        \"#\": {\n          pattern: /\\d/\n        },\n        \"*\": {\n          pattern: /\\d|\\+/\n        }\n      }\n    };\n  },\n  computed: {\n    currentNumber: function() {\n      const plus = /^\\+/.test(this.innerValue) || !this.innerValue ? \"\" : \"+\";\n      const filteredNumberArr = this.innerValue\n        ? this.innerValue.match(/[\\d+]/g)\n        : null;\n      const filteredNumber = filteredNumberArr\n        ? filteredNumberArr.join(\"\")\n        : \"\";\n\n      return this.mask === this.defaultMask\n        ? `${plus}${filteredNumber}`\n        : filteredNumber;\n    }\n  },\n  methods: {\n    onInput: function(value) {\n      let filteredValue = value.match(/[\\d+]/g);\n      this.innerValue = filteredValue ? filteredValue.join(\"\") : \"\";\n      this.updateMaskData();\n\n      this.$nextTick(function() {\n        setTimeout(this.setFocusToEnd.bind(this), 0);\n      });\n    },\n\n    setFocusToEnd: function() {\n      const length = this.$refs.phoneMask.$el.value.length;\n      this.$refs.phoneMask.$el.focus();\n      this.$refs.phoneMask.$el.setSelectionRange(length, length);\n    },\n\n    updateMaskData: function() {\n      let {\n        currentNumber,\n        visitorCountry,\n        innerValue,\n        countryCode,\n        defaultMask,\n        autoDetectCountry,\n        defaultCountry\n      } = this;\n\n      let phoneInfo = parsePhoneNumberFromString(currentNumber);\n\n      if (!phoneInfo && !currentNumber) {\n        let country = findFirstCountryByAlpha2(defaultCountry);\n        if (country) {\n          phoneInfo = { country: defaultCountry };\n          autoDetectCountry = false;\n          this.innerValue = `+${country.code}`;\n        }\n      }\n\n      if (phoneInfo && !phoneInfo.country) {\n        switch (phoneInfo.countryCallingCode) {\n          case \"44\": {\n            phoneInfo.country = \"GB\";\n            break;\n          }\n          case \"1\": {\n            if (currentNumber.length > 4)\n              phoneInfo.country = isCanada(currentNumber) ? \"CA\" : \"US\";\n            break;\n          }\n        }\n      } else if (autoDetectCountry && visitorCountry && !innerValue)\n        phoneInfo = { country: visitorCountry };\n      else if (!phoneInfo && currentNumber.length > 2)\n        phoneInfo = { country: findFirstCountryByCode(currentNumber) };\n\n      const computedMask = getMaskToLibPhoneNumber(phoneInfo);\n      const computedCountry =\n        phoneInfo && phoneInfo.country ? phoneInfo.country.toLowerCase() : \"\";\n\n      if (autoDetectCountry && visitorCountry) {\n        if (!innerValue) this.innerValue = computedMask.countryCode;\n        this.visitorCountry = null;\n      }\n\n      if (computedMask && computedMask.mask) {\n        this.mask = computedMask.mask;\n        this.country = computedCountry;\n        this.countryCode = computedMask.countryCode;\n        this.isValid = !!phoneInfo && !!phoneInfo.isValid && phoneInfo.isValid();\n      } else if (countryCode.length > currentNumber.length) {\n        this.mask = defaultMask;\n        this.country = \"\";\n        this.countryCode = \"\";\n        this.isValid = false;\n      }\n    }\n  },\n  watch: {\n    currentNumber(value) {\n      this.$emit(\"input\", value);\n      this.$emit(\"onValidate\", {number: value, isValidByLibPhoneNumberJs: this.isValid, country: this.country});\n    }\n  },\n  beforeMount() {\n    if (this.autoDetectCountry) {\n      const visitorContryInfo = visitorInfo();\n      this.visitorCountry =\n        visitorContryInfo && visitorContryInfo.country\n          ? visitorContryInfo.country.alpha2\n          : \"\";\n    }\n    this.updateMaskData();\n  },\n  mounted() {\n     this.$refs.phoneMask.$el.onblur = () => {this.$emit(\"onBlur\")}\n     this.$refs.phoneMask.$el.onfocus = () => {this.$emit(\"onFocus\")}\n\n  }\n};\n</script>\n\n<style scoped>\n.phone-mask-wrapper-lib {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 40px;\n}\n\n.phone-input-lib {\n  height: 20px;\n}\n\n.country-flag-lib {\n  margin: 0;\n}\n</style>\n"]}]}