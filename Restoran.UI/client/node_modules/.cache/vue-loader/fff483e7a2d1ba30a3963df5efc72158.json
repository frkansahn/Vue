{"remainingRequest":"C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\dr-vue-echarts\\packages\\bar\\src\\Bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\dr-vue-echarts\\packages\\bar\\src\\Bar.vue","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279},{"path":"C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1581760786797}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGJhciB9IGZyb20gIi4uLy4uLy4uL3V0aWxzL2Zvcm1hdHRlciI7CmltcG9ydCB7IERFRkFVTFRfQ09MT1JTIH0gZnJvbSAiLi4vLi4vLi4vdGhlbWUiOwppbXBvcnQgeyBlbWl0RXZlbnQsIHJlZ2lzdGVyVGhlbWUgfSBmcm9tICIuLi8uLi8uLi91dGlscy9taXhpbnMiOwppbXBvcnQgZmxhdHRlbkRlZXAgZnJvbSAibG9kYXNoL2ZsYXR0ZW5EZWVwIjsKaW1wb3J0IHsKICBBUlJBWV9QUk9QLAogIE9CSkVDVF9QUk9QLAogIFNUUklOR19QUk9QLAogIEJPT0xFQU5fUFJPUCwKICBOVU1CRVJfUFJPUAp9IGZyb20gIi4uLy4uLy4uL3NoYXJlZC9jb25zdGFudHMiOwoKY29uc3QgSU5JVF9HUklEX0xFRlQgPSAxMDsKY29uc3QgSU5JVF9HUklEX1JJR0hUID0gMDsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJCYXJDaGFydCIsCiAgbWl4aW5zOiBbZW1pdEV2ZW50KCJlbCIpLCByZWdpc3RlclRoZW1lKCJjaGFydCIpXSwKICBwcm9wczogewogICAgb3B0aW9uOiBPQkpFQ1RfUFJPUCh7fSksCiAgICBhbmltYXRpb246IEJPT0xFQU5fUFJPUCh0cnVlKSwKICAgIHRoZW1lOiBTVFJJTkdfUFJPUCgid2FsZGVuIiksCiAgICBkYXRhOiBBUlJBWV9QUk9QKFtdKSwKICAgIHdpZHRoOiBTVFJJTkdfUFJPUCgiMTAwJSIpLAogICAgaGVpZ2h0OiBTVFJJTkdfUFJPUCgiMTAwJSIpLAogICAgdGl0bGU6IFNUUklOR19QUk9QKCksCiAgICB4TmFtZTogU1RSSU5HX1BST1AoKSwKICAgIHlOYW1lOiBTVFJJTkdfUFJPUCgpLAogICAgbGVnZW5kOiBCT09MRUFOX1BST1AodHJ1ZSksCiAgICBjb2xvcnM6IEFSUkFZX1BST1AoKSwKICAgIHpvb206IEJPT0xFQU5fUFJPUChmYWxzZSksCiAgICAvKiog5ZCM5LiA57G75Z6L5pWw5o2u5q+P5Liq5p+x54q25Zu+6aKc6Imy5piv5ZCm5LiN55u45ZCMICovCiAgICByYWluYm93OiBCT09MRUFOX1BST1AoZmFsc2UpLAogICAgLyoqIOawtOW5s+afseeKtuWbviAqLwogICAgaG9yaXpvbnRhbDogQk9PTEVBTl9QUk9QKGZhbHNlKSwKICAgIC8qKiDpu5jorqTnvKnmlL7ojIPlm7QgKi8KICAgIHpvb21SYW5nZTogQVJSQVlfUFJPUChbMCwgMTAwXSksCiAgICAvKiog5Zu+6KGo5biD5bGA6K6+572uICovCiAgICBncmlkOiBPQkpFQ1RfUFJPUCgpLAogICAgbGFiZWxSb3RhdGU6IEJPT0xFQU5fUFJPUChmYWxzZSksCiAgICBsYWJlbFJvdGF0ZURlZzogTlVNQkVSX1BST1AoNDApLAogICAgYmFyTWF4V2lkdGg6IFNUUklOR19QUk9QKCIxMDAlIikKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydDogbnVsbAogICAgfTsKICB9LAoKICBjb21wdXRlZDogewogICAgc3R5bGUoKSB7CiAgICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCB9ID0gdGhpczsKICAgICAgcmV0dXJuIHsKICAgICAgICB3aWR0aCwKICAgICAgICBoZWlnaHQKICAgICAgfTsKICAgIH0sCiAgICBsZWdlbmRTaG93KCkgewogICAgICBpZiAodGhpcy5yYWluYm93KSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzLmxlZ2VuZDsKICAgIH0sCiAgICBncmlkTGVmdCgpIHsKICAgICAgY29uc3QgbGFiZWxNYXhMZW5ndGggPSB0aGlzLmdldERhdGFMYWJlbE1heExlbmd0aCgpOwogICAgICBpZiAodGhpcy5ob3Jpem9udGFsKSB7CiAgICAgICAgbGV0IGxlZnRHYXAgPSBsYWJlbE1heExlbmd0aCAqIDMgKyAxMDsKICAgICAgICB0aGlzLnpvb20gJiYgKGxlZnRHYXAgKz0gNTApOwogICAgICAgIHJldHVybiBsZWZ0R2FwOwogICAgICB9IGVsc2UgewogICAgICAgIGxldCB2YWx1ZURpc3RhbmNlID0gdGhpcy5nZXREYXRhTWF4VmFsdWVMZW5ndGgoKSAqIDU7CiAgICAgICAgcmV0dXJuIHRoaXMueU5hbWUgPyB2YWx1ZURpc3RhbmNlICsgMTAgOiB2YWx1ZURpc3RhbmNlOwogICAgICB9CiAgICB9LAogICAgZ3JpZFJpZ2h0KCkgewogICAgICByZXR1cm4gdGhpcy54TmFtZSA/IHRoaXMueE5hbWUubGVuZ3RoICogMTIgKyAyMCA6IElOSVRfR1JJRF9SSUdIVDsKICAgIH0sCiAgICB5QXhpc05hbWVMb2NhdGlvbigpIHsKICAgICAgcmV0dXJuIHRoaXMuaG9yaXpvbnRhbCA/ICJlbmQiIDogIm1pZGRsZSI7CiAgICB9LAogICAgeUF4aXNOYW1lR2FwKCkgewogICAgICBpZiAodGhpcy5ob3Jpem9udGFsKSB7CiAgICAgICAgcmV0dXJuIDEwOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzLmdldERhdGFNYXhWYWx1ZUxlbmd0aCgpICogMTAgKyAxMDsKICAgIH0sCiAgICBvcHRpb25zKCkgewogICAgICBjb25zdCB7IHNlcmllc0RhdGEsIGxhYmVscywgbmFtZXMsIGNvbG9ycyB9ID0gdGhpcy5nZXREYXRhKCk7CiAgICAgIHRoaXMucmFpbmJvdyAmJiB0aGlzLnNldFJhaW5ib3coc2VyaWVzRGF0YSk7CiAgICAgIHNlcmllc0RhdGEuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICBpdGVtLmJhck1heFdpZHRoID0gdGhpcy5iYXJNYXhXaWR0aDsKICAgICAgfSk7CiAgICAgIGxldCBvcHRpb25zID0gewogICAgICAgIGFuaW1hdGlvbjogdGhpcy5hbmltYXRpb24sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlLAogICAgICAgICAgYm90dG9tOiAxMCwKICAgICAgICAgIGxlZnQ6IHRoaXMuZ3JpZExlZnQsCiAgICAgICAgICByaWdodDogdGhpcy5ncmlkUmlnaHQKICAgICAgICB9LAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICBuYW1lOiB0aGlzLnhOYW1lLAogICAgICAgICAgdHlwZTogdGhpcy5ob3Jpem9udGFsID8gInZhbHVlIiA6ICJjYXRlZ29yeSIsCiAgICAgICAgICBkYXRhOiBsYWJlbHMsCiAgICAgICAgICBzcGxpdExpbmU6IHsKICAgICAgICAgICAgc2hvdzogdGhpcy5ob3Jpem9udGFsLAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICB0eXBlOiAiZGFzaGVkIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgbmFtZTogdGhpcy5ob3Jpem9udGFsCiAgICAgICAgICAgID8gdGhpcy55TmFtZQogICAgICAgICAgICA6IHRoaXMueU5hbWUgJiYgdGhpcy55TmFtZS5zcGxpdCgiIikuam9pbigiXG4iKSwKICAgICAgICAgIG5hbWVMb2NhdGlvbjogdGhpcy55QXhpc05hbWVMb2NhdGlvbiwKICAgICAgICAgIG5hbWVSb3RhdGU6IDAuMSwKICAgICAgICAgIG5hbWVHYXA6IHRoaXMueUF4aXNOYW1lR2FwLAogICAgICAgICAgdHlwZTogdGhpcy5ob3Jpem9udGFsID8gImNhdGVnb3J5IiA6ICJ2YWx1ZSIsCiAgICAgICAgICBkYXRhOiBsYWJlbHMsCgogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIHNob3c6ICF0aGlzLmhvcml6b250YWwsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIHR5cGU6ICJkYXNoZWQiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgc2hvdzogdGhpcy5sZWdlbmRTaG93LAogICAgICAgICAgZGF0YTogbmFtZXMsCiAgICAgICAgICB0eXBlOiAic2Nyb2xsIiwKICAgICAgICAgIHdpZHRoOiAiNzAlIiwKICAgICAgICAgIHJpZ2h0OiAiMTBweCIKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICJheGlzIiwKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIHR5cGU6ICJjcm9zcyIsCiAgICAgICAgICAgIGFuaW1hdGlvbjogZmFsc2UKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNlcmllczogc2VyaWVzRGF0YQogICAgICB9OwoKICAgICAgdGhpcy5sYWJlbFJvdGF0ZSAmJiB0aGlzLnNldHhOYW1lUm90YXRlKG9wdGlvbnMpOwogICAgICB0aGlzLnpvb20gJiYgdGhpcy5zZXRab29tKG9wdGlvbnMpOwogICAgICB0aGlzLmNvbG9ycy5sZW5ndGggPiAwICYmIHRoaXMuc2V0Q29sb3Iob3B0aW9ucyk7CgogICAgICByZXR1cm4gewogICAgICAgIC4uLm9wdGlvbnMsCiAgICAgICAgLi4udGhpcy5vcHRpb24KICAgICAgfTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldERhdGEoKSB7CiAgICAgIHJldHVybiBiYXIodGhpcy5kYXRhKTsKICAgIH0sCiAgICBnZXREYXRhTGFiZWxNYXhMZW5ndGgoKSB7CiAgICAgIGNvbnN0IHsgbGFiZWxzIH0gPSB0aGlzLmdldERhdGEoKTsKICAgICAgcmV0dXJuIE1hdGgubWF4KC4uLmxhYmVscy5tYXAoaSA9PiBpLmxlbmd0aCkpOwogICAgfSwKICAgIGdldERhdGFNYXhWYWx1ZUxlbmd0aCgpIHsKICAgICAgY29uc3QgeyBzZXJpZXNEYXRhIH0gPSB0aGlzLmdldERhdGEoKTsKICAgICAgY29uc3QgYWxsRGF0YSA9IGZsYXR0ZW5EZWVwKHNlcmllc0RhdGEubWFwKGl0ZW0gPT4gaXRlbS5kYXRhKSk7CiAgICAgIHJldHVybiBgJHtNYXRoLm1heCguLi5hbGxEYXRhKX1gLmxlbmd0aDsKICAgIH0sCiAgICBzZXR4TmFtZVJvdGF0ZShvcHRpb25zKSB7CiAgICAgIG9wdGlvbnMueEF4aXMuYXhpc0xhYmVsID0gewogICAgICAgIC4uLm9wdGlvbnMueEF4aXMuYXhpc0xhYmVsLAogICAgICAgIGludGVydmFsOiAwLAogICAgICAgIHJvdGF0ZTogdGhpcy5sYWJlbFJvdGF0ZURlZwogICAgICB9OwogICAgfSwKICAgIHNldFJhaW5ib3coc2VyaWVzRGF0YSkgewogICAgICBzZXJpZXNEYXRhLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgaXRlbS5pdGVtU3R5bGUgPSB7CiAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgY29sb3I6IHBhcmFtcyA9PiB7CiAgICAgICAgICAgICAgY29uc3QgY29sb3JzID0KICAgICAgICAgICAgICAgIHRoaXMuY29sb3JzLmxlbmd0aCA+IDAgPyB0aGlzLmNvbG9ycyA6IERFRkFVTFRfQ09MT1JTOwogICAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gcGFyYW1zLmRhdGFJbmRleCAlIGNvbG9ycy5sZW5ndGg7CiAgICAgICAgICAgICAgcmV0dXJuIGNvbG9yc1tpbmRleF07CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9OwogICAgICB9KTsKICAgIH0sCiAgICBzZXRDb2xvcihvcHRpb25zKSB7CiAgICAgIG9wdGlvbnMuY29sb3IgPSB0aGlzLmNvbG9yczsKICAgIH0sCgogICAgc2V0Wm9vbShvcHRpb25zKSB7CiAgICAgIGxldCBzbGlkZXIgPSB0aGlzLmhvcml6b250YWwKICAgICAgICA/IHsKICAgICAgICAgICAgLi4uc2xpZGVyLAogICAgICAgICAgICB5QXhpc0luZGV4OiAwLAogICAgICAgICAgICB0b3A6IDMwLAogICAgICAgICAgICBib3R0b206IDMwLAogICAgICAgICAgICBsZWZ0OiAyMAogICAgICAgICAgfQogICAgICAgIDogewogICAgICAgICAgICB0eXBlOiAic2xpZGVyIiwKICAgICAgICAgICAgYm90dG9tOiAwLAogICAgICAgICAgICByaWdodDogMTAKICAgICAgICAgIH07CiAgICAgIG9wdGlvbnMuZGF0YVpvb20gPSBbCiAgICAgICAgewogICAgICAgICAgZGlzYWJsZWQ6IHRoaXMuaG9yaXpvbnRhbCwKICAgICAgICAgIHR5cGU6ICJpbnNpZGUiLAogICAgICAgICAgc3RhcnQ6IHRoaXMuem9vbVJhbmdlWzBdIHx8IDAsCiAgICAgICAgICBlbmQ6IHRoaXMuem9vbVJhbmdlWzFdIHx8IDEwMAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgLi4uc2xpZGVyCiAgICAgICAgfQogICAgICBdOwogICAgICBvcHRpb25zLmdyaWQgPSB7CiAgICAgICAgLi4ub3B0aW9ucy5ncmlkLAogICAgICAgIGJvdHRvbTogNDAKICAgICAgfTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["Bar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcfile":"Bar.vue","sourceRoot":"node_modules/dr-vue-echarts/packages/bar/src","sourcesContent":["<template>\n  <component\n    v-if=\"chart\"\n    :is=\"chart\"\n    ref=\"el\"\n    :style=\"style\"\n    autoresize\n    :theme=\"theme\"\n    :options=\"options\"\n    v-bind=\"$attrs\"\n  />\n</template>\n\n<script>\nimport { bar } from \"../../../utils/formatter\";\nimport { DEFAULT_COLORS } from \"../../../theme\";\nimport { emitEvent, registerTheme } from \"../../../utils/mixins\";\nimport flattenDeep from \"lodash/flattenDeep\";\nimport {\n  ARRAY_PROP,\n  OBJECT_PROP,\n  STRING_PROP,\n  BOOLEAN_PROP,\n  NUMBER_PROP\n} from \"../../../shared/constants\";\n\nconst INIT_GRID_LEFT = 10;\nconst INIT_GRID_RIGHT = 0;\nexport default {\n  name: \"BarChart\",\n  mixins: [emitEvent(\"el\"), registerTheme(\"chart\")],\n  props: {\n    option: OBJECT_PROP({}),\n    animation: BOOLEAN_PROP(true),\n    theme: STRING_PROP(\"walden\"),\n    data: ARRAY_PROP([]),\n    width: STRING_PROP(\"100%\"),\n    height: STRING_PROP(\"100%\"),\n    title: STRING_PROP(),\n    xName: STRING_PROP(),\n    yName: STRING_PROP(),\n    legend: BOOLEAN_PROP(true),\n    colors: ARRAY_PROP(),\n    zoom: BOOLEAN_PROP(false),\n    /** 同一类型数据每个柱状图颜色是否不相同 */\n    rainbow: BOOLEAN_PROP(false),\n    /** 水平柱状图 */\n    horizontal: BOOLEAN_PROP(false),\n    /** 默认缩放范围 */\n    zoomRange: ARRAY_PROP([0, 100]),\n    /** 图表布局设置 */\n    grid: OBJECT_PROP(),\n    labelRotate: BOOLEAN_PROP(false),\n    labelRotateDeg: NUMBER_PROP(40),\n    barMaxWidth: STRING_PROP(\"100%\")\n  },\n  data() {\n    return {\n      chart: null\n    };\n  },\n\n  computed: {\n    style() {\n      const { width, height } = this;\n      return {\n        width,\n        height\n      };\n    },\n    legendShow() {\n      if (this.rainbow) {\n        return false;\n      }\n      return this.legend;\n    },\n    gridLeft() {\n      const labelMaxLength = this.getDataLabelMaxLength();\n      if (this.horizontal) {\n        let leftGap = labelMaxLength * 3 + 10;\n        this.zoom && (leftGap += 50);\n        return leftGap;\n      } else {\n        let valueDistance = this.getDataMaxValueLength() * 5;\n        return this.yName ? valueDistance + 10 : valueDistance;\n      }\n    },\n    gridRight() {\n      return this.xName ? this.xName.length * 12 + 20 : INIT_GRID_RIGHT;\n    },\n    yAxisNameLocation() {\n      return this.horizontal ? \"end\" : \"middle\";\n    },\n    yAxisNameGap() {\n      if (this.horizontal) {\n        return 10;\n      }\n      return this.getDataMaxValueLength() * 10 + 10;\n    },\n    options() {\n      const { seriesData, labels, names, colors } = this.getData();\n      this.rainbow && this.setRainbow(seriesData);\n      seriesData.forEach(item => {\n        item.barMaxWidth = this.barMaxWidth;\n      });\n      let options = {\n        animation: this.animation,\n        grid: {\n          containLabel: true,\n          bottom: 10,\n          left: this.gridLeft,\n          right: this.gridRight\n        },\n        xAxis: {\n          name: this.xName,\n          type: this.horizontal ? \"value\" : \"category\",\n          data: labels,\n          splitLine: {\n            show: this.horizontal,\n            lineStyle: {\n              type: \"dashed\"\n            }\n          }\n        },\n        yAxis: {\n          name: this.horizontal\n            ? this.yName\n            : this.yName && this.yName.split(\"\").join(\"\\n\"),\n          nameLocation: this.yAxisNameLocation,\n          nameRotate: 0.1,\n          nameGap: this.yAxisNameGap,\n          type: this.horizontal ? \"category\" : \"value\",\n          data: labels,\n\n          splitLine: {\n            show: !this.horizontal,\n            lineStyle: {\n              type: \"dashed\"\n            }\n          }\n        },\n        legend: {\n          show: this.legendShow,\n          data: names,\n          type: \"scroll\",\n          width: \"70%\",\n          right: \"10px\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            animation: false\n          }\n        },\n        series: seriesData\n      };\n\n      this.labelRotate && this.setxNameRotate(options);\n      this.zoom && this.setZoom(options);\n      this.colors.length > 0 && this.setColor(options);\n\n      return {\n        ...options,\n        ...this.option\n      };\n    }\n  },\n  methods: {\n    getData() {\n      return bar(this.data);\n    },\n    getDataLabelMaxLength() {\n      const { labels } = this.getData();\n      return Math.max(...labels.map(i => i.length));\n    },\n    getDataMaxValueLength() {\n      const { seriesData } = this.getData();\n      const allData = flattenDeep(seriesData.map(item => item.data));\n      return `${Math.max(...allData)}`.length;\n    },\n    setxNameRotate(options) {\n      options.xAxis.axisLabel = {\n        ...options.xAxis.axisLabel,\n        interval: 0,\n        rotate: this.labelRotateDeg\n      };\n    },\n    setRainbow(seriesData) {\n      seriesData.forEach(item => {\n        item.itemStyle = {\n          normal: {\n            color: params => {\n              const colors =\n                this.colors.length > 0 ? this.colors : DEFAULT_COLORS;\n              const index = params.dataIndex % colors.length;\n              return colors[index];\n            }\n          }\n        };\n      });\n    },\n    setColor(options) {\n      options.color = this.colors;\n    },\n\n    setZoom(options) {\n      let slider = this.horizontal\n        ? {\n            ...slider,\n            yAxisIndex: 0,\n            top: 30,\n            bottom: 30,\n            left: 20\n          }\n        : {\n            type: \"slider\",\n            bottom: 0,\n            right: 10\n          };\n      options.dataZoom = [\n        {\n          disabled: this.horizontal,\n          type: \"inside\",\n          start: this.zoomRange[0] || 0,\n          end: this.zoomRange[1] || 100\n        },\n        {\n          ...slider\n        }\n      ];\n      options.grid = {\n        ...options.grid,\n        bottom: 40\n      };\n    }\n  }\n};\n</script>\n"]}]}