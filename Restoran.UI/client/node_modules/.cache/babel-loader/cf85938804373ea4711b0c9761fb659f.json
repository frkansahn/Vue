{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-engine\\src\\view\\emptyelement.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-engine\\src\\view\\emptyelement.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOlxcVXNlcnNcXHBjXFxEZXNrdG9wXFxSZXN0b3JhblxcUmVzdG9yYW5cXFJlc3RvcmFuLlVJXFxjbGllbnRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJDOlxcVXNlcnNcXHBjXFxEZXNrdG9wXFxSZXN0b3JhblxcUmVzdG9yYW5cXFJlc3RvcmFuLlVJXFxjbGllbnRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gIkM6XFxVc2Vyc1xccGNcXERlc2t0b3BcXFJlc3RvcmFuXFxSZXN0b3JhblxcUmVzdG9yYW4uVUlcXGNsaWVudFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiI7CmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAiQzpcXFVzZXJzXFxwY1xcRGVza3RvcFxcUmVzdG9yYW5cXFJlc3RvcmFuXFxSZXN0b3Jhbi5VSVxcY2xpZW50XFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9nZXRQcm90b3R5cGVPZiI7CmltcG9ydCBfZ2V0IGZyb20gIkM6XFxVc2Vyc1xccGNcXERlc2t0b3BcXFJlc3RvcmFuXFxSZXN0b3JhblxcUmVzdG9yYW4uVUlcXGNsaWVudFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vZ2V0IjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICJDOlxcVXNlcnNcXHBjXFxEZXNrdG9wXFxSZXN0b3JhblxcUmVzdG9yYW5cXFJlc3RvcmFuLlVJXFxjbGllbnRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKCi8qKgogKiBAbGljZW5zZSBDb3B5cmlnaHQgKGMpIDIwMDMtMjAyMCwgQ0tTb3VyY2UgLSBGcmVkZXJpY28gS25hYmJlbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICogRm9yIGxpY2Vuc2luZywgc2VlIExJQ0VOU0UubWQgb3IgaHR0cHM6Ly9ja2VkaXRvci5jb20vbGVnYWwvY2tlZGl0b3Itb3NzLWxpY2Vuc2UKICovCgovKioKICogQG1vZHVsZSBlbmdpbmUvdmlldy9lbXB0eWVsZW1lbnQKICovCmltcG9ydCBFbGVtZW50IGZyb20gJy4vZWxlbWVudCc7CmltcG9ydCBDS0VkaXRvckVycm9yIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL2NrZWRpdG9yZXJyb3InOwppbXBvcnQgTm9kZSBmcm9tICcuL25vZGUnOwovKioKICogRW1wdHkgZWxlbWVudCBjbGFzcy4gSXQgaXMgdXNlZCB0byByZXByZXNlbnQgZWxlbWVudHMgdGhhdCBjYW5ub3QgY29udGFpbiBhbnkgY2hpbGQgbm9kZXMgKGZvciBleGFtcGxlIGA8aW1nPmAgZWxlbWVudHMpLgogKgogKiBUbyBjcmVhdGUgYSBuZXcgZW1wdHkgZWxlbWVudCB1c2UgdGhlCiAqIHtAbGluayBtb2R1bGU6ZW5naW5lL3ZpZXcvZG93bmNhc3R3cml0ZXJ+RG93bmNhc3RXcml0ZXIjY3JlYXRlRW1wdHlFbGVtZW50IGBkb3duY2FzdFdyaXRlciNjcmVhdGVFbXB0eUVsZW1lbnQoKWB9IG1ldGhvZC4KICoKICogQGV4dGVuZHMgbW9kdWxlOmVuZ2luZS92aWV3L2VsZW1lbnR+RWxlbWVudAogKi8KCnZhciBFbXB0eUVsZW1lbnQgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uIChfRWxlbWVudCkgewogIF9pbmhlcml0cyhFbXB0eUVsZW1lbnQsIF9FbGVtZW50KTsKCiAgLyoqCiAgICogQ3JlYXRlcyBuZXcgaW5zdGFuY2Ugb2YgRW1wdHlFbGVtZW50LgogICAqCiAgICogVGhyb3dzIHtAbGluayBtb2R1bGU6dXRpbHMvY2tlZGl0b3JlcnJvcn5DS0VkaXRvckVycm9yIENLRWRpdG9yRXJyb3J9IGB2aWV3LWVtcHR5ZWxlbWVudC1jYW5ub3QtYWRkYCB3aGVuIHRoaXJkIHBhcmFtZXRlciBpcyBwYXNzZWQsCiAgICogdG8gaW5mb3JtIHRoYXQgdXNhZ2Ugb2YgRW1wdHlFbGVtZW50IGlzIGluY29ycmVjdCAoYWRkaW5nIGNoaWxkIG5vZGVzIHRvIEVtcHR5RWxlbWVudCBpcyBmb3JiaWRkZW4pLgogICAqCiAgICogQHNlZSBtb2R1bGU6ZW5naW5lL3ZpZXcvZG93bmNhc3R3cml0ZXJ+RG93bmNhc3RXcml0ZXIjY3JlYXRlRW1wdHlFbGVtZW50CiAgICogQHByb3RlY3RlZAogICAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS92aWV3L2RvY3VtZW50fkRvY3VtZW50fSBkb2N1bWVudCBUaGUgZG9jdW1lbnQgaW5zdGFuY2UgdG8gd2hpY2ggdGhpcyBlbGVtZW50IGJlbG9uZ3MuCiAgICogQHBhcmFtIHtTdHJpbmd9IG5hbWUgTm9kZSBuYW1lLgogICAqIEBwYXJhbSB7T2JqZWN0fEl0ZXJhYmxlfSBbYXR0cnNdIENvbGxlY3Rpb24gb2YgYXR0cmlidXRlcy4KICAgKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvdmlldy9ub2Rlfk5vZGV8SXRlcmFibGUuPG1vZHVsZTplbmdpbmUvdmlldy9ub2Rlfk5vZGU+fSBbY2hpbGRyZW5dCiAgICogQSBsaXN0IG9mIG5vZGVzIHRvIGJlIGluc2VydGVkIGludG8gY3JlYXRlZCBlbGVtZW50LgogICAqLwogIGZ1bmN0aW9uIEVtcHR5RWxlbWVudChkb2N1bWVudCwgbmFtZSwgYXR0cnMsIGNoaWxkcmVuKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEVtcHR5RWxlbWVudCk7CgogICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoRW1wdHlFbGVtZW50KS5jYWxsKHRoaXMsIGRvY3VtZW50LCBuYW1lLCBhdHRycywgY2hpbGRyZW4pKTsKICAgIC8qKgogICAgICogUmV0dXJucyBgbnVsbGAgYmVjYXVzZSBmaWxsZXIgaXMgbm90IG5lZWRlZCBmb3IgRW1wdHlFbGVtZW50cy4KICAgICAqCiAgICAgKiBAbWV0aG9kICNnZXRGaWxsZXJPZmZzZXQKICAgICAqIEByZXR1cm5zIHtudWxsfSBBbHdheXMgcmV0dXJucyBudWxsLgogICAgICovCgogICAgX3RoaXMuZ2V0RmlsbGVyT2Zmc2V0ID0gZ2V0RmlsbGVyT2Zmc2V0OwogICAgcmV0dXJuIF90aGlzOwogIH0KICAvKioKICAgKiBDaGVja3Mgd2hldGhlciB0aGlzIG9iamVjdCBpcyBvZiB0aGUgZ2l2ZW4uCiAgICoKICAgKgkJZW1wdHlFbGVtZW50LmlzKCAnZW1wdHlFbGVtZW50JyApOyAvLyAtPiB0cnVlCiAgICoJCWVtcHR5RWxlbWVudC5pcyggJ2VsZW1lbnQnICk7IC8vIC0+IHRydWUKICAgKgkJZW1wdHlFbGVtZW50LmlzKCAnbm9kZScgKTsgLy8gLT4gdHJ1ZQogICAqCQllbXB0eUVsZW1lbnQuaXMoICd2aWV3OmVtcHR5RWxlbWVudCcgKTsgLy8gLT4gdHJ1ZQogICAqCQllbXB0eUVsZW1lbnQuaXMoICd2aWV3OmVsZW1lbnQnICk7IC8vIC0+IHRydWUKICAgKgkJZW1wdHlFbGVtZW50LmlzKCAndmlldzpub2RlJyApOyAvLyAtPiB0cnVlCiAgICoKICAgKgkJZW1wdHlFbGVtZW50LmlzKCAnbW9kZWw6ZWxlbWVudCcgKTsgLy8gLT4gZmFsc2UKICAgKgkJZW1wdHlFbGVtZW50LmlzKCAnZG9jdW1lbnRGcmFnbWVudCcgKTsgLy8gLT4gZmFsc2UKICAgKgogICAqIEFzc3VtaW5nIHRoYXQgdGhlIG9iamVjdCBiZWluZyBjaGVja2VkIGlzIGFuIGVtcHR5IGVsZW1lbnQsIHlvdSBjYW4gYWxzbyBjaGVjayBpdHMKICAgKiB7QGxpbmsgbW9kdWxlOmVuZ2luZS92aWV3L2VtcHR5ZWxlbWVudH5FbXB0eUVsZW1lbnQjbmFtZSBuYW1lfToKICAgKgogICAqCQllbXB0eUVsZW1lbnQuaXMoICdpbWcnICk7IC8vIC0+IHRydWUgaWYgdGhpcyBpcyBhIGltZyBlbGVtZW50CiAgICoJCWVtcHR5RWxlbWVudC5pcyggJ2VtcHR5RWxlbWVudCcsICdpbWcnICk7IC8vIC0+IHNhbWUgYXMgYWJvdmUKICAgKgkJdGV4dC5pcyggJ2ltZycgKTsgLT4gZmFsc2UKICAgKgogICAqIHtAbGluayBtb2R1bGU6ZW5naW5lL3ZpZXcvbm9kZX5Ob2RlI2lzIENoZWNrIHRoZSBlbnRpcmUgbGlzdCBvZiB2aWV3IG9iamVjdHN9IHdoaWNoIGltcGxlbWVudCB0aGUgYGlzKClgIG1ldGhvZC4KICAgKgogICAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIFR5cGUgdG8gY2hlY2sgd2hlbiBgbmFtZWAgcGFyYW1ldGVyIGlzIHByZXNlbnQuCiAgICogT3RoZXJ3aXNlLCBpdCBhY3RzIGxpa2UgdGhlIGBuYW1lYCBwYXJhbWV0ZXIuCiAgICogQHBhcmFtIHtTdHJpbmd9IFtuYW1lXSBFbGVtZW50IG5hbWUuCiAgICogQHJldHVybnMge0Jvb2xlYW59CiAgICovCgoKICBfY3JlYXRlQ2xhc3MoRW1wdHlFbGVtZW50LCBbewogICAga2V5OiAiaXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGlzKHR5cGUpIHsKICAgICAgdmFyIG5hbWUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IG51bGw7CiAgICAgIHZhciBjdXRUeXBlID0gdHlwZS5yZXBsYWNlKC9edmlldzovLCAnJyk7CgogICAgICBpZiAoIW5hbWUpIHsKICAgICAgICByZXR1cm4gY3V0VHlwZSA9PSAnZW1wdHlFbGVtZW50JyB8fCBfZ2V0KF9nZXRQcm90b3R5cGVPZihFbXB0eUVsZW1lbnQucHJvdG90eXBlKSwgImlzIiwgdGhpcykuY2FsbCh0aGlzLCB0eXBlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gY3V0VHlwZSA9PSAnZW1wdHlFbGVtZW50JyAmJiBuYW1lID09IHRoaXMubmFtZSB8fCBfZ2V0KF9nZXRQcm90b3R5cGVPZihFbXB0eUVsZW1lbnQucHJvdG90eXBlKSwgImlzIiwgdGhpcykuY2FsbCh0aGlzLCB0eXBlLCBuYW1lKTsKICAgICAgfQogICAgfQogICAgLyoqCiAgICAgKiBPdmVycmlkZXMge0BsaW5rIG1vZHVsZTplbmdpbmUvdmlldy9lbGVtZW50fkVsZW1lbnQjX2luc2VydENoaWxkfSBtZXRob2QuCiAgICAgKiBUaHJvd3Mge0BsaW5rIG1vZHVsZTp1dGlscy9ja2VkaXRvcmVycm9yfkNLRWRpdG9yRXJyb3IgQ0tFZGl0b3JFcnJvcn0gYHZpZXctZW1wdHllbGVtZW50LWNhbm5vdC1hZGRgIHRvIHByZXZlbnQKICAgICAqIGFkZGluZyBhbnkgY2hpbGQgbm9kZXMgdG8gRW1wdHlFbGVtZW50LgogICAgICoKICAgICAqIEBwcm90ZWN0ZWQKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJfaW5zZXJ0Q2hpbGQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9pbnNlcnRDaGlsZChpbmRleCwgbm9kZXMpIHsKICAgICAgaWYgKG5vZGVzICYmIChub2RlcyBpbnN0YW5jZW9mIE5vZGUgfHwgQXJyYXkuZnJvbShub2RlcykubGVuZ3RoID4gMCkpIHsKICAgICAgICAvKioKICAgICAgICAgKiBDYW5ub3QgYWRkIGNoaWxkcmVuIHRvIHtAbGluayBtb2R1bGU6ZW5naW5lL3ZpZXcvZW1wdHllbGVtZW50fkVtcHR5RWxlbWVudH0uCiAgICAgICAgICoKICAgICAgICAgKiBAZXJyb3Igdmlldy1lbXB0eWVsZW1lbnQtY2Fubm90LWFkZAogICAgICAgICAqLwogICAgICAgIHRocm93IG5ldyBDS0VkaXRvckVycm9yKCd2aWV3LWVtcHR5ZWxlbWVudC1jYW5ub3QtYWRkOiBDYW5ub3QgYWRkIGNoaWxkIG5vZGVzIHRvIEVtcHR5RWxlbWVudCBpbnN0YW5jZS4nLCBbdGhpcywgbm9kZXNdKTsKICAgICAgfQogICAgfQogIH1dKTsKCiAgcmV0dXJuIEVtcHR5RWxlbWVudDsKfShFbGVtZW50KTsgLy8gUmV0dXJucyBgbnVsbGAgYmVjYXVzZSBibG9jayBmaWxsZXIgaXMgbm90IG5lZWRlZCBmb3IgRW1wdHlFbGVtZW50cy4KLy8KLy8gQHJldHVybnMge251bGx9CgoKZXhwb3J0IHsgRW1wdHlFbGVtZW50IGFzIGRlZmF1bHQgfTsKCmZ1bmN0aW9uIGdldEZpbGxlck9mZnNldCgpIHsKICByZXR1cm4gbnVsbDsKfQ=="},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-engine/src/view/emptyelement.js"],"names":["Element","CKEditorError","Node","EmptyElement","document","name","attrs","children","getFillerOffset","type","cutType","replace","index","nodes","Array","from","length"],"mappings":";;;;;;;;;;;;AAAA;;;;;AAKA;;;AAIA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA;;;;;;;;;IAQqBC,Y;;;;;AACpB;;;;;;;;;;;;;;AAcA,wBAAaC,QAAb,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,QAApC,EAA+C;AAAA;;AAAA;;AAC9C,sFAAOH,QAAP,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,QAA9B;AAEA;;;;;;;AAMA,UAAKC,eAAL,GAAuBA,eAAvB;AAT8C;AAU9C;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBA2BIC,I,EAAoB;AAAA,UAAdJ,IAAc,uEAAP,IAAO;AACvB,UAAMK,OAAO,GAAGD,IAAI,CAACE,OAAL,CAAc,QAAd,EAAwB,EAAxB,CAAhB;;AACA,UAAK,CAACN,IAAN,EAAa;AACZ,eAAOK,OAAO,IAAI,cAAX,yEAAuCD,IAAvC,CAAP;AACA,OAFD,MAEO;AACN,eAASC,OAAO,IAAI,cAAX,IAA6BL,IAAI,IAAI,KAAKA,IAA5C,yEAAgEI,IAAhE,EAAsEJ,IAAtE,CAAP;AACA;AACD;AAED;;;;;;;;;;iCAOcO,K,EAAOC,K,EAAQ;AAC5B,UAAKA,KAAK,KAAMA,KAAK,YAAYX,IAAjB,IAAyBY,KAAK,CAACC,IAAN,CAAYF,KAAZ,EAAoBG,MAApB,GAA6B,CAA5D,CAAV,EAA4E;AAC3E;;;;;AAKA,cAAM,IAAIf,aAAJ,CACL,gFADK,EAEL,CAAE,IAAF,EAAQY,KAAR,CAFK,CAAN;AAIA;AACD;;;;EAlFwCb,O,GAqF1C;AACA;AACA;;;SAvFqBG,Y;;AAwFrB,SAASK,eAAT,GAA2B;AAC1B,SAAO,IAAP;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/emptyelement\n */\n\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\n\n/**\n * Empty element class. It is used to represent elements that cannot contain any child nodes (for example `<img>` elements).\n *\n * To create a new empty element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class EmptyElement extends Element {\n\t/**\n\t * Creates new instance of EmptyElement.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` when third parameter is passed,\n\t * to inform that usage of EmptyElement is incorrect (adding child nodes to EmptyElement is forbidden).\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createEmptyElement\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( document, name, attrs, children ) {\n\t\tsuper( document, name, attrs, children );\n\n\t\t/**\n\t\t * Returns `null` because filler is not needed for EmptyElements.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {null} Always returns null.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\temptyElement.is( 'emptyElement' ); // -> true\n\t *\t\temptyElement.is( 'element' ); // -> true\n\t *\t\temptyElement.is( 'node' ); // -> true\n\t *\t\temptyElement.is( 'view:emptyElement' ); // -> true\n\t *\t\temptyElement.is( 'view:element' ); // -> true\n\t *\t\temptyElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\temptyElement.is( 'model:element' ); // -> false\n\t *\t\temptyElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an empty element, you can also check its\n\t * {@link module:engine/view/emptyelement~EmptyElement#name name}:\n\t *\n\t *\t\temptyElement.is( 'img' ); // -> true if this is a img element\n\t *\t\temptyElement.is( 'emptyElement', 'img' ); // -> same as above\n\t *\t\ttext.is( 'img' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tconst cutType = type.replace( /^view:/, '' );\n\t\tif ( !name ) {\n\t\t\treturn cutType == 'emptyElement' || super.is( type );\n\t\t} else {\n\t\t\treturn ( cutType == 'emptyElement' && name == this.name ) || super.is( type, name );\n\t\t}\n\t}\n\n\t/**\n\t * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` to prevent\n\t * adding any child nodes to EmptyElement.\n\t *\n\t * @protected\n\t */\n\t_insertChild( index, nodes ) {\n\t\tif ( nodes && ( nodes instanceof Node || Array.from( nodes ).length > 0 ) ) {\n\t\t\t/**\n\t\t\t * Cannot add children to {@link module:engine/view/emptyelement~EmptyElement}.\n\t\t\t *\n\t\t\t * @error view-emptyelement-cannot-add\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-emptyelement-cannot-add: Cannot add child nodes to EmptyElement instance.',\n\t\t\t\t[ this, nodes ]\n\t\t\t);\n\t\t}\n\t}\n}\n\n// Returns `null` because block filler is not needed for EmptyElements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n"]}]}