{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-engine\\src\\view\\placeholder.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-engine\\src\\view\\placeholder.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1581760786382},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-engine/src/view/placeholder.js"],"names":["documentPlaceholders","WeakMap","enablePlaceholder","options","view","element","text","isDirectHost","doc","document","has","set","Map","registerPostFixer","writer","updateDocumentPlaceholders","get","change","disablePlaceholder","placeholders","config","removeAttribute","hostElement","hidePlaceholder","delete","showPlaceholder","hasClass","addClass","removeClass","needsPlaceholder","isAttached","isEmptyish","Array","from","getChildren","some","is","isFocused","viewSelection","selection","selectionAnchor","anchor","parent","wasViewModified","updatePlaceholder","getChildPlaceholderHostSubstitute","getAttribute","setAttribute","childCount","firstChild","getChild"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/placeholder\n */\n\nimport '../../theme/placeholder.css';\n\n// Each document stores information about its placeholder elements and check functions.\nconst documentPlaceholders = new WeakMap();\n\n/**\n * A helper that enables a placeholder on the provided view element (also updates its visibility).\n * The placeholder is a CSS pseudo–element (with a text content) attached to the element.\n *\n * To change the placeholder text, simply call this method again with new options.\n *\n * To disable the placeholder, use {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} helper.\n *\n * @param {Object} [options] Configuration options of the placeholder.\n * @param {module:engine/view/view~View} options.view Editing view instance.\n * @param {module:engine/view/element~Element} options.element Element that will gain a placeholder.\n * See `options.isDirectHost` to learn more.\n * @param {String} options.text Placeholder text.\n * @param {Boolean} [options.isDirectHost=true] If set `false`, the placeholder will not be enabled directly\n * in the passed `element` but in one of its children (selected automatically, i.e. a first empty child element).\n * Useful when attaching placeholders to elements that can host other elements (not just text), for instance,\n * editable root elements.\n */\nexport function enablePlaceholder( options ) {\n\tconst { view, element, text, isDirectHost = true } = options;\n\tconst doc = view.document;\n\n\t// Use a single a single post fixer per—document to update all placeholders.\n\tif ( !documentPlaceholders.has( doc ) ) {\n\t\tdocumentPlaceholders.set( doc, new Map() );\n\n\t\t// If a post-fixer callback makes a change, it should return `true` so other post–fixers\n\t\t// can re–evaluate the document again.\n\t\tdoc.registerPostFixer( writer => updateDocumentPlaceholders( doc, writer ) );\n\t}\n\n\t// Store information about the element placeholder under its document.\n\tdocumentPlaceholders.get( doc ).set( element, {\n\t\ttext,\n\t\tisDirectHost\n\t} );\n\n\t// Update the placeholders right away.\n\tview.change( writer => updateDocumentPlaceholders( doc, writer ) );\n}\n\n/**\n * Disables the placeholder functionality from a given element.\n *\n * See {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} to learn more.\n *\n * @param {module:engine/view/view~View} view\n * @param {module:engine/view/element~Element} element\n */\nexport function disablePlaceholder( view, element ) {\n\tconst doc = element.document;\n\n\tview.change( writer => {\n\t\tif ( !documentPlaceholders.has( doc ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst placeholders = documentPlaceholders.get( doc );\n\t\tconst config = placeholders.get( element );\n\n\t\twriter.removeAttribute( 'data-placeholder', config.hostElement );\n\t\thidePlaceholder( writer, config.hostElement );\n\n\t\tplaceholders.delete( element );\n\t} );\n}\n\n/**\n * Shows a placeholder in the provided element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * **Note**: This helper will blindly show the placeholder directly in the root editable element if\n * one is passed, which could result in a visual clash if the editable element has some children\n * (for instance, an empty paragraph). Use {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`}\n * in that case or make sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\nexport function showPlaceholder( writer, element ) {\n\tif ( !element.hasClass( 'ck-placeholder' ) ) {\n\t\twriter.addClass( 'ck-placeholder', element );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Hides a placeholder in the element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\nexport function hidePlaceholder( writer, element ) {\n\tif ( element.hasClass( 'ck-placeholder' ) ) {\n\t\twriter.removeClass( 'ck-placeholder', element );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Checks if a placeholder should be displayed in the element.\n *\n * **Note**: This helper will blindly check the possibility of showing a placeholder directly in the\n * root editable element if one is passed, which may not be the expected result. If an element can\n * host other elements (not just text), most likely one of its children should be checked instead\n * because it will be the final host for the placeholder. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} in that case or make\n * sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean}\n */\nexport function needsPlaceholder( element ) {\n\tif ( !element.isAttached() ) {\n\t\treturn false;\n\t}\n\n\t// The element is empty only as long as it contains nothing but uiElements.\n\tconst isEmptyish = !Array.from( element.getChildren() )\n\t\t.some( element => !element.is( 'uiElement' ) );\n\n\tconst doc = element.document;\n\n\t// If the element is empty and the document is blurred.\n\tif ( !doc.isFocused && isEmptyish ) {\n\t\treturn true;\n\t}\n\n\tconst viewSelection = doc.selection;\n\tconst selectionAnchor = viewSelection.anchor;\n\n\t// If document is focused and the element is empty but the selection is not anchored inside it.\n\tif ( isEmptyish && selectionAnchor && selectionAnchor.parent !== element ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// Updates all placeholders associated with a document in a post–fixer callback.\n//\n// @private\n// @param { module:engine/view/document~Document} doc\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @returns {Boolean} True if any changes were made to the view document.\nfunction updateDocumentPlaceholders( doc, writer ) {\n\tconst placeholders = documentPlaceholders.get( doc );\n\tlet wasViewModified = false;\n\n\tfor ( const [ element, config ] of placeholders ) {\n\t\tif ( updatePlaceholder( writer, element, config ) ) {\n\t\t\twasViewModified = true;\n\t\t}\n\t}\n\n\treturn wasViewModified;\n}\n\n// Updates a single placeholder in a post–fixer callback.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {module:engine/view/element~Element} element\n// @param {Object} config Configuration of the placeholder\n// @param {String} config.text\n// @param {Boolean} config.isDirectHost\n// @returns {Boolean} True if any changes were made to the view document.\nfunction updatePlaceholder( writer, element, config ) {\n\tconst { text, isDirectHost } = config;\n\n\tconst hostElement = isDirectHost ? element : getChildPlaceholderHostSubstitute( element );\n\tlet wasViewModified = false;\n\n\t// When not a direct host, it could happen that there is no child element\n\t// capable of displaying a placeholder.\n\tif ( !hostElement ) {\n\t\treturn false;\n\t}\n\n\t// Cache the host element. It will be necessary for disablePlaceholder() to know\n\t// which element should have class and attribute removed because, depending on\n\t// the config.isDirectHost value, it could be the element or one of its descendants.\n\tconfig.hostElement = hostElement;\n\n\t// This may be necessary when updating the placeholder text to something else.\n\tif ( hostElement.getAttribute( 'data-placeholder' ) !== text ) {\n\t\twriter.setAttribute( 'data-placeholder', text, hostElement );\n\t\twasViewModified = true;\n\t}\n\n\tif ( needsPlaceholder( hostElement ) ) {\n\t\tif ( showPlaceholder( writer, hostElement ) ) {\n\t\t\twasViewModified = true;\n\t\t}\n\t} else if ( hidePlaceholder( writer, hostElement ) ) {\n\t\twasViewModified = true;\n\t}\n\n\treturn wasViewModified;\n}\n\n// Gets a child element capable of displaying a placeholder if a parent element can host more\n// than just text (for instance, when it is a root editable element). The child element\n// can then be used in other placeholder helpers as a substitute of its parent.\n//\n// @private\n// @param {module:engine/view/element~Element} parent\n// @returns {module:engine/view/element~Element|null}\nfunction getChildPlaceholderHostSubstitute( parent ) {\n\tif ( parent.childCount === 1 ) {\n\t\tconst firstChild = parent.getChild( 0 );\n\n\t\tif ( firstChild.is( 'element' ) && !firstChild.is( 'uiElement' ) ) {\n\t\t\treturn firstChild;\n\t\t}\n\t}\n\n\treturn null;\n}\n"]}]}