{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-basic-styles\\src\\attributecommand.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-basic-styles\\src\\attributecommand.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1581760786382},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-basic-styles/src/attributecommand.js"],"names":["Command","AttributeCommand","editor","attributeKey","model","doc","document","value","_getValueFromFirstAllowedNode","isEnabled","schema","checkAttributeInSelection","selection","options","forceValue","undefined","change","writer","isCollapsed","setSelectionAttribute","removeSelectionAttribute","ranges","getValidRanges","getRanges","range","setAttribute","removeAttribute","hasAttribute","getItems","item","checkAttribute"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/attributecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\n/**\n * An extension of the base {@link module:core/command~Command} class, which provides utilities for a command\n * that toggles a single attribute on a text or an element.\n *\n * `AttributeCommand` uses {@link module:engine/model/document~Document#selection}\n * to decide which nodes (if any) should be changed, and applies or removes the attribute from them.\n *\n * The command checks the {@link module:engine/model/model~Model#schema} to decide if it can be enabled\n * for the current selection and to which nodes the attribute can be applied.\n *\n * @extends module:core/command~Command\n */\nexport default class AttributeCommand extends Command {\n\t/**\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {String} attributeKey Attribute that will be set by the command.\n\t */\n\tconstructor( editor, attributeKey ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The attribute that will be set by the command.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.attributeKey = attributeKey;\n\n\t\t/**\n\t\t * Flag indicating whether the command is active. The command is active when the\n\t\t * {@link module:engine/model/selection~Selection#hasAttribute selection has the attribute} which means that:\n\t\t *\n\t\t * * If the selection is not empty &ndash; That the attribute is set on the first node in the selection that allows this attribute.\n\t\t * * If the selection is empty &ndash; That the selection has the attribute itself (which means that newly typed\n\t\t * text will have this attribute, too).\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #value\n\t\t */\n\t}\n\n\t/**\n\t * Updates the command's {@link #value} and {@link #isEnabled} based on the current selection.\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tthis.value = this._getValueFromFirstAllowedNode();\n\t\tthis.isEnabled = model.schema.checkAttributeInSelection( doc.selection, this.attributeKey );\n\t}\n\n\t/**\n\t * Executes the command &mdash; applies the attribute to the selection or removes it from the selection.\n\t *\n\t * If the command is active (`value == true`), it will remove attributes. Otherwise, it will set attributes.\n\t *\n\t * The execution result differs, depending on the {@link module:engine/model/document~Document#selection}:\n\t *\n\t * * If the selection is on a range, the command applies the attribute to all nodes in that range\n\t * (if they are allowed to have this attribute by the {@link module:engine/model/schema~Schema schema}).\n\t * * If the selection is collapsed in a non-empty node, the command applies the attribute to the\n\t * {@link module:engine/model/document~Document#selection} itself (note that typed characters copy attributes from the selection).\n\t * * If the selection is collapsed in an empty node, the command applies the attribute to the parent node of the selection (note\n\t * that the selection inherits all attributes from a node if it is in an empty node).\n\t *\n\t * @fires execute\n\t * @param {Object} [options] Command options.\n\t * @param {Boolean} [options.forceValue] If set, it will force the command behavior. If `true`, the command will apply the attribute,\n\t * otherwise the command will remove the attribute.\n\t * If not set, the command will look for its current value to decide what it should do.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\t\tconst value = ( options.forceValue === undefined ) ? !this.value : options.forceValue;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tif ( value ) {\n\t\t\t\t\twriter.setSelectionAttribute( this.attributeKey, true );\n\t\t\t\t} else {\n\t\t\t\t\twriter.removeSelectionAttribute( this.attributeKey );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst ranges = model.schema.getValidRanges( selection.getRanges(), this.attributeKey );\n\n\t\t\t\tfor ( const range of ranges ) {\n\t\t\t\t\tif ( value ) {\n\t\t\t\t\t\twriter.setAttribute( this.attributeKey, value, range );\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriter.removeAttribute( this.attributeKey, range );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Checks the attribute value of the first node in the selection that allows the attribute.\n\t * For the collapsed selection returns the selection attribute.\n\t *\n\t * @private\n\t * @returns {Boolean} The attribute value.\n\t */\n\t_getValueFromFirstAllowedNode() {\n\t\tconst model = this.editor.model;\n\t\tconst schema = model.schema;\n\t\tconst selection = model.document.selection;\n\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn selection.hasAttribute( this.attributeKey );\n\t\t}\n\n\t\tfor ( const range of selection.getRanges() ) {\n\t\t\tfor ( const item of range.getItems() ) {\n\t\t\t\tif ( schema.checkAttribute( item, this.attributeKey ) ) {\n\t\t\t\t\treturn item.hasAttribute( this.attributeKey );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"]}]}