{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-typing\\src\\input.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-typing\\src\\input.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1581760786382},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOlxcVXNlcnNcXHBjXFxEZXNrdG9wXFxSZXN0b3JhblxcUmVzdG9yYW5cXFJlc3RvcmFuLlVJXFxjbGllbnRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJDOlxcVXNlcnNcXHBjXFxEZXNrdG9wXFxSZXN0b3JhblxcUmVzdG9yYW5cXFJlc3RvcmFuLlVJXFxjbGllbnRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gIkM6XFxVc2Vyc1xccGNcXERlc2t0b3BcXFJlc3RvcmFuXFxSZXN0b3JhblxcUmVzdG9yYW4uVUlcXGNsaWVudFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiI7CmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAiQzpcXFVzZXJzXFxwY1xcRGVza3RvcFxcUmVzdG9yYW5cXFJlc3RvcmFuXFxSZXN0b3Jhbi5VSVxcY2xpZW50XFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9nZXRQcm90b3R5cGVPZiI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiQzpcXFVzZXJzXFxwY1xcRGVza3RvcFxcUmVzdG9yYW5cXFJlc3RvcmFuXFxSZXN0b3Jhbi5VSVxcY2xpZW50XFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CgovKioKICogQGxpY2Vuc2UgQ29weXJpZ2h0IChjKSAyMDAzLTIwMjAsIENLU291cmNlIC0gRnJlZGVyaWNvIEtuYWJiZW4uIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAqIEZvciBsaWNlbnNpbmcsIHNlZSBMSUNFTlNFLm1kIG9yIGh0dHBzOi8vY2tlZGl0b3IuY29tL2xlZ2FsL2NrZWRpdG9yLW9zcy1saWNlbnNlCiAqLwoKLyoqCiAqIEBtb2R1bGUgdHlwaW5nL2lucHV0CiAqLwppbXBvcnQgUGx1Z2luIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtY29yZS9zcmMvcGx1Z2luJzsKaW1wb3J0IElucHV0Q29tbWFuZCBmcm9tICcuL2lucHV0Y29tbWFuZCc7CmltcG9ydCBpbmplY3RVbnNhZmVLZXlzdHJva2VzSGFuZGxpbmcgZnJvbSAnLi91dGlscy9pbmplY3R1bnNhZmVrZXlzdHJva2VzaGFuZGxpbmcnOwppbXBvcnQgaW5qZWN0VHlwaW5nTXV0YXRpb25zSGFuZGxpbmcgZnJvbSAnLi91dGlscy9pbmplY3R0eXBpbmdtdXRhdGlvbnNoYW5kbGluZyc7Ci8qKgogKiBIYW5kbGVzIHRleHQgaW5wdXQgY29taW5nIGZyb20gdGhlIGtleWJvYXJkIG9yIG90aGVyIGlucHV0IG1ldGhvZHMuCiAqCiAqIEBleHRlbmRzIG1vZHVsZTpjb3JlL3BsdWdpbn5QbHVnaW4KICovCgp2YXIgSW5wdXQgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uIChfUGx1Z2luKSB7CiAgX2luaGVyaXRzKElucHV0LCBfUGx1Z2luKTsKCiAgZnVuY3Rpb24gSW5wdXQoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSW5wdXQpOwoKICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoSW5wdXQpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKElucHV0LCBbewogICAga2V5OiAiaW5pdCIsCgogICAgLyoqCiAgICAgKiBAaW5oZXJpdERvYwogICAgICovCiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yOyAvLyBUT0RPIFRoZSBhYm92ZSBkZWZhdWx0IGNvbmZpZ3VyYXRpb24gdmFsdWUgc2hvdWxkIGJlIGRlZmluZWQgdXNpbmcgZWRpdG9yLmNvbmZpZy5kZWZpbmUoKSBvbmNlIGl0J3MgZml4ZWQuCgogICAgICB2YXIgaW5wdXRDb21tYW5kID0gbmV3IElucHV0Q29tbWFuZChlZGl0b3IsIGVkaXRvci5jb25maWcuZ2V0KCd0eXBpbmcudW5kb1N0ZXAnKSB8fCAyMCk7CiAgICAgIGVkaXRvci5jb21tYW5kcy5hZGQoJ2lucHV0JywgaW5wdXRDb21tYW5kKTsKICAgICAgaW5qZWN0VW5zYWZlS2V5c3Ryb2tlc0hhbmRsaW5nKGVkaXRvcik7CiAgICAgIGluamVjdFR5cGluZ011dGF0aW9uc0hhbmRsaW5nKGVkaXRvcik7CiAgICB9CiAgICAvKioKICAgICAqIENoZWNrcyBiYXRjaCBpZiBpdCBpcyBhIHJlc3VsdCBvZiB1c2VyIGlucHV0IC0gZS5nLiB0eXBpbmcuCiAgICAgKgogICAgICoJCWNvbnN0IGlucHV0ID0gZWRpdG9yLnBsdWdpbnMuZ2V0KCAnSW5wdXQnICk7CiAgICAgKgogICAgICoJCWVkaXRvci5tb2RlbC5kb2N1bWVudC5vbiggJ2NoYW5nZTpkYXRhJywgKCBldnQsIGJhdGNoICkgPT4gewogICAgICoJCQlpZiAoIGlucHV0LmlzVHlwaW5nKCBiYXRjaCApICkgewogICAgICoJCQkJY29uc29sZS5sb2coICdUaGUgdXNlciB0eXBlZCBzb21ldGhpbmcuLi4nICk7CiAgICAgKgkJCX0KICAgICAqCQl9ICk7CiAgICAgKgogICAgICogKipOb3RlOioqIFRoaXMgbWV0aG9kIGNoZWNrcyBpZiB0aGUgYmF0Y2ggd2FzIGNyZWF0ZWQgdXNpbmcge0BsaW5rIG1vZHVsZTp0eXBpbmcvaW5wdXRjb21tYW5kfklucHV0Q29tbWFuZCAnaW5wdXQnfQogICAgICogY29tbWFuZCBhcyB0eXBpbmcgY2hhbmdlcyBjb21pbmcgZnJvbSB1c2VyIGlucHV0IGFyZSBpbnNlcnRlZCB0byB0aGUgZG9jdW1lbnQgdXNpbmcgdGhhdCBjb21tYW5kLgogICAgICoKICAgICAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9iYXRjaH5CYXRjaH0gYmF0Y2ggQSBiYXRjaCB0byBjaGVjay4KICAgICAqIEByZXR1cm5zIHtCb29sZWFufQogICAgICovCgogIH0sIHsKICAgIGtleTogImlzSW5wdXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGlzSW5wdXQoYmF0Y2gpIHsKICAgICAgdmFyIGlucHV0Q29tbWFuZCA9IHRoaXMuZWRpdG9yLmNvbW1hbmRzLmdldCgnaW5wdXQnKTsKICAgICAgcmV0dXJuIGlucHV0Q29tbWFuZC5fYmF0Y2hlcy5oYXMoYmF0Y2gpOwogICAgfQogIH1dLCBbewogICAga2V5OiAicGx1Z2luTmFtZSIsCgogICAgLyoqCiAgICAgKiBAaW5oZXJpdERvYwogICAgICovCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuICdJbnB1dCc7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gSW5wdXQ7Cn0oUGx1Z2luKTsKCmV4cG9ydCB7IElucHV0IGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-typing/src/input.js"],"names":["Plugin","InputCommand","injectUnsafeKeystrokesHandling","injectTypingMutationsHandling","Input","editor","inputCommand","config","get","commands","add","batch","_batches","has"],"mappings":";;;;;;AAAA;;;;;AAKA;;;AAIA,OAAOA,MAAP,MAAmB,qCAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,8BAAP,MAA2C,wCAA3C;AACA,OAAOC,6BAAP,MAA0C,uCAA1C;AAEA;;;;;;IAKqBC,K;;;;;;;;;;;;;;AAQpB;;;2BAGO;AACN,UAAMC,MAAM,GAAG,KAAKA,MAApB,CADM,CAGN;;AACA,UAAMC,YAAY,GAAG,IAAIL,YAAJ,CAAkBI,MAAlB,EAA0BA,MAAM,CAACE,MAAP,CAAcC,GAAd,CAAmB,iBAAnB,KAA0C,EAApE,CAArB;AAEAH,MAAAA,MAAM,CAACI,QAAP,CAAgBC,GAAhB,CAAqB,OAArB,EAA8BJ,YAA9B;AAEAJ,MAAAA,8BAA8B,CAAEG,MAAF,CAA9B;AACAF,MAAAA,6BAA6B,CAAEE,MAAF,CAA7B;AACA;AAED;;;;;;;;;;;;;;;;;;;;4BAiBSM,K,EAAQ;AAChB,UAAML,YAAY,GAAG,KAAKD,MAAL,CAAYI,QAAZ,CAAqBD,GAArB,CAA0B,OAA1B,CAArB;AAEA,aAAOF,YAAY,CAACM,QAAb,CAAsBC,GAAtB,CAA2BF,KAA3B,CAAP;AACA;;;;AA3CD;;;wBAGwB;AACvB,aAAO,OAAP;AACA;;;;EANiCX,M;;SAAdI,K","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/input\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport InputCommand from './inputcommand';\n\nimport injectUnsafeKeystrokesHandling from './utils/injectunsafekeystrokeshandling';\nimport injectTypingMutationsHandling from './utils/injecttypingmutationshandling';\n\n/**\n * Handles text input coming from the keyboard or other input methods.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Input extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Input';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// TODO The above default configuration value should be defined using editor.config.define() once it's fixed.\n\t\tconst inputCommand = new InputCommand( editor, editor.config.get( 'typing.undoStep' ) || 20 );\n\n\t\teditor.commands.add( 'input', inputCommand );\n\n\t\tinjectUnsafeKeystrokesHandling( editor );\n\t\tinjectTypingMutationsHandling( editor );\n\t}\n\n\t/**\n\t * Checks batch if it is a result of user input - e.g. typing.\n\t *\n\t *\t\tconst input = editor.plugins.get( 'Input' );\n\t *\n\t *\t\teditor.model.document.on( 'change:data', ( evt, batch ) => {\n\t *\t\t\tif ( input.isTyping( batch ) ) {\n\t *\t\t\t\tconsole.log( 'The user typed something...' );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * **Note:** This method checks if the batch was created using {@link module:typing/inputcommand~InputCommand 'input'}\n\t * command as typing changes coming from user input are inserted to the document using that command.\n\t *\n\t * @param {module:engine/model/batch~Batch} batch A batch to check.\n\t * @returns {Boolean}\n\t */\n\tisInput( batch ) {\n\t\tconst inputCommand = this.editor.commands.get( 'input' );\n\n\t\treturn inputCommand._batches.has( batch );\n\t}\n}\n"]}]}