{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-widget\\src\\widget.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-widget\\src\\widget.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1581760786382},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-widget/src/widget.js"],"names":["Plugin","MouseObserver","getLabel","isWidget","WIDGET_SELECTED_CLASS_NAME","getCode","keyCodes","parseKeystroke","env","selectAllKeystrokeCode","Widget","view","editor","editing","viewDocument","document","_previouslySelected","Set","downcastDispatcher","on","evt","data","conversionApi","_clearPreviouslySelectedWidgets","writer","viewWriter","viewSelection","selection","selectedElement","getSelectedElement","lastMarked","getRanges","range","value","node","item","isChild","addClass","add","setSelection","fake","label","priority","addObserver","listenTo","_onMousedown","_onKeydown","_handleDelete","direction","preventDefault","stop","eventInfo","domEventData","element","target","isInsideNestedEditable","isSafari","domEvent","detail","mapper","modelElement","toModelElement","model","change","findAncestor","isFocused","focus","_setSelectionOverElement","keyCode","isLtrContent","locale","contentLanguageDirection","isForward","arrowdown","wasHandled","isArrowKeyCode","_handleArrowKeys","isSelectAllKeyCode","_selectAllNestedEditableContent","_selectAllContent","enter","_handleEnterKey","shiftKey","isReadOnly","modelDocument","modelSelection","isCollapsed","objectElement","_getObjectElementNextToSelection","previousNode","anchor","parent","isEmpty","nodeToRemove","remove","schema","isObject","position","getLastPosition","getFirstPosition","newRange","getNearestSelectionRange","objectElement2","isBackwards","shouldInsertParagraph","createPositionAt","paragraph","createElement","isBlock","paragraphLimit","findAllowedParent","split","insert","documentSelection","limitElement","getLimitElement","getFirstRange","root","createRangeIn","widgetParent","createRangeOn","forward","probe","createSelection","modifySelection","nodeBefore","nodeAfter","widget","removeClass","clear","arrowright","arrowleft","arrowup","is","Array","from","getAncestors","includes","isInline"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module widget/widget\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport MouseObserver from '@ckeditor/ckeditor5-engine/src/view/observer/mouseobserver';\nimport { getLabel, isWidget, WIDGET_SELECTED_CLASS_NAME } from './utils';\nimport { getCode, keyCodes, parseKeystroke } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\nimport '../theme/widget.css';\n\nconst selectAllKeystrokeCode = parseKeystroke( 'Ctrl+A' );\n\n/**\n * The widget plugin. It enables base support for widgets.\n *\n * See {@glink api/widget package page} for more details and documentation.\n *\n * This plugin enables multiple behaviors required by widgets:\n *\n * * The model to view selection converter for the editing pipeline (it handles widget custom selection rendering).\n * If a converted selection wraps around a widget element, that selection is marked as\n * {@link module:engine/view/selection~Selection#isFake fake}. Additionally, the `ck-widget_selected` CSS class\n * is added to indicate that widget has been selected.\n * * The mouse and keyboard events handling on and around widget elements.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Widget extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Widget';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst view = this.editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t/**\n\t\t * Holds previously selected widgets.\n\t\t *\n\t\t * @private\n\t\t * @type {Set.<module:engine/view/element~Element>}\n\t\t */\n\t\tthis._previouslySelected = new Set();\n\n\t\t// Model to view selection converter.\n\t\t// Converts selection placed over widget element to fake selection\n\t\tthis.editor.editing.downcastDispatcher.on( 'selection', ( evt, data, conversionApi ) => {\n\t\t\t// Remove selected class from previously selected widgets.\n\t\t\tthis._clearPreviouslySelectedWidgets( conversionApi.writer );\n\n\t\t\tconst viewWriter = conversionApi.writer;\n\t\t\tconst viewSelection = viewWriter.document.selection;\n\t\t\tconst selectedElement = viewSelection.getSelectedElement();\n\t\t\tlet lastMarked = null;\n\n\t\t\tfor ( const range of viewSelection.getRanges() ) {\n\t\t\t\tfor ( const value of range ) {\n\t\t\t\t\tconst node = value.item;\n\n\t\t\t\t\t// Do not mark nested widgets in selected one. See: #57.\n\t\t\t\t\tif ( isWidget( node ) && !isChild( node, lastMarked ) ) {\n\t\t\t\t\t\tviewWriter.addClass( WIDGET_SELECTED_CLASS_NAME, node );\n\n\t\t\t\t\t\tthis._previouslySelected.add( node );\n\t\t\t\t\t\tlastMarked = node;\n\n\t\t\t\t\t\t// Check if widget is a single element selected.\n\t\t\t\t\t\tif ( node == selectedElement ) {\n\t\t\t\t\t\t\tviewWriter.setSelection( viewSelection.getRanges(), { fake: true, label: getLabel( selectedElement ) } );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t// If mouse down is pressed on widget - create selection over whole widget.\n\t\tview.addObserver( MouseObserver );\n\t\tthis.listenTo( viewDocument, 'mousedown', ( ...args ) => this._onMousedown( ...args ) );\n\n\t\t// Handle custom keydown behaviour.\n\t\tthis.listenTo( viewDocument, 'keydown', ( ...args ) => this._onKeydown( ...args ), { priority: 'high' } );\n\n\t\t// Handle custom delete behaviour.\n\t\tthis.listenTo( viewDocument, 'delete', ( evt, data ) => {\n\t\t\tif ( this._handleDelete( data.direction == 'forward' ) ) {\n\t\t\t\tdata.preventDefault();\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Handles {@link module:engine/view/document~Document#event:mousedown mousedown} events on widget elements.\n\t *\n\t * @private\n\t * @param {module:utils/eventinfo~EventInfo} eventInfo\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData\n\t */\n\t_onMousedown( eventInfo, domEventData ) {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\t\tlet element = domEventData.target;\n\n\t\t// Do nothing for single or double click inside nested editable.\n\t\tif ( isInsideNestedEditable( element ) ) {\n\t\t\t// But at least triple click inside nested editable causes broken selection in Safari.\n\t\t\t// For such event, we select the entire nested editable element.\n\t\t\t// See: https://github.com/ckeditor/ckeditor5/issues/1463.\n\t\t\tif ( env.isSafari && domEventData.domEvent.detail >= 3 ) {\n\t\t\t\tconst mapper = editor.editing.mapper;\n\t\t\t\tconst modelElement = mapper.toModelElement( element );\n\n\t\t\t\tthis.editor.model.change( writer => {\n\t\t\t\t\tdomEventData.preventDefault();\n\t\t\t\t\twriter.setSelection( modelElement, 'in' );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// If target is not a widget element - check if one of the ancestors is.\n\t\tif ( !isWidget( element ) ) {\n\t\t\telement = element.findAncestor( isWidget );\n\n\t\t\tif ( !element ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tdomEventData.preventDefault();\n\n\t\t// Focus editor if is not focused already.\n\t\tif ( !viewDocument.isFocused ) {\n\t\t\tview.focus();\n\t\t}\n\n\t\t// Create model selection over widget.\n\t\tconst modelElement = editor.editing.mapper.toModelElement( element );\n\n\t\tthis._setSelectionOverElement( modelElement );\n\t}\n\n\t/**\n\t * Handles {@link module:engine/view/document~Document#event:keydown keydown} events.\n\t *\n\t * @private\n\t * @param {module:utils/eventinfo~EventInfo} eventInfo\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData\n\t */\n\t_onKeydown( eventInfo, domEventData ) {\n\t\tconst keyCode = domEventData.keyCode;\n\t\tconst isLtrContent = this.editor.locale.contentLanguageDirection === 'ltr';\n\t\tconst isForward = keyCode == keyCodes.arrowdown || keyCode == keyCodes[ isLtrContent ? 'arrowright' : 'arrowleft' ];\n\t\tlet wasHandled = false;\n\n\t\t// Checks if the keys were handled and then prevents the default event behaviour and stops\n\t\t// the propagation.\n\t\tif ( isArrowKeyCode( keyCode ) ) {\n\t\t\twasHandled = this._handleArrowKeys( isForward );\n\t\t} else if ( isSelectAllKeyCode( domEventData ) ) {\n\t\t\twasHandled = this._selectAllNestedEditableContent() || this._selectAllContent();\n\t\t} else if ( keyCode === keyCodes.enter ) {\n\t\t\twasHandled = this._handleEnterKey( domEventData.shiftKey );\n\t\t}\n\n\t\tif ( wasHandled ) {\n\t\t\tdomEventData.preventDefault();\n\t\t\teventInfo.stop();\n\t\t}\n\t}\n\n\t/**\n\t * Handles delete keys: backspace and delete.\n\t *\n\t * @private\n\t * @param {Boolean} isForward Set to true if delete was performed in forward direction.\n\t * @returns {Boolean|undefined} Returns `true` if keys were handled correctly.\n\t */\n\t_handleDelete( isForward ) {\n\t\t// Do nothing when the read only mode is enabled.\n\t\tif ( this.editor.isReadOnly ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelDocument = this.editor.model.document;\n\t\tconst modelSelection = modelDocument.selection;\n\n\t\t// Do nothing on non-collapsed selection.\n\t\tif ( !modelSelection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst objectElement = this._getObjectElementNextToSelection( isForward );\n\n\t\tif ( objectElement ) {\n\t\t\tthis.editor.model.change( writer => {\n\t\t\t\tlet previousNode = modelSelection.anchor.parent;\n\n\t\t\t\t// Remove previous element if empty.\n\t\t\t\twhile ( previousNode.isEmpty ) {\n\t\t\t\t\tconst nodeToRemove = previousNode;\n\t\t\t\t\tpreviousNode = nodeToRemove.parent;\n\n\t\t\t\t\twriter.remove( nodeToRemove );\n\t\t\t\t}\n\n\t\t\t\tthis._setSelectionOverElement( objectElement );\n\t\t\t} );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Handles arrow keys.\n\t *\n\t * @private\n\t * @param {Boolean} isForward Set to true if arrow key should be handled in forward direction.\n\t * @returns {Boolean|undefined} Returns `true` if keys were handled correctly.\n\t */\n\t_handleArrowKeys( isForward ) {\n\t\tconst model = this.editor.model;\n\t\tconst schema = model.schema;\n\t\tconst modelDocument = model.document;\n\t\tconst modelSelection = modelDocument.selection;\n\t\tconst objectElement = modelSelection.getSelectedElement();\n\n\t\t// If object element is selected.\n\t\tif ( objectElement && schema.isObject( objectElement ) ) {\n\t\t\tconst position = isForward ? modelSelection.getLastPosition() : modelSelection.getFirstPosition();\n\t\t\tconst newRange = schema.getNearestSelectionRange( position, isForward ? 'forward' : 'backward' );\n\n\t\t\tif ( newRange ) {\n\t\t\t\tmodel.change( writer => {\n\t\t\t\t\twriter.setSelection( newRange );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// If selection is next to object element.\n\t\t// Return if not collapsed.\n\t\tif ( !modelSelection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst objectElement2 = this._getObjectElementNextToSelection( isForward );\n\n\t\tif ( !!objectElement2 && schema.isObject( objectElement2 ) ) {\n\t\t\tthis._setSelectionOverElement( objectElement2 );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Handles the enter key, giving users and access to positions in the editable directly before\n\t * (<kbd>Shift</kbd>+<kbd>Enter</kbd>) or after (<kbd>Enter</kbd>) the selected widget.\n\t * It improves the UX, mainly when the widget is the first or last child of the root editable\n\t * and there's no other way to type after or before it.\n\t *\n\t * @private\n\t * @param {Boolean} isBackwards Set to true if the new paragraph is to be inserted before\n\t * the selected widget (<kbd>Shift</kbd>+<kbd>Enter</kbd>).\n\t * @returns {Boolean|undefined} Returns `true` if keys were handled correctly.\n\t */\n\t_handleEnterKey( isBackwards ) {\n\t\tconst model = this.editor.model;\n\t\tconst modelSelection = model.document.selection;\n\t\tconst selectedElement = modelSelection.getSelectedElement();\n\n\t\tif ( shouldInsertParagraph( selectedElement, model.schema ) ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\tlet position = writer.createPositionAt( selectedElement, isBackwards ? 'before' : 'after' );\n\t\t\t\tconst paragraph = writer.createElement( 'paragraph' );\n\n\t\t\t\t// Split the parent when inside a block element.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5/issues/1529\n\t\t\t\tif ( model.schema.isBlock( selectedElement.parent ) ) {\n\t\t\t\t\tconst paragraphLimit = model.schema.findAllowedParent( position, paragraph );\n\n\t\t\t\t\tposition = writer.split( position, paragraphLimit ).position;\n\t\t\t\t}\n\n\t\t\t\twriter.insert( paragraph, position );\n\t\t\t\twriter.setSelection( paragraph, 'in' );\n\t\t\t} );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Extends the {@link module:engine/model/selection~Selection document's selection} to span the entire\n\t * content of the nested editable if already anchored in one.\n\t *\n\t * See: {@link module:engine/model/schema~Schema#getLimitElement}.\n\t *\n\t * @private\n\t */\n\t_selectAllNestedEditableContent() {\n\t\tconst model = this.editor.model;\n\t\tconst documentSelection = model.document.selection;\n\t\tconst limitElement = model.schema.getLimitElement( documentSelection );\n\n\t\tif ( documentSelection.getFirstRange().root == limitElement ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tmodel.change( writer => {\n\t\t\twriter.setSelection( writer.createRangeIn( limitElement ) );\n\t\t} );\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Handles <kbd>CTRL + A</kbd> when widget is selected.\n\t *\n\t * @private\n\t * @returns {Boolean} Returns true if widget was selected and selecting all was handled by this method.\n\t */\n\t_selectAllContent() {\n\t\tconst model = this.editor.model;\n\t\tconst editing = this.editor.editing;\n\t\tconst view = editing.view;\n\t\tconst viewDocument = view.document;\n\t\tconst viewSelection = viewDocument.selection;\n\n\t\tconst selectedElement = viewSelection.getSelectedElement();\n\n\t\t// Only widget is selected.\n\t\t// https://github.com/ckeditor/ckeditor5-widget/issues/23\n\t\tif ( selectedElement && isWidget( selectedElement ) ) {\n\t\t\tconst widgetParent = editing.mapper.toModelElement( selectedElement.parent );\n\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.setSelection( writer.createRangeIn( widgetParent ) );\n\t\t\t} );\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Sets {@link module:engine/model/selection~Selection document's selection} over given element.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} element\n\t */\n\t_setSelectionOverElement( element ) {\n\t\tthis.editor.model.change( writer => {\n\t\t\twriter.setSelection( writer.createRangeOn( element ) );\n\t\t} );\n\t}\n\n\t/**\n\t * Checks if {@link module:engine/model/element~Element element} placed next to the current\n\t * {@link module:engine/model/selection~Selection model selection} exists and is marked in\n\t * {@link module:engine/model/schema~Schema schema} as `object`.\n\t *\n\t * @private\n\t * @param {Boolean} forward Direction of checking.\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\t_getObjectElementNextToSelection( forward ) {\n\t\tconst model = this.editor.model;\n\t\tconst schema = model.schema;\n\t\tconst modelSelection = model.document.selection;\n\n\t\t// Clone current selection to use it as a probe. We must leave default selection as it is so it can return\n\t\t// to its current state after undo.\n\t\tconst probe = model.createSelection( modelSelection );\n\t\tmodel.modifySelection( probe, { direction: forward ? 'forward' : 'backward' } );\n\t\tconst objectElement = forward ? probe.focus.nodeBefore : probe.focus.nodeAfter;\n\n\t\tif ( !!objectElement && schema.isObject( objectElement ) ) {\n\t\t\treturn objectElement;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Removes CSS class from previously selected widgets.\n\t *\n\t * @private\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n\t */\n\t_clearPreviouslySelectedWidgets( writer ) {\n\t\tfor ( const widget of this._previouslySelected ) {\n\t\t\twriter.removeClass( WIDGET_SELECTED_CLASS_NAME, widget );\n\t\t}\n\n\t\tthis._previouslySelected.clear();\n\t}\n}\n\n// Returns 'true' if provided key code represents one of the arrow keys.\n//\n// @param {Number} keyCode\n// @returns {Boolean}\nfunction isArrowKeyCode( keyCode ) {\n\treturn keyCode == keyCodes.arrowright ||\n\t\tkeyCode == keyCodes.arrowleft ||\n\t\tkeyCode == keyCodes.arrowup ||\n\t\tkeyCode == keyCodes.arrowdown;\n}\n\n// Returns 'true' if provided (DOM) key event data corresponds with the Ctrl+A keystroke.\n//\n// @param {module:engine/view/observer/keyobserver~KeyEventData} domEventData\n// @returns {Boolean}\nfunction isSelectAllKeyCode( domEventData ) {\n\treturn getCode( domEventData ) == selectAllKeystrokeCode;\n}\n\n// Returns `true` when element is a nested editable or is placed inside one.\n//\n// @param {module:engine/view/element~Element}\n// @returns {Boolean}\nfunction isInsideNestedEditable( element ) {\n\twhile ( element ) {\n\t\tif ( element.is( 'editableElement' ) && !element.is( 'rootElement' ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Click on nested widget should select it.\n\t\tif ( isWidget( element ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\telement = element.parent;\n\t}\n\n\treturn false;\n}\n\n// Checks whether the specified `element` is a child of the `parent` element.\n//\n// @param {module:engine/view/element~Element} element An element to check.\n// @param {module:engine/view/element~Element|null} parent A parent for the element.\n// @returns {Boolean}\nfunction isChild( element, parent ) {\n\tif ( !parent ) {\n\t\treturn false;\n\t}\n\n\treturn Array.from( element.getAncestors() ).includes( parent );\n}\n\n// Checks if enter key should insert paragraph. This should be done only on elements of type object (excluding inline objects).\n//\n// @param {module:engine/model/element~Element} element And element to check.\n// @param {module:engine/model/schema~Schema} schema\nfunction shouldInsertParagraph( element, schema ) {\n\treturn element && schema.isObject( element ) && !schema.isInline( element );\n}\n"]}]}