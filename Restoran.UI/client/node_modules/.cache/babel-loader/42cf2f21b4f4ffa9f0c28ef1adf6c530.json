{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-link\\src\\linkcommand.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-link\\src\\linkcommand.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1581760786382},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-link/src/linkcommand.js"],"names":["Command","findLinkRange","toMap","Collection","LinkCommand","editor","manualDecorators","manualDecorator","value","_getDecoratorStateFromModel","id","model","doc","document","selection","getAttribute","isEnabled","schema","checkAttributeInSelection","href","manualDecoratorIds","truthyManualDecorators","falsyManualDecorators","name","push","change","writer","isCollapsed","position","getFirstPosition","hasAttribute","linkRange","setAttribute","forEach","item","removeAttribute","setSelection","attributes","getAttributes","set","node","createText","insertContent","createRangeOn","ranges","getValidRanges","getRanges","range","decoratorName"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/linkcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport findLinkRange from './findlinkrange';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\n\n/**\n * The link command. It is used by the {@link module:link/link~Link link feature}.\n *\n * @extends module:core/command~Command\n */\nexport default class LinkCommand extends Command {\n\t/**\n\t * The value of the `'linkHref'` attribute if the start of the selection is located in a node with this attribute.\n\t *\n\t * @observable\n\t * @readonly\n\t * @member {Object|undefined} #value\n\t */\n\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * A collection of {@link module:link/utils~ManualDecorator manual decorators}\n\t\t * corresponding to the {@link module:link/link~LinkConfig#decorators decorator configuration}.\n\t\t *\n\t\t * You can consider it a model with states of manual decorators added to the currently selected link.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:utils/collection~Collection}\n\t\t */\n\t\tthis.manualDecorators = new Collection();\n\t}\n\n\t/**\n\t * Synchronizes the state of {@link #manualDecorators} with the currently present elements in the model.\n\t */\n\trestoreManualDecoratorStates() {\n\t\tfor ( const manualDecorator of this.manualDecorators ) {\n\t\t\tmanualDecorator.value = this._getDecoratorStateFromModel( manualDecorator.id );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tthis.value = doc.selection.getAttribute( 'linkHref' );\n\n\t\tfor ( const manualDecorator of this.manualDecorators ) {\n\t\t\tmanualDecorator.value = this._getDecoratorStateFromModel( manualDecorator.id );\n\t\t}\n\n\t\tthis.isEnabled = model.schema.checkAttributeInSelection( doc.selection, 'linkHref' );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * When the selection is non-collapsed, the `linkHref` attribute will be applied to nodes inside the selection, but only to\n\t * those nodes where the `linkHref` attribute is allowed (disallowed nodes will be omitted).\n\t *\n\t * When the selection is collapsed and is not inside the text with the `linkHref` attribute, a\n\t * new {@link module:engine/model/text~Text text node} with the `linkHref` attribute will be inserted in place of the caret, but\n\t * only if such element is allowed in this place. The `_data` of the inserted text will equal the `href` parameter.\n\t * The selection will be updated to wrap the just inserted text node.\n\t *\n\t * When the selection is collapsed and inside the text with the `linkHref` attribute, the attribute value will be updated.\n\t *\n\t * # Decorators and model attribute management\n\t *\n\t * There is an optional argument to this command that applies or removes model\n\t * {@glink framework/guides/architecture/editing-engine#text-attributes text attributes} brought by\n\t * {@link module:link/utils~ManualDecorator manual link decorators}.\n\t *\n\t * Text attribute names in the model correspond to the entries in the {@link module:link/link~LinkConfig#decorators configuration}.\n\t * For every decorator configured, a model text attribute exists with the \"link\" prefix. For example, a `'linkMyDecorator'` attribute\n\t * corresponds to `'myDecorator'` in the configuration.\n\t *\n\t * To learn more about link decorators, check out the {@link module:link/link~LinkConfig#decorators `config.link.decorators`}\n\t * documentation.\n\t *\n\t * Here is how to manage decorator attributes with the link command:\n\t *\n\t *\t\tconst linkCommand = editor.commands.get( 'link' );\n\t *\n\t *\t\t// Adding a new decorator attribute.\n\t *\t\tlinkCommand.execute( 'http://example.com', {\n\t *\t\t\tlinkIsExternal: true\n\t *\t\t} );\n\t *\n\t *\t\t// Removing a decorator attribute from the selection.\n\t *\t\tlinkCommand.execute( 'http://example.com', {\n\t *\t\t\tlinkIsExternal: false\n\t *\t\t} );\n\t *\n\t *\t\t// Adding multiple decorator attributes at the same time.\n\t *\t\tlinkCommand.execute( 'http://example.com', {\n\t *\t\t\tlinkIsExternal: true,\n\t *\t\t\tlinkIsDownloadable: true,\n\t *\t\t} );\n\t *\n\t *\t\t// Removing and adding decorator attributes at the same time.\n\t *\t\tlinkCommand.execute( 'http://example.com', {\n\t *\t\t\tlinkIsExternal: false,\n\t *\t\t\tlinkFoo: true,\n\t *\t\t\tlinkIsDownloadable: false,\n\t *\t\t} );\n\t *\n\t * **Note**: If the decorator attribute name is not specified, its state remains untouched.\n\t *\n\t * **Note**: {@link module:link/unlinkcommand~UnlinkCommand#execute `UnlinkCommand#execute()`} removes all\n\t * decorator attributes.\n\t *\n\t * @fires execute\n\t * @param {String} href Link destination.\n\t * @param {Object} [manualDecoratorIds={}] The information about manual decorator attributes to be applied or removed upon execution.\n\t */\n\texecute( href, manualDecoratorIds = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\t// Stores information about manual decorators to turn them on/off when command is applied.\n\t\tconst truthyManualDecorators = [];\n\t\tconst falsyManualDecorators = [];\n\n\t\tfor ( const name in manualDecoratorIds ) {\n\t\t\tif ( manualDecoratorIds[ name ] ) {\n\t\t\t\ttruthyManualDecorators.push( name );\n\t\t\t} else {\n\t\t\t\tfalsyManualDecorators.push( name );\n\t\t\t}\n\t\t}\n\n\t\tmodel.change( writer => {\n\t\t\t// If selection is collapsed then update selected link or insert new one at the place of caret.\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tconst position = selection.getFirstPosition();\n\n\t\t\t\t// When selection is inside text with `linkHref` attribute.\n\t\t\t\tif ( selection.hasAttribute( 'linkHref' ) ) {\n\t\t\t\t\t// Then update `linkHref` value.\n\t\t\t\t\tconst linkRange = findLinkRange( position, selection.getAttribute( 'linkHref' ), model );\n\n\t\t\t\t\twriter.setAttribute( 'linkHref', href, linkRange );\n\n\t\t\t\t\ttruthyManualDecorators.forEach( item => {\n\t\t\t\t\t\twriter.setAttribute( item, true, linkRange );\n\t\t\t\t\t} );\n\n\t\t\t\t\tfalsyManualDecorators.forEach( item => {\n\t\t\t\t\t\twriter.removeAttribute( item, linkRange );\n\t\t\t\t\t} );\n\n\t\t\t\t\t// Create new range wrapping changed link.\n\t\t\t\t\twriter.setSelection( linkRange );\n\t\t\t\t}\n\t\t\t\t// If not then insert text node with `linkHref` attribute in place of caret.\n\t\t\t\t// However, since selection in collapsed, attribute value will be used as data for text node.\n\t\t\t\t// So, if `href` is empty, do not create text node.\n\t\t\t\telse if ( href !== '' ) {\n\t\t\t\t\tconst attributes = toMap( selection.getAttributes() );\n\n\t\t\t\t\tattributes.set( 'linkHref', href );\n\n\t\t\t\t\ttruthyManualDecorators.forEach( item => {\n\t\t\t\t\t\tattributes.set( item, true );\n\t\t\t\t\t} );\n\n\t\t\t\t\tconst node = writer.createText( href, attributes );\n\n\t\t\t\t\tmodel.insertContent( node, position );\n\n\t\t\t\t\t// Create new range wrapping created node.\n\t\t\t\t\twriter.setSelection( writer.createRangeOn( node ) );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If selection has non-collapsed ranges, we change attribute on nodes inside those ranges\n\t\t\t\t// omitting nodes where `linkHref` attribute is disallowed.\n\t\t\t\tconst ranges = model.schema.getValidRanges( selection.getRanges(), 'linkHref' );\n\n\t\t\t\tfor ( const range of ranges ) {\n\t\t\t\t\twriter.setAttribute( 'linkHref', href, range );\n\n\t\t\t\t\ttruthyManualDecorators.forEach( item => {\n\t\t\t\t\t\twriter.setAttribute( item, true, range );\n\t\t\t\t\t} );\n\n\t\t\t\t\tfalsyManualDecorators.forEach( item => {\n\t\t\t\t\t\twriter.removeAttribute( item, range );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Provides information whether a decorator with a given name is present in the currently processed selection.\n\t *\n\t * @private\n\t * @param {String} decoratorName The name of the manual decorator used in the model\n\t * @returns {Boolean} The information whether a given decorator is currently present in the selection.\n\t */\n\t_getDecoratorStateFromModel( decoratorName ) {\n\t\tconst doc = this.editor.model.document;\n\t\treturn doc.selection.getAttribute( decoratorName ) || false;\n\t}\n}\n"]}]}