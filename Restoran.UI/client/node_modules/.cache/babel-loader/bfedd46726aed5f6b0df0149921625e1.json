{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-ui\\src\\icon\\iconview.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-ui\\src\\icon\\iconview.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0iOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOlxcVXNlcnNcXHBjXFxEZXNrdG9wXFxSZXN0b3JhblxcUmVzdG9yYW5cXFJlc3RvcmFuLlVJXFxjbGllbnRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJDOlxcVXNlcnNcXHBjXFxEZXNrdG9wXFxSZXN0b3JhblxcUmVzdG9yYW5cXFJlc3RvcmFuLlVJXFxjbGllbnRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gIkM6XFxVc2Vyc1xccGNcXERlc2t0b3BcXFJlc3RvcmFuXFxSZXN0b3JhblxcUmVzdG9yYW4uVUlcXGNsaWVudFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiI7CmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAiQzpcXFVzZXJzXFxwY1xcRGVza3RvcFxcUmVzdG9yYW5cXFJlc3RvcmFuXFxSZXN0b3Jhbi5VSVxcY2xpZW50XFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9nZXRQcm90b3R5cGVPZiI7CmltcG9ydCBfZ2V0IGZyb20gIkM6XFxVc2Vyc1xccGNcXERlc2t0b3BcXFJlc3RvcmFuXFxSZXN0b3JhblxcUmVzdG9yYW4uVUlcXGNsaWVudFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vZ2V0IjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICJDOlxcVXNlcnNcXHBjXFxEZXNrdG9wXFxSZXN0b3JhblxcUmVzdG9yYW5cXFJlc3RvcmFuLlVJXFxjbGllbnRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKCi8qKgogKiBAbGljZW5zZSBDb3B5cmlnaHQgKGMpIDIwMDMtMjAyMCwgQ0tTb3VyY2UgLSBGcmVkZXJpY28gS25hYmJlbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICogRm9yIGxpY2Vuc2luZywgc2VlIExJQ0VOU0UubWQgb3IgaHR0cHM6Ly9ja2VkaXRvci5jb20vbGVnYWwvY2tlZGl0b3Itb3NzLWxpY2Vuc2UKICovCgovKiBnbG9iYWwgRE9NUGFyc2VyICovCgovKioKICogQG1vZHVsZSB1aS9pY29uL2ljb252aWV3CiAqLwppbXBvcnQgVmlldyBmcm9tICcuLi92aWV3JzsKaW1wb3J0ICcuLi8uLi90aGVtZS9jb21wb25lbnRzL2ljb24vaWNvbi5jc3MnOwovKioKICogVGhlIGljb24gdmlldyBjbGFzcy4KICoKICogQGV4dGVuZHMgbW9kdWxlOnVpL3ZpZXd+VmlldwogKi8KCnZhciBJY29uVmlldyA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKF9WaWV3KSB7CiAgX2luaGVyaXRzKEljb25WaWV3LCBfVmlldyk7CgogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCiAgZnVuY3Rpb24gSWNvblZpZXcoKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEljb25WaWV3KTsKCiAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihJY29uVmlldykuY2FsbCh0aGlzKSk7CiAgICB2YXIgYmluZCA9IF90aGlzLmJpbmRUZW1wbGF0ZTsKICAgIC8qKgogICAgICogVGhlIFNWRyBzb3VyY2Ugb2YgdGhlIGljb24uCiAgICAgKgogICAgICogQG9ic2VydmFibGUKICAgICAqIEBtZW1iZXIge1N0cmluZ30gI2NvbnRlbnQKICAgICAqLwoKICAgIF90aGlzLnNldCgnY29udGVudCcsICcnKTsKICAgIC8qKgogICAgICogVGhpcyBhdHRyaWJ1dGUgc3BlY2lmaWVzIHRoZSBib3VuZGFyaWVzIHRvIHdoaWNoIHRoZQogICAgICogaWNvbiBjb250ZW50IHNob3VsZCBzdHJldGNoLgogICAgICoKICAgICAqIEBvYnNlcnZhYmxlCiAgICAgKiBAZGVmYXVsdCAnMCAwIDIwIDIwJwogICAgICogQG1lbWJlciB7U3RyaW5nfSAjdmlld0JveAogICAgICovCgoKICAgIF90aGlzLnNldCgndmlld0JveCcsICcwIDAgMjAgMjAnKTsKICAgIC8qKgogICAgICogVGhlIGZpbGwgY29sb3Igb2YgdGhlIGNoaWxkIGBwYXRoLmNrLWljb25fX2ZpbGxgLgogICAgICoKICAgICAqIEBvYnNlcnZhYmxlCiAgICAgKiBAZGVmYXVsdCAnJwogICAgICogQG1lbWJlciB7U3RyaW5nfSAjZmlsbENvbG9yCiAgICAgKi8KCgogICAgX3RoaXMuc2V0KCdmaWxsQ29sb3InLCAnJyk7CgogICAgX3RoaXMuc2V0VGVtcGxhdGUoewogICAgICB0YWc6ICdzdmcnLAogICAgICBuczogJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJywKICAgICAgYXR0cmlidXRlczogewogICAgICAgIGNsYXNzOiBbJ2NrJywgJ2NrLWljb24nXSwKICAgICAgICB2aWV3Qm94OiBiaW5kLnRvKCd2aWV3Qm94JykKICAgICAgfQogICAgfSk7CgogICAgcmV0dXJuIF90aGlzOwogIH0KICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwoKCiAgX2NyZWF0ZUNsYXNzKEljb25WaWV3LCBbewogICAga2V5OiAicmVuZGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgX2dldChfZ2V0UHJvdG90eXBlT2YoSWNvblZpZXcucHJvdG90eXBlKSwgInJlbmRlciIsIHRoaXMpLmNhbGwodGhpcyk7CgogICAgICB0aGlzLl91cGRhdGVYTUxDb250ZW50KCk7CgogICAgICB0aGlzLl9jb2xvckZpbGxQYXRocygpOyAvLyBUaGlzIGlzIGEgaGFjayBmb3IgbGFjayBvZiBpbm5lckhUTUwgYmluZGluZy4KICAgICAgLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vY2tlZGl0b3IvY2tlZGl0b3I1LXVpL2lzc3Vlcy85OS4KCgogICAgICB0aGlzLm9uKCdjaGFuZ2U6Y29udGVudCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIuX3VwZGF0ZVhNTENvbnRlbnQoKTsKCiAgICAgICAgX3RoaXMyLl9jb2xvckZpbGxQYXRocygpOwogICAgICB9KTsKICAgICAgdGhpcy5vbignY2hhbmdlOmZpbGxDb2xvcicsIGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIuX2NvbG9yRmlsbFBhdGhzKCk7CiAgICAgIH0pOwogICAgfQogICAgLyoqCiAgICAgKiBVcGRhdGVzIHRoZSB7QGxpbmsgI2VsZW1lbnR9IHdpdGggdGhlIHZhbHVlIG9mIHtAbGluayAjY29udGVudH0uCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJfdXBkYXRlWE1MQ29udGVudCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX3VwZGF0ZVhNTENvbnRlbnQoKSB7CiAgICAgIGlmICh0aGlzLmNvbnRlbnQpIHsKICAgICAgICB2YXIgcGFyc2VkID0gbmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyh0aGlzLmNvbnRlbnQudHJpbSgpLCAnaW1hZ2Uvc3ZnK3htbCcpOwogICAgICAgIHZhciBzdmcgPSBwYXJzZWQucXVlcnlTZWxlY3Rvcignc3ZnJyk7CiAgICAgICAgdmFyIHZpZXdCb3ggPSBzdmcuZ2V0QXR0cmlidXRlKCd2aWV3Qm94Jyk7CgogICAgICAgIGlmICh2aWV3Qm94KSB7CiAgICAgICAgICB0aGlzLnZpZXdCb3ggPSB2aWV3Qm94OwogICAgICAgIH0KCiAgICAgICAgdGhpcy5lbGVtZW50LmlubmVySFRNTCA9ICcnOwoKICAgICAgICB3aGlsZSAoc3ZnLmNoaWxkTm9kZXMubGVuZ3RoID4gMCkgewogICAgICAgICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKHN2Zy5jaGlsZE5vZGVzWzBdKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICAgIC8qKgogICAgICogRmlsbHMgYWxsIGNoaWxkIGBwYXRoLmNrLWljb25fX2ZpbGxgIHdpdGggdGhlIGAjZmlsbENvbG9yYC4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICovCgogIH0sIHsKICAgIGtleTogIl9jb2xvckZpbGxQYXRocyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX2NvbG9yRmlsbFBhdGhzKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIGlmICh0aGlzLmZpbGxDb2xvcikgewogICAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY2staWNvbl9fZmlsbCcpLmZvckVhY2goZnVuY3Rpb24gKHBhdGgpIHsKICAgICAgICAgIHBhdGguc3R5bGUuZmlsbCA9IF90aGlzMy5maWxsQ29sb3I7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9XSk7CgogIHJldHVybiBJY29uVmlldzsKfShWaWV3KTsKCmV4cG9ydCB7IEljb25WaWV3IGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-ui/src/icon/iconview.js"],"names":["View","IconView","bind","bindTemplate","set","setTemplate","tag","ns","attributes","class","viewBox","to","_updateXMLContent","_colorFillPaths","on","content","parsed","DOMParser","parseFromString","trim","svg","querySelector","getAttribute","element","innerHTML","childNodes","length","appendChild","fillColor","querySelectorAll","forEach","path","style","fill"],"mappings":";;;;;;;;;;;AAAA;;;;;AAKA;;AAEA;;;AAIA,OAAOA,IAAP,MAAiB,SAAjB;AAEA,OAAO,sCAAP;AAEA;;;;;;IAKqBC,Q;;;;;AACpB;;;AAGA,sBAAc;AAAA;;AAAA;;AACb;AAEA,QAAMC,IAAI,GAAG,MAAKC,YAAlB;AAEA;;;;;;;AAMA,UAAKC,GAAL,CAAU,SAAV,EAAqB,EAArB;AAEA;;;;;;;;;;AAQA,UAAKA,GAAL,CAAU,SAAV,EAAqB,WAArB;AAEA;;;;;;;;;AAOA,UAAKA,GAAL,CAAU,WAAV,EAAuB,EAAvB;;AAEA,UAAKC,WAAL,CAAkB;AACjBC,MAAAA,GAAG,EAAE,KADY;AAEjBC,MAAAA,EAAE,EAAE,4BAFa;AAGjBC,MAAAA,UAAU,EAAE;AACXC,QAAAA,KAAK,EAAE,CACN,IADM,EAEN,SAFM,CADI;AAKXC,QAAAA,OAAO,EAAER,IAAI,CAACS,EAAL,CAAS,SAAT;AALE;AAHK,KAAlB;;AAhCa;AA2Cb;AAED;;;;;;;6BAGS;AAAA;;AACR;;AAEA,WAAKC,iBAAL;;AACA,WAAKC,eAAL,GAJQ,CAMR;AACA;;;AACA,WAAKC,EAAL,CAAS,gBAAT,EAA2B,YAAM;AAChC,QAAA,MAAI,CAACF,iBAAL;;AACA,QAAA,MAAI,CAACC,eAAL;AACA,OAHD;AAKA,WAAKC,EAAL,CAAS,kBAAT,EAA6B,YAAM;AAClC,QAAA,MAAI,CAACD,eAAL;AACA,OAFD;AAGA;AAED;;;;;;;;wCAKoB;AACnB,UAAK,KAAKE,OAAV,EAAoB;AACnB,YAAMC,MAAM,GAAG,IAAIC,SAAJ,GAAgBC,eAAhB,CAAiC,KAAKH,OAAL,CAAaI,IAAb,EAAjC,EAAsD,eAAtD,CAAf;AACA,YAAMC,GAAG,GAAGJ,MAAM,CAACK,aAAP,CAAsB,KAAtB,CAAZ;AACA,YAAMX,OAAO,GAAGU,GAAG,CAACE,YAAJ,CAAkB,SAAlB,CAAhB;;AAEA,YAAKZ,OAAL,EAAe;AACd,eAAKA,OAAL,GAAeA,OAAf;AACA;;AAED,aAAKa,OAAL,CAAaC,SAAb,GAAyB,EAAzB;;AAEA,eAAQJ,GAAG,CAACK,UAAJ,CAAeC,MAAf,GAAwB,CAAhC,EAAoC;AACnC,eAAKH,OAAL,CAAaI,WAAb,CAA0BP,GAAG,CAACK,UAAJ,CAAgB,CAAhB,CAA1B;AACA;AACD;AACD;AAED;;;;;;;;sCAKkB;AAAA;;AACjB,UAAK,KAAKG,SAAV,EAAsB;AACrB,aAAKL,OAAL,CAAaM,gBAAb,CAA+B,gBAA/B,EAAkDC,OAAlD,CAA2D,UAAAC,IAAI,EAAI;AAClEA,UAAAA,IAAI,CAACC,KAAL,CAAWC,IAAX,GAAkB,MAAI,CAACL,SAAvB;AACA,SAFD;AAGA;AACD;;;;EAxGoC5B,I;;SAAjBC,Q","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* global DOMParser */\n\n/**\n * @module ui/icon/iconview\n */\n\nimport View from '../view';\n\nimport '../../theme/components/icon/icon.css';\n\n/**\n * The icon view class.\n *\n * @extends module:ui/view~View\n */\nexport default class IconView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * The SVG source of the icon.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #content\n\t\t */\n\t\tthis.set( 'content', '' );\n\n\t\t/**\n\t\t * This attribute specifies the boundaries to which the\n\t\t * icon content should stretch.\n\t\t *\n\t\t * @observable\n\t\t * @default '0 0 20 20'\n\t\t * @member {String} #viewBox\n\t\t */\n\t\tthis.set( 'viewBox', '0 0 20 20' );\n\n\t\t/**\n\t\t * The fill color of the child `path.ck-icon__fill`.\n\t\t *\n\t\t * @observable\n\t\t * @default ''\n\t\t * @member {String} #fillColor\n\t\t */\n\t\tthis.set( 'fillColor', '' );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'svg',\n\t\t\tns: 'http://www.w3.org/2000/svg',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-icon'\n\t\t\t\t],\n\t\t\t\tviewBox: bind.to( 'viewBox' )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis._updateXMLContent();\n\t\tthis._colorFillPaths();\n\n\t\t// This is a hack for lack of innerHTML binding.\n\t\t// See: https://github.com/ckeditor/ckeditor5-ui/issues/99.\n\t\tthis.on( 'change:content', () => {\n\t\t\tthis._updateXMLContent();\n\t\t\tthis._colorFillPaths();\n\t\t} );\n\n\t\tthis.on( 'change:fillColor', () => {\n\t\t\tthis._colorFillPaths();\n\t\t} );\n\t}\n\n\t/**\n\t * Updates the {@link #element} with the value of {@link #content}.\n\t *\n\t * @private\n\t */\n\t_updateXMLContent() {\n\t\tif ( this.content ) {\n\t\t\tconst parsed = new DOMParser().parseFromString( this.content.trim(), 'image/svg+xml' );\n\t\t\tconst svg = parsed.querySelector( 'svg' );\n\t\t\tconst viewBox = svg.getAttribute( 'viewBox' );\n\n\t\t\tif ( viewBox ) {\n\t\t\t\tthis.viewBox = viewBox;\n\t\t\t}\n\n\t\t\tthis.element.innerHTML = '';\n\n\t\t\twhile ( svg.childNodes.length > 0 ) {\n\t\t\t\tthis.element.appendChild( svg.childNodes[ 0 ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Fills all child `path.ck-icon__fill` with the `#fillColor`.\n\t *\n\t * @private\n\t */\n\t_colorFillPaths() {\n\t\tif ( this.fillColor ) {\n\t\t\tthis.element.querySelectorAll( '.ck-icon__fill' ).forEach( path => {\n\t\t\t\tpath.style.fill = this.fillColor;\n\t\t\t} );\n\t\t}\n\t}\n}\n"]}]}