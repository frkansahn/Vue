{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-typing\\src\\utils\\injectunsafekeystrokeshandling.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-typing\\src\\utils\\injectunsafekeystrokeshandling.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1581760786382},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-typing/src/utils/injectunsafekeystrokeshandling.js"],"names":["getCode","env","injectUnsafeKeystrokesHandling","editor","latestCompositionSelection","model","view","editing","inputCommand","commands","get","isAndroid","document","on","evt","evtData","handleUnsafeKeystroke","priority","handleCompositionStart","createSelection","selection","doc","isComposing","isSelectionUnchanged","isEqual","isEnabled","isSafeKeystroke","isCollapsed","keyCode","deleteSelectionContent","isFlatSelection","rangeCount","getFirstRange","isFlat","buffer","lock","enqueueChange","batch","deleteContent","unlock","safeKeycodes","code","push","keyData","ctrlKey","includes"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/injectunsafekeystrokeshandling\n */\n\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * Handles keystrokes which are unsafe for typing. This handler's logic is explained\n * in https://github.com/ckeditor/ckeditor5-typing/issues/83#issuecomment-398690251.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\nexport default function injectUnsafeKeystrokesHandling( editor ) {\n\tlet latestCompositionSelection = null;\n\n\tconst model = editor.model;\n\tconst view = editor.editing.view;\n\tconst inputCommand = editor.commands.get( 'input' );\n\n\t// For Android, we want to handle keystrokes on `beforeinput` to be sure that code in `DeleteObserver` already had a chance to be fired.\n\tif ( env.isAndroid ) {\n\t\tview.document.on( 'beforeinput', ( evt, evtData ) => handleUnsafeKeystroke( evtData ), { priority: 'lowest' } );\n\t} else {\n\t\tview.document.on( 'keydown', ( evt, evtData ) => handleUnsafeKeystroke( evtData ), { priority: 'lowest' } );\n\t}\n\n\tview.document.on( 'compositionstart', handleCompositionStart, { priority: 'lowest' } );\n\n\tview.document.on( 'compositionend', () => {\n\t\tlatestCompositionSelection = model.createSelection( model.document.selection );\n\t}, { priority: 'lowest' } );\n\n\t// Handles the keydown event. We need to guess whether such keystroke is going to result\n\t// in typing. If so, then before character insertion happens, any selected content needs\n\t// to be deleted. Otherwise the default browser deletion mechanism would be\n\t// triggered, resulting in:\n\t//\n\t// * Hundreds of mutations which could not be handled.\n\t// * But most importantly, loss of control over how the content is being deleted.\n\t//\n\t// The method is used in a low-priority listener, hence allowing other listeners (e.g. delete or enter features)\n\t// to handle the event.\n\t//\n\t// @param {module:engine/view/observer/keyobserver~KeyEventData} evtData\n\tfunction handleUnsafeKeystroke( evtData ) {\n\t\tconst doc = model.document;\n\t\tconst isComposing = view.document.isComposing;\n\t\tconst isSelectionUnchanged = latestCompositionSelection && latestCompositionSelection.isEqual( doc.selection );\n\n\t\t// Reset stored composition selection.\n\t\tlatestCompositionSelection = null;\n\n\t\t// By relying on the state of the input command we allow disabling the entire input easily\n\t\t// by just disabling the input command. We could’ve used here the delete command but that\n\t\t// would mean requiring the delete feature which would block loading one without the other.\n\t\t// We could also check the editor.isReadOnly property, but that wouldn't allow to block\n\t\t// the input without blocking other features.\n\t\tif ( !inputCommand.isEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isSafeKeystroke( evtData ) || doc.selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If during composition, deletion should be prevented as it may remove composed sequence (#83).\n\t\tif ( isComposing && evtData.keyCode === 229 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there is a `keydown` event fired with '229' keycode it might be related\n\t\t// to recent composition. Check if selection is the same as upon ending recent composition,\n\t\t// if so do not remove selected content as it will remove composed sequence (#83).\n\t\tif ( !isComposing && evtData.keyCode === 229 && isSelectionUnchanged ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdeleteSelectionContent();\n\t}\n\n\t// Handles the `compositionstart` event. It is used only in special cases to remove the contents\n\t// of a non-collapsed selection so composition itself does not result in complex mutations.\n\t//\n\t// The special case mentioned above is a situation in which the `keydown` event is fired after\n\t// `compositionstart` event. In such cases {@link #handleKeydown} cannot clear current selection\n\t// contents (because it is too late and will break the composition) so the composition handler takes care of it.\n\tfunction handleCompositionStart() {\n\t\tconst doc = model.document;\n\t\tconst isFlatSelection = doc.selection.rangeCount === 1 ? doc.selection.getFirstRange().isFlat : true;\n\n\t\t// If on `compositionstart` there is a non-collapsed selection which start and end have different parents\n\t\t// it means the `handleKeydown()` method did not remove its contents. It happens usually because\n\t\t// of different order of events (`compositionstart` before `keydown` - in Safari). In such cases\n\t\t// we need to remove selection contents on composition start (#83).\n\t\tif ( doc.selection.isCollapsed || isFlatSelection ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdeleteSelectionContent();\n\t}\n\n\tfunction deleteSelectionContent() {\n\t\tconst buffer = inputCommand.buffer;\n\n\t\tbuffer.lock();\n\n\t\tmodel.enqueueChange( buffer.batch, () => {\n\t\t\tmodel.deleteContent( model.document.selection );\n\t\t} );\n\n\t\tbuffer.unlock();\n\t}\n}\n\nconst safeKeycodes = [\n\tgetCode( 'arrowUp' ),\n\tgetCode( 'arrowRight' ),\n\tgetCode( 'arrowDown' ),\n\tgetCode( 'arrowLeft' ),\n\t9, // Tab\n\t16, // Shift\n\t17, // Ctrl\n\t18, // Alt\n\t19, // Pause\n\t20, // CapsLock\n\t27, // Escape\n\t33, // PageUp\n\t34, // PageDown\n\t35, // Home\n\t36, // End,\n\t45, // Insert,\n\t91, // Windows,\n\t93, // Menu key,\n\t144, // NumLock\n\t145, // ScrollLock,\n\t173, // Mute/Unmute\n\t174, // Volume up\n\t175, // Volume down,\n\t176, // Next song,\n\t177, // Previous song,\n\t178, // Stop,\n\t179, // Play/Pause,\n\t255 // Display brightness (increase and decrease)\n];\n\n// Function keys.\nfor ( let code = 112; code <= 135; code++ ) {\n\tsafeKeycodes.push( code );\n}\n\n// Returns `true` if a keystroke should not cause any content change caused by \"typing\".\n//\n// Note: This implementation is very simple and will need to be refined with time.\n//\n// @private\n// @param {engine.view.observer.keyObserver.KeyEventData} keyData\n// @returns {Boolean}\nfunction isSafeKeystroke( keyData ) {\n\t// Keystrokes which contain Ctrl don't represent typing.\n\tif ( keyData.ctrlKey ) {\n\t\treturn true;\n\t}\n\n\treturn safeKeycodes.includes( keyData.keyCode );\n}\n"]}]}