{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-typing\\src\\inputcommand.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-typing\\src\\inputcommand.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLndlYWstc2V0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiQzpcXFVzZXJzXFxwY1xcRGVza3RvcFxcUmVzdG9yYW5cXFJlc3RvcmFuXFxSZXN0b3Jhbi5VSVxcY2xpZW50XFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzpcXFVzZXJzXFxwY1xcRGVza3RvcFxcUmVzdG9yYW5cXFJlc3RvcmFuXFxSZXN0b3Jhbi5VSVxcY2xpZW50XFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tICJDOlxcVXNlcnNcXHBjXFxEZXNrdG9wXFxSZXN0b3JhblxcUmVzdG9yYW5cXFJlc3RvcmFuLlVJXFxjbGllbnRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iOwppbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gIkM6XFxVc2Vyc1xccGNcXERlc2t0b3BcXFJlc3RvcmFuXFxSZXN0b3JhblxcUmVzdG9yYW4uVUlcXGNsaWVudFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YiOwppbXBvcnQgX2dldCBmcm9tICJDOlxcVXNlcnNcXHBjXFxEZXNrdG9wXFxSZXN0b3JhblxcUmVzdG9yYW5cXFJlc3RvcmFuLlVJXFxjbGllbnRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2dldCI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiQzpcXFVzZXJzXFxwY1xcRGVza3RvcFxcUmVzdG9yYW5cXFJlc3RvcmFuXFxSZXN0b3Jhbi5VSVxcY2xpZW50XFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CgovKioKICogQGxpY2Vuc2UgQ29weXJpZ2h0IChjKSAyMDAzLTIwMjAsIENLU291cmNlIC0gRnJlZGVyaWNvIEtuYWJiZW4uIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAqIEZvciBsaWNlbnNpbmcsIHNlZSBMSUNFTlNFLm1kIG9yIGh0dHBzOi8vY2tlZGl0b3IuY29tL2xlZ2FsL2NrZWRpdG9yLW9zcy1saWNlbnNlCiAqLwoKLyoqCiAqIEBtb2R1bGUgdHlwaW5nL2lucHV0Y29tbWFuZAogKi8KaW1wb3J0IENvbW1hbmQgZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS1jb3JlL3NyYy9jb21tYW5kJzsKaW1wb3J0IENoYW5nZUJ1ZmZlciBmcm9tICcuL3V0aWxzL2NoYW5nZWJ1ZmZlcic7Ci8qKgogKiBUaGUgaW5wdXQgY29tbWFuZC4gVXNlZCBieSB0aGUge0BsaW5rIG1vZHVsZTp0eXBpbmcvaW5wdXR+SW5wdXQgaW5wdXQgZmVhdHVyZX0gdG8gaGFuZGxlIHR5cGluZy4KICoKICogQGV4dGVuZHMgbW9kdWxlOmNvcmUvY29tbWFuZH5Db21tYW5kCiAqLwoKdmFyIElucHV0Q29tbWFuZCA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKF9Db21tYW5kKSB7CiAgX2luaGVyaXRzKElucHV0Q29tbWFuZCwgX0NvbW1hbmQpOwoKICAvKioKICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIHRoZSBjb21tYW5kLgogICAqCiAgICogQHBhcmFtIHttb2R1bGU6Y29yZS9lZGl0b3IvZWRpdG9yfkVkaXRvcn0gZWRpdG9yCiAgICogQHBhcmFtIHtOdW1iZXJ9IHVuZG9TdGVwU2l6ZSBUaGUgbWF4aW11bSBudW1iZXIgb2YgYXRvbWljIGNoYW5nZXMKICAgKiB3aGljaCBjYW4gYmUgY29udGFpbmVkIGluIG9uZSBiYXRjaCBpbiB0aGUgY29tbWFuZCBidWZmZXIuCiAgICovCiAgZnVuY3Rpb24gSW5wdXRDb21tYW5kKGVkaXRvciwgdW5kb1N0ZXBTaXplKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIElucHV0Q29tbWFuZCk7CgogICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoSW5wdXRDb21tYW5kKS5jYWxsKHRoaXMsIGVkaXRvcikpOwogICAgLyoqCiAgICAgKiBUeXBpbmcncyBjaGFuZ2UgYnVmZmVyIHVzZWQgdG8gZ3JvdXAgc3Vic2VxdWVudCBjaGFuZ2VzIGludG8gYmF0Y2hlcy4KICAgICAqCiAgICAgKiBAcmVhZG9ubHkKICAgICAqIEBwcml2YXRlCiAgICAgKiBAbWVtYmVyIHttb2R1bGU6dHlwaW5nL3V0aWxzL2NoYW5nZWJ1ZmZlcn5DaGFuZ2VCdWZmZXJ9ICNfYnVmZmVyCiAgICAgKi8KCiAgICBfdGhpcy5fYnVmZmVyID0gbmV3IENoYW5nZUJ1ZmZlcihlZGl0b3IubW9kZWwsIHVuZG9TdGVwU2l6ZSk7CiAgICAvKioKICAgICAqIFN0b3JlcyBiYXRjaGVzIGNyZWF0ZWQgYnkgdGhlIGlucHV0IGNvbW1hbmQuIFRoZSBiYXRjaGVzIGFyZSB1c2VkIHRvIGRpZmZlcmVudGlhdGUgaW5wdXQgYmF0Y2hlcyBmcm9tIG90aGVyIGJhdGNoZXMgdXNpbmcKICAgICAqIHtAbGluayBtb2R1bGU6dHlwaW5nL2lucHV0fklucHV0I2lzSW5wdXR9IG1ldGhvZC4KICAgICAqCiAgICAgKiBAdHlwZSB7V2Vha1NldDxtb2R1bGU6ZW5naW5lL21vZGVsL2JhdGNofkJhdGNoPn0KICAgICAqIEBwcm90ZWN0ZWQKICAgICAqLwoKICAgIF90aGlzLl9iYXRjaGVzID0gbmV3IFdlYWtTZXQoKTsKICAgIHJldHVybiBfdGhpczsKICB9CiAgLyoqCiAgICogVGhlIGN1cnJlbnQgY2hhbmdlIGJ1ZmZlci4KICAgKgogICAqIEB0eXBlIHttb2R1bGU6dHlwaW5nL3V0aWxzL2NoYW5nZWJ1ZmZlcn5DaGFuZ2VCdWZmZXJ9CiAgICovCgoKICBfY3JlYXRlQ2xhc3MoSW5wdXRDb21tYW5kLCBbewogICAga2V5OiAiZGVzdHJveSIsCgogICAgLyoqCiAgICAgKiBAaW5oZXJpdERvYwogICAgICovCiAgICB2YWx1ZTogZnVuY3Rpb24gZGVzdHJveSgpIHsKICAgICAgX2dldChfZ2V0UHJvdG90eXBlT2YoSW5wdXRDb21tYW5kLnByb3RvdHlwZSksICJkZXN0cm95IiwgdGhpcykuY2FsbCh0aGlzKTsKCiAgICAgIHRoaXMuX2J1ZmZlci5kZXN0cm95KCk7CiAgICB9CiAgICAvKioKICAgICAqIEV4ZWN1dGVzIHRoZSBpbnB1dCBjb21tYW5kLiBJdCByZXBsYWNlcyB0aGUgY29udGVudCB3aXRoaW4gdGhlIGdpdmVuIHJhbmdlIHdpdGggdGhlIGdpdmVuIHRleHQuCiAgICAgKiBSZXBsYWNpbmcgaXMgYSB0d28gc3RlcCBwcm9jZXNzLCBmaXJzdCB0aGUgY29udGVudCB3aXRoaW4gdGhlIHJhbmdlIGlzIHJlbW92ZWQgYW5kIHRoZW4gdGhlIG5ldyB0ZXh0IGlzIGluc2VydGVkCiAgICAgKiBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSByYW5nZSAod2hpY2ggYWZ0ZXIgdGhlIHJlbW92YWwgaXMgYSBjb2xsYXBzZWQgcmFuZ2UpLgogICAgICoKICAgICAqIEBmaXJlcyBleGVjdXRlCiAgICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIFRoZSBjb21tYW5kIG9wdGlvbnMuCiAgICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMudGV4dD0nJ10gVGhlIHRleHQgdG8gYmUgaW5zZXJ0ZWQuCiAgICAgKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvcmFuZ2V+UmFuZ2V9IFtvcHRpb25zLnJhbmdlXSBUaGUgcmFuZ2UgaW4gd2hpY2ggdGhlIHRleHQgaXMgaW5zZXJ0ZWQuIERlZmF1bHRzCiAgICAgKiB0byB0aGUgZmlyc3QgcmFuZ2UgaW4gdGhlIGN1cnJlbnQgc2VsZWN0aW9uLgogICAgICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL3JhbmdlflJhbmdlfSBbb3B0aW9ucy5yZXN1bHRSYW5nZV0gVGhlIHJhbmdlIHdoZXJlIHRoZSBzZWxlY3Rpb24KICAgICAqIHNob3VsZCBiZSBwbGFjZWQgYWZ0ZXIgdGhlIGluc2VydGlvbi4gSWYgbm90IHNwZWNpZmllZCwgdGhlIHNlbGVjdGlvbiB3aWxsIGJlIHBsYWNlZCByaWdodCBhZnRlcgogICAgICogdGhlIGluc2VydGVkIHRleHQuCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiZXhlY3V0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZXhlY3V0ZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307CiAgICAgIHZhciBtb2RlbCA9IHRoaXMuZWRpdG9yLm1vZGVsOwogICAgICB2YXIgZG9jID0gbW9kZWwuZG9jdW1lbnQ7CiAgICAgIHZhciB0ZXh0ID0gb3B0aW9ucy50ZXh0IHx8ICcnOwogICAgICB2YXIgdGV4dEluc2VydGlvbnMgPSB0ZXh0Lmxlbmd0aDsKICAgICAgdmFyIHNlbGVjdGlvbiA9IG9wdGlvbnMucmFuZ2UgPyBtb2RlbC5jcmVhdGVTZWxlY3Rpb24ob3B0aW9ucy5yYW5nZSkgOiBkb2Muc2VsZWN0aW9uOwogICAgICB2YXIgcmVzdWx0UmFuZ2UgPSBvcHRpb25zLnJlc3VsdFJhbmdlOwogICAgICBtb2RlbC5lbnF1ZXVlQ2hhbmdlKHRoaXMuX2J1ZmZlci5iYXRjaCwgZnVuY3Rpb24gKHdyaXRlcikgewogICAgICAgIF90aGlzMi5fYnVmZmVyLmxvY2soKTsKCiAgICAgICAgbW9kZWwuZGVsZXRlQ29udGVudChzZWxlY3Rpb24pOwoKICAgICAgICBpZiAodGV4dCkgewogICAgICAgICAgbW9kZWwuaW5zZXJ0Q29udGVudCh3cml0ZXIuY3JlYXRlVGV4dCh0ZXh0LCBkb2Muc2VsZWN0aW9uLmdldEF0dHJpYnV0ZXMoKSksIHNlbGVjdGlvbik7CiAgICAgICAgfQoKICAgICAgICBpZiAocmVzdWx0UmFuZ2UpIHsKICAgICAgICAgIHdyaXRlci5zZXRTZWxlY3Rpb24ocmVzdWx0UmFuZ2UpOwogICAgICAgIH0gZWxzZSBpZiAoIXNlbGVjdGlvbi5pcygnZG9jdW1lbnRTZWxlY3Rpb24nKSkgewogICAgICAgICAgd3JpdGVyLnNldFNlbGVjdGlvbihzZWxlY3Rpb24pOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMyLl9idWZmZXIudW5sb2NrKCk7CgogICAgICAgIF90aGlzMi5fYnVmZmVyLmlucHV0KHRleHRJbnNlcnRpb25zKTsgLy8gU3RvcmUgdGhlIGJhdGNoIGFzIGFuICdpbnB1dCcgYmF0Y2ggZm9yIHRoZSBJbnB1dC5pc0lucHV0KCBiYXRjaCApIGNoZWNrLgoKCiAgICAgICAgX3RoaXMyLl9iYXRjaGVzLmFkZChfdGhpczIuX2J1ZmZlci5iYXRjaCk7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImJ1ZmZlciIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuX2J1ZmZlcjsKICAgIH0KICB9XSk7CgogIHJldHVybiBJbnB1dENvbW1hbmQ7Cn0oQ29tbWFuZCk7CgpleHBvcnQgeyBJbnB1dENvbW1hbmQgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-typing/src/inputcommand.js"],"names":["Command","ChangeBuffer","InputCommand","editor","undoStepSize","_buffer","model","_batches","WeakSet","destroy","options","doc","document","text","textInsertions","length","selection","range","createSelection","resultRange","enqueueChange","batch","writer","lock","deleteContent","insertContent","createText","getAttributes","setSelection","is","unlock","input","add"],"mappings":";;;;;;;;;;;AAAA;;;;;AAKA;;;AAIA,OAAOA,OAAP,MAAoB,sCAApB;AAEA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA;;;;;;IAKqBC,Y;;;;;AACpB;;;;;;;AAOA,wBAAaC,MAAb,EAAqBC,YAArB,EAAoC;AAAA;;AAAA;;AACnC,sFAAOD,MAAP;AAEA;;;;;;;;AAOA,UAAKE,OAAL,GAAe,IAAIJ,YAAJ,CAAkBE,MAAM,CAACG,KAAzB,EAAgCF,YAAhC,CAAf;AAEA;;;;;;;;AAOA,UAAKG,QAAL,GAAgB,IAAIC,OAAJ,EAAhB;AAnBmC;AAoBnC;AAED;;;;;;;;;;AASA;;;8BAGU;AACT;;AAEA,WAAKH,OAAL,CAAaI,OAAb;AACA;AAED;;;;;;;;;;;;;;;;;8BAcwB;AAAA;;AAAA,UAAfC,OAAe,uEAAL,EAAK;AACvB,UAAMJ,KAAK,GAAG,KAAKH,MAAL,CAAYG,KAA1B;AACA,UAAMK,GAAG,GAAGL,KAAK,CAACM,QAAlB;AACA,UAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,IAAgB,EAA7B;AACA,UAAMC,cAAc,GAAGD,IAAI,CAACE,MAA5B;AACA,UAAMC,SAAS,GAAGN,OAAO,CAACO,KAAR,GAAgBX,KAAK,CAACY,eAAN,CAAuBR,OAAO,CAACO,KAA/B,CAAhB,GAAyDN,GAAG,CAACK,SAA/E;AACA,UAAMG,WAAW,GAAGT,OAAO,CAACS,WAA5B;AAEAb,MAAAA,KAAK,CAACc,aAAN,CAAqB,KAAKf,OAAL,CAAagB,KAAlC,EAAyC,UAAAC,MAAM,EAAI;AAClD,QAAA,MAAI,CAACjB,OAAL,CAAakB,IAAb;;AAEAjB,QAAAA,KAAK,CAACkB,aAAN,CAAqBR,SAArB;;AAEA,YAAKH,IAAL,EAAY;AACXP,UAAAA,KAAK,CAACmB,aAAN,CAAqBH,MAAM,CAACI,UAAP,CAAmBb,IAAnB,EAAyBF,GAAG,CAACK,SAAJ,CAAcW,aAAd,EAAzB,CAArB,EAA+EX,SAA/E;AACA;;AAED,YAAKG,WAAL,EAAmB;AAClBG,UAAAA,MAAM,CAACM,YAAP,CAAqBT,WAArB;AACA,SAFD,MAEO,IAAK,CAACH,SAAS,CAACa,EAAV,CAAc,mBAAd,CAAN,EAA4C;AAClDP,UAAAA,MAAM,CAACM,YAAP,CAAqBZ,SAArB;AACA;;AAED,QAAA,MAAI,CAACX,OAAL,CAAayB,MAAb;;AAEA,QAAA,MAAI,CAACzB,OAAL,CAAa0B,KAAb,CAAoBjB,cAApB,EAjBkD,CAmBlD;;;AACA,QAAA,MAAI,CAACP,QAAL,CAAcyB,GAAd,CAAmB,MAAI,CAAC3B,OAAL,CAAagB,KAAhC;AACA,OArBD;AAsBA;;;wBAzDY;AACZ,aAAO,KAAKhB,OAAZ;AACA;;;;EArCwCL,O;;SAArBE,Y","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/inputcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\nimport ChangeBuffer from './utils/changebuffer';\n\n/**\n * The input command. Used by the {@link module:typing/input~Input input feature} to handle typing.\n *\n * @extends module:core/command~Command\n */\nexport default class InputCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {Number} undoStepSize The maximum number of atomic changes\n\t * which can be contained in one batch in the command buffer.\n\t */\n\tconstructor( editor, undoStepSize ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Typing's change buffer used to group subsequent changes into batches.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {module:typing/utils/changebuffer~ChangeBuffer} #_buffer\n\t\t */\n\t\tthis._buffer = new ChangeBuffer( editor.model, undoStepSize );\n\n\t\t/**\n\t\t * Stores batches created by the input command. The batches are used to differentiate input batches from other batches using\n\t\t * {@link module:typing/input~Input#isInput} method.\n\t\t *\n\t\t * @type {WeakSet<module:engine/model/batch~Batch>}\n\t\t * @protected\n\t\t */\n\t\tthis._batches = new WeakSet();\n\t}\n\n\t/**\n\t * The current change buffer.\n\t *\n\t * @type {module:typing/utils/changebuffer~ChangeBuffer}\n\t */\n\tget buffer() {\n\t\treturn this._buffer;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis._buffer.destroy();\n\t}\n\n\t/**\n\t * Executes the input command. It replaces the content within the given range with the given text.\n\t * Replacing is a two step process, first the content within the range is removed and then the new text is inserted\n\t * at the beginning of the range (which after the removal is a collapsed range).\n\t *\n\t * @fires execute\n\t * @param {Object} [options] The command options.\n\t * @param {String} [options.text=''] The text to be inserted.\n\t * @param {module:engine/model/range~Range} [options.range] The range in which the text is inserted. Defaults\n\t * to the first range in the current selection.\n\t * @param {module:engine/model/range~Range} [options.resultRange] The range where the selection\n\t * should be placed after the insertion. If not specified, the selection will be placed right after\n\t * the inserted text.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst text = options.text || '';\n\t\tconst textInsertions = text.length;\n\t\tconst selection = options.range ? model.createSelection( options.range ) : doc.selection;\n\t\tconst resultRange = options.resultRange;\n\n\t\tmodel.enqueueChange( this._buffer.batch, writer => {\n\t\t\tthis._buffer.lock();\n\n\t\t\tmodel.deleteContent( selection );\n\n\t\t\tif ( text ) {\n\t\t\t\tmodel.insertContent( writer.createText( text, doc.selection.getAttributes() ), selection );\n\t\t\t}\n\n\t\t\tif ( resultRange ) {\n\t\t\t\twriter.setSelection( resultRange );\n\t\t\t} else if ( !selection.is( 'documentSelection' ) ) {\n\t\t\t\twriter.setSelection( selection );\n\t\t\t}\n\n\t\t\tthis._buffer.unlock();\n\n\t\t\tthis._buffer.input( textInsertions );\n\n\t\t\t// Store the batch as an 'input' batch for the Input.isInput( batch ) check.\n\t\t\tthis._batches.add( this._buffer.batch );\n\t\t} );\n\t}\n}\n"]}]}