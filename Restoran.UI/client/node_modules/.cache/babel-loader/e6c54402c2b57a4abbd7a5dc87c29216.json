{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-clipboard\\src\\clipboardobserver.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-clipboard\\src\\clipboardobserver.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-clipboard/src/clipboardobserver.js"],"names":["DomEventObserver","EventInfo","DataTransfer","ClipboardObserver","view","viewDocument","document","domEventType","listenTo","handleInput","priority","evt","data","preventDefault","targetRanges","dropRange","Array","from","selection","getRanges","eventInfo","fire","dataTransfer","stop","called","stopPropagation","domEvent","evtData","clipboardData","type","getDropViewRange","domDoc","target","ownerDocument","x","clientX","y","clientY","domRange","caretRangeFromPoint","rangeParent","createRange","setStart","rangeOffset","collapse","domConverter","domRangeToView","getFirstRange"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/clipboardobserver\n */\n\nimport DomEventObserver from '@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver';\nimport EventInfo from '@ckeditor/ckeditor5-utils/src/eventinfo';\nimport DataTransfer from './datatransfer';\n\n/**\n * Clipboard events observer.\n *\n * Fires the following events:\n *\n * * {@link module:engine/view/document~Document#event:clipboardInput}\n * * {@link module:engine/view/document~Document#event:dragover}\n * * {@link module:engine/view/document~Document#event:drop}\n * * {@link module:engine/view/document~Document#event:paste}\n * * {@link module:engine/view/document~Document#event:copy}\n * * {@link module:engine/view/document~Document#event:cut}\n *\n * Note that this observer is not available by default (it is not added by the engine).\n * To make it available it needs to be added to {@link module:engine/view/document~Document} by\n * the {@link module:engine/view/view~View#addObserver `View#addObserver()`} method. You can also load the\n * {@link module:clipboard/clipboard~Clipboard} plugin which adds this observer automatically (because it uses it).\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class ClipboardObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tconst viewDocument = this.document;\n\n\t\tthis.domEventType = [ 'paste', 'copy', 'cut', 'drop', 'dragover' ];\n\n\t\tthis.listenTo( viewDocument, 'paste', handleInput, { priority: 'low' } );\n\t\tthis.listenTo( viewDocument, 'drop', handleInput, { priority: 'low' } );\n\n\t\tfunction handleInput( evt, data ) {\n\t\t\tdata.preventDefault();\n\n\t\t\tconst targetRanges = data.dropRange ? [ data.dropRange ] : Array.from( viewDocument.selection.getRanges() );\n\n\t\t\tconst eventInfo = new EventInfo( viewDocument, 'clipboardInput' );\n\n\t\t\tviewDocument.fire( eventInfo, {\n\t\t\t\tdataTransfer: data.dataTransfer,\n\t\t\t\ttargetRanges\n\t\t\t} );\n\n\t\t\t// If CKEditor handled the input, do not bubble the original event any further.\n\t\t\t// This helps external integrations recognize that fact and act accordingly.\n\t\t\t// https://github.com/ckeditor/ckeditor5-upload/issues/92\n\t\t\tif ( eventInfo.stop.called ) {\n\t\t\t\tdata.stopPropagation();\n\t\t\t}\n\t\t}\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tconst evtData = {\n\t\t\tdataTransfer: new DataTransfer( domEvent.clipboardData ? domEvent.clipboardData : domEvent.dataTransfer )\n\t\t};\n\n\t\tif ( domEvent.type == 'drop' ) {\n\t\t\tevtData.dropRange = getDropViewRange( this.view, domEvent );\n\t\t}\n\n\t\tthis.fire( domEvent.type, domEvent, evtData );\n\t}\n}\n\nfunction getDropViewRange( view, domEvent ) {\n\tconst domDoc = domEvent.target.ownerDocument;\n\tconst x = domEvent.clientX;\n\tconst y = domEvent.clientY;\n\tlet domRange;\n\n\t// Webkit & Blink.\n\tif ( domDoc.caretRangeFromPoint && domDoc.caretRangeFromPoint( x, y ) ) {\n\t\tdomRange = domDoc.caretRangeFromPoint( x, y );\n\t}\n\t// FF.\n\telse if ( domEvent.rangeParent ) {\n\t\tdomRange = domDoc.createRange();\n\t\tdomRange.setStart( domEvent.rangeParent, domEvent.rangeOffset );\n\t\tdomRange.collapse( true );\n\t}\n\n\tif ( domRange ) {\n\t\treturn view.domConverter.domRangeToView( domRange );\n\t} else {\n\t\treturn view.document.selection.getFirstRange();\n\t}\n}\n\n/**\n * Fired as a continuation of {@link #event:paste} and {@link #event:drop} events.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#input-pipeline \"clipboard input pipeline\"}.\n *\n * Fired with a `dataTransfer` which comes from the clipboard and which content should be processed\n * and inserted into the editor.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardInput\n * @param {Object} data Event data.\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\n * @param {Array.<module:engine/view/range~Range>} data.targetRanges Ranges which are the target of the operation\n * (usually – into which the content should be inserted).\n * If clipboard input was triggered by a paste operation, then these are the selection ranges. If by a drop operation,\n * then it's the drop position (which can be different than the selection at the moment of drop).\n */\n\n/**\n * Fired when user drags content over one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:dragover\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user dropped content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:drop\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n * @param {module:engine/view/range~Range} dropRange The position into which the content is dropped.\n */\n\n/**\n * Fired when user pasted content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:paste\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user copied content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:copy\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user cut content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:cut\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:paste},\n * {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut} events.\n *\n * In order to access clipboard data use `dataTransfer` property.\n *\n * @class module:clipboard/clipboardobserver~ClipboardEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboardobserver~ClipboardEventData#dataTransfer\n */\n"]}]}