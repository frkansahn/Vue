{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-engine\\src\\model\\batch.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-engine\\src\\model\\batch.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1581760786382},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIkM6XFxVc2Vyc1xccGNcXERlc2t0b3BcXFJlc3RvcmFuXFxSZXN0b3JhblxcUmVzdG9yYW4uVUlcXGNsaWVudFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkM6XFxVc2Vyc1xccGNcXERlc2t0b3BcXFJlc3RvcmFuXFxSZXN0b3JhblxcUmVzdG9yYW4uVUlcXGNsaWVudFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwoKLyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDIwLCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGVuZ2luZS9tb2RlbC9iYXRjaAogKi8KCi8qKgogKiBBIGJhdGNoIGluc3RhbmNlIGdyb3VwcyBtb2RlbCBjaGFuZ2VzICh7QGxpbmsgbW9kdWxlOmVuZ2luZS9tb2RlbC9vcGVyYXRpb24vb3BlcmF0aW9ufk9wZXJhdGlvbiBvcGVyYXRpb25zfSkuIEFsbCBvcGVyYXRpb25zCiAqIGdyb3VwZWQgaW4gYSBzaW5nbGUgYmF0Y2ggY2FuIGJlIHJldmVydGVkIHRvZ2V0aGVyLCBzbyB5b3UgY2FuIGFsc28gdGhpbmsgYWJvdXQgYSBiYXRjaCBhcyBvZiBhIHNpbmdsZSB1bmRvIHN0ZXAuIElmIHlvdSB3YW50CiAqIHRvIGV4dGVuZCBhIGdpdmVuIHVuZG8gc3RlcCwgeW91IGNhbiBhZGQgbW9yZSBjaGFuZ2VzIHRvIHRoZSBiYXRjaCB1c2luZyB7QGxpbmsgbW9kdWxlOmVuZ2luZS9tb2RlbC9tb2RlbH5Nb2RlbCNlbnF1ZXVlQ2hhbmdlfToKICoKICoJCW1vZGVsLmVucXVldWVDaGFuZ2UoIGJhdGNoLCB3cml0ZXIgPT4gewogKgkJCXdyaXRlci5pbnNlcnRUZXh0KCAnZm9vJywgcGFyYWdyYXBoLCAnZW5kJyApOwogKgkJfSApOwogKgogKiBAc2VlIG1vZHVsZTplbmdpbmUvbW9kZWwvbW9kZWx+TW9kZWwjZW5xdWV1ZUNoYW5nZQogKiBAc2VlIG1vZHVsZTplbmdpbmUvbW9kZWwvbW9kZWx+TW9kZWwjY2hhbmdlCiAqLwp2YXIgQmF0Y2ggPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICAvKioKICAgKiBDcmVhdGVzIGEgYmF0Y2ggaW5zdGFuY2UuCiAgICoKICAgKiBAc2VlIG1vZHVsZTplbmdpbmUvbW9kZWwvbW9kZWx+TW9kZWwjZW5xdWV1ZUNoYW5nZQogICAqIEBzZWUgbW9kdWxlOmVuZ2luZS9tb2RlbC9tb2RlbH5Nb2RlbCNjaGFuZ2UKICAgKiBAcGFyYW0geyd0cmFuc3BhcmVudCd8J2RlZmF1bHQnfSBbdHlwZT0nZGVmYXVsdCddIFRoZSB0eXBlIG9mIHRoZSBiYXRjaC4KICAgKi8KICBmdW5jdGlvbiBCYXRjaCgpIHsKICAgIHZhciB0eXBlID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAnZGVmYXVsdCc7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJhdGNoKTsKCiAgICAvKioKICAgICAqIEFuIGFycmF5IG9mIG9wZXJhdGlvbnMgdGhhdCBjb21wb3NlIHRoaXMgYmF0Y2guCiAgICAgKgogICAgICogQHJlYWRvbmx5CiAgICAgKiBAdHlwZSB7QXJyYXkuPG1vZHVsZTplbmdpbmUvbW9kZWwvb3BlcmF0aW9uL29wZXJhdGlvbn5PcGVyYXRpb24+fQogICAgICovCiAgICB0aGlzLm9wZXJhdGlvbnMgPSBbXTsKICAgIC8qKgogICAgICogVGhlIHR5cGUgb2YgdGhlIGJhdGNoLgogICAgICoKICAgICAqIEl0IGNhbiBiZSBvbmUgb2YgdGhlIGZvbGxvd2luZyB2YWx1ZXM6CiAgICAgKiAqIGAnZGVmYXVsdCdgICZuZGFzaDsgQWxsICJub3JtYWwiIGJhdGNoZXMuIFRoaXMgaXMgdGhlIG1vc3QgY29tbW9ubHkgdXNlZCB0eXBlLgogICAgICogKiBgJ3RyYW5zcGFyZW50J2AgJm5kYXNoOyBBIGJhdGNoIHRoYXQgc2hvdWxkIGJlIGlnbm9yZWQgYnkgb3RoZXIgZmVhdHVyZXMsIGkuZS4gYW4gaW5pdGlhbCBiYXRjaCBvciBjb2xsYWJvcmF0aXZlIGVkaXRpbmcKICAgICAqIGNoYW5nZXMuCiAgICAgKgogICAgICogQHJlYWRvbmx5CiAgICAgKiBAdHlwZSB7J3RyYW5zcGFyZW50J3wnZGVmYXVsdCd9CiAgICAgKi8KCiAgICB0aGlzLnR5cGUgPSB0eXBlOwogIH0KICAvKioKICAgKiBSZXR1cm5zIHRoZSBiYXNlIHZlcnNpb24gb2YgdGhpcyBiYXRjaCwgd2hpY2ggaXMgZXF1YWwgdG8gdGhlIGJhc2UgdmVyc2lvbiBvZiB0aGUgZmlyc3Qgb3BlcmF0aW9uIGluIHRoZSBiYXRjaC4KICAgKiBJZiB0aGVyZSBhcmUgbm8gb3BlcmF0aW9ucyBpbiB0aGUgYmF0Y2ggb3IgbmVpdGhlciBvcGVyYXRpb24gaGFzIHRoZSBiYXNlIHZlcnNpb24gc2V0LCBpdCByZXR1cm5zIGBudWxsYC4KICAgKgogICAqIEByZWFkb25seQogICAqIEB0eXBlIHtOdW1iZXJ8bnVsbH0KICAgKi8KCgogIF9jcmVhdGVDbGFzcyhCYXRjaCwgW3sKICAgIGtleTogImFkZE9wZXJhdGlvbiIsCgogICAgLyoqCiAgICAgKiBBZGRzIGFuIG9wZXJhdGlvbiB0byB0aGUgYmF0Y2ggaW5zdGFuY2UuCiAgICAgKgogICAgICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9ufSBvcGVyYXRpb24gQW4gb3BlcmF0aW9uIHRvIGFkZC4KICAgICAqIEByZXR1cm5zIHttb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9ufSBUaGUgYWRkZWQgb3BlcmF0aW9uLgogICAgICovCiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkT3BlcmF0aW9uKG9wZXJhdGlvbikgewogICAgICBvcGVyYXRpb24uYmF0Y2ggPSB0aGlzOwogICAgICB0aGlzLm9wZXJhdGlvbnMucHVzaChvcGVyYXRpb24pOwogICAgICByZXR1cm4gb3BlcmF0aW9uOwogICAgfQogIH0sIHsKICAgIGtleTogImJhc2VWZXJzaW9uIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7CiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvciA9IGZhbHNlOwogICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7CgogICAgICB0cnkgewogICAgICAgIGZvciAodmFyIF9pdGVyYXRvciA9IHRoaXMub3BlcmF0aW9uc1tTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSAoX3N0ZXAgPSBfaXRlcmF0b3IubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWUpIHsKICAgICAgICAgIHZhciBvcCA9IF9zdGVwLnZhbHVlOwoKICAgICAgICAgIGlmIChvcC5iYXNlVmVyc2lvbiAhPT0gbnVsbCkgewogICAgICAgICAgICByZXR1cm4gb3AuYmFzZVZlcnNpb247CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7CiAgICAgICAgX2l0ZXJhdG9yRXJyb3IgPSBlcnI7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiAmJiBfaXRlcmF0b3IucmV0dXJuICE9IG51bGwpIHsKICAgICAgICAgICAgX2l0ZXJhdG9yLnJldHVybigpOwogICAgICAgICAgfQogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IpIHsKICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gbnVsbDsKICAgIH0KICB9XSk7CgogIHJldHVybiBCYXRjaDsKfSgpOwoKZXhwb3J0IHsgQmF0Y2ggYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-engine/src/model/batch.js"],"names":["Batch","type","operations","operation","batch","push","op","baseVersion"],"mappings":";;;;;;;;;AAAA;;;;;AAKA;;;;AAIA;;;;;;;;;;;;IAYqBA,K;;;AACpB;;;;;;;AAOA,mBAAgC;AAAA,QAAnBC,IAAmB,uEAAZ,SAAY;;AAAA;;AAC/B;;;;;;AAMA,SAAKC,UAAL,GAAkB,EAAlB;AAEA;;;;;;;;;;;;AAWA,SAAKD,IAAL,GAAYA,IAAZ;AACA;AAED;;;;;;;;;;;;AAiBA;;;;;;iCAMcE,S,EAAY;AACzBA,MAAAA,SAAS,CAACC,KAAV,GAAkB,IAAlB;AACA,WAAKF,UAAL,CAAgBG,IAAhB,CAAsBF,SAAtB;AAEA,aAAOA,SAAP;AACA;;;wBArBiB;AAAA;AAAA;AAAA;;AAAA;AACjB,6BAAkB,KAAKD,UAAvB,8HAAoC;AAAA,cAAxBI,EAAwB;;AACnC,cAAKA,EAAE,CAACC,WAAH,KAAmB,IAAxB,EAA+B;AAC9B,mBAAOD,EAAE,CAACC,WAAV;AACA;AACD;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOjB,aAAO,IAAP;AACA;;;;;;SA9CmBP,K","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/batch\n */\n\n/**\n * A batch instance groups model changes ({@link module:engine/model/operation/operation~Operation operations}). All operations\n * grouped in a single batch can be reverted together, so you can also think about a batch as of a single undo step. If you want\n * to extend a given undo step, you can add more changes to the batch using {@link module:engine/model/model~Model#enqueueChange}:\n *\n *\t\tmodel.enqueueChange( batch, writer => {\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n *\t\t} );\n *\n * @see module:engine/model/model~Model#enqueueChange\n * @see module:engine/model/model~Model#change\n */\nexport default class Batch {\n\t/**\n\t * Creates a batch instance.\n\t *\n\t * @see module:engine/model/model~Model#enqueueChange\n\t * @see module:engine/model/model~Model#change\n\t * @param {'transparent'|'default'} [type='default'] The type of the batch.\n\t */\n\tconstructor( type = 'default' ) {\n\t\t/**\n\t\t * An array of operations that compose this batch.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Array.<module:engine/model/operation/operation~Operation>}\n\t\t */\n\t\tthis.operations = [];\n\n\t\t/**\n\t\t * The type of the batch.\n\t\t *\n\t\t * It can be one of the following values:\n\t\t * * `'default'` &ndash; All \"normal\" batches. This is the most commonly used type.\n\t\t * * `'transparent'` &ndash; A batch that should be ignored by other features, i.e. an initial batch or collaborative editing\n\t\t * changes.\n\t\t *\n\t\t * @readonly\n\t\t * @type {'transparent'|'default'}\n\t\t */\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Returns the base version of this batch, which is equal to the base version of the first operation in the batch.\n\t * If there are no operations in the batch or neither operation has the base version set, it returns `null`.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget baseVersion() {\n\t\tfor ( const op of this.operations ) {\n\t\t\tif ( op.baseVersion !== null ) {\n\t\t\t\treturn op.baseVersion;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Adds an operation to the batch instance.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation An operation to add.\n\t * @returns {module:engine/model/operation/operation~Operation} The added operation.\n\t */\n\taddOperation( operation ) {\n\t\toperation.batch = this;\n\t\tthis.operations.push( operation );\n\n\t\treturn operation;\n\t}\n}\n"]}]}