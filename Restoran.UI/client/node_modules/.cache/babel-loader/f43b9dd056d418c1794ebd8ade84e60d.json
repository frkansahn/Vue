{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-engine\\src\\utils\\bindtwostepcarettoattribute.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-engine\\src\\utils\\bindtwostepcarettoattribute.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-engine/src/utils/bindtwostepcarettoattribute.js"],"names":["keyCodes","priorities","bindTwoStepCaretToAttribute","view","model","emitter","attribute","locale","twoStepCaretHandler","TwoStepCaretHandler","modelSelection","document","selection","listenTo","evt","data","isCollapsed","shiftKey","altKey","ctrlKey","arrowRightPressed","keyCode","arrowright","arrowLeftPressed","arrowleft","position","getFirstPosition","contentDirection","contentLanguageDirection","isMovementHandled","handleForwardMovement","handleBackwardMovement","stop","priority","get","_modelSelection","_overrideUid","_isNextGravityRestorationSkipped","_isGravityOverridden","directChange","isAtBoundary","_restoreGravity","isAtStart","_hasSelectionAttribute","isBetweenDifferentValues","_preventCaretMovement","_removeSelectionAttribute","isAtStartBoundary","_overrideGravity","isAtEndBoundary","_setSelectionAttributeFromTheNodeBefore","isAtEnd","isStepAfterTheAttributeBoundary","_skipNextAutomaticGravityRestoration","change","writer","overrideSelectionGravity","restoreSelectionGravity","preventDefault","removeSelectionAttribute","setSelectionAttribute","nodeBefore","getAttribute","hasAttribute","nodeAfter","isAttrBefore","isAttrAfter","getShiftedBy"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/utils/bindtwostepcarettoattribute\n */\n\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport priorities from '@ckeditor/ckeditor5-utils/src/priorities';\n\n/**\n * This helper enables the two-step caret (phantom) movement behavior for the given {@link module:engine/model/model~Model}\n * attribute on arrow right (<kbd>→</kbd>) and left (<kbd>←</kbd>) key press.\n *\n * Thanks to this (phantom) caret movement the user is able to type before/after as well as at the\n * beginning/end of an attribute.\n *\n * **Note:** This helper support right–to–left (Arabic, Hebrew, etc.) content by mirroring its behavior\n * but for the sake of simplicity examples showcase only left–to–right use–cases.\n *\n * # Forward movement\n *\n * ## \"Entering\" an attribute:\n *\n * When this behavior is enabled for the `a` attribute and the selection is right before it\n * (at the attribute boundary), pressing the right arrow key will not move the selection but update its\n * attributes accordingly:\n *\n * * When enabled:\n *\n *   \t\tfoo{}<$text a=\"true\">bar</$text>\n *\n *    <kbd>→</kbd>\n *\n *   \t\tfoo<$text a=\"true\">{}bar</$text>\n *\n * * When disabled:\n *\n *   \t\tfoo{}<$text a=\"true\">bar</$text>\n *\n *   <kbd>→</kbd>\n *\n *   \t\tfoo<$text a=\"true\">b{}ar</$text>\n *\n *\n * ## \"Leaving\" an attribute:\n *\n * * When enabled:\n *\n *   \t\t<$text a=\"true\">bar{}</$text>baz\n *\n *    <kbd>→</kbd>\n *\n *   \t\t<$text a=\"true\">bar</$text>{}baz\n *\n * * When disabled:\n *\n *   \t\t<$text a=\"true\">bar{}</$text>baz\n *\n *   <kbd>→</kbd>\n *\n *   \t\t<$text a=\"true\">bar</$text>b{}az\n *\n * # Backward movement\n *\n * * When enabled:\n *\n *   \t\t<$text a=\"true\">bar</$text>{}baz\n *\n *    <kbd>←</kbd>\n *\n *   \t\t<$text a=\"true\">bar{}</$text>baz\n *\n * * When disabled:\n *\n *   \t\t<$text a=\"true\">bar</$text>{}baz\n *\n *   <kbd>←</kbd>\n *\n *   \t\t<$text a=\"true\">ba{}r</$text>b{}az\n *\n * @param {Object} options Helper options.\n * @param {module:engine/view/view~View} options.view View controller instance.\n * @param {module:engine/model/model~Model} options.model Data model instance.\n * @param {module:utils/dom/emittermixin~Emitter} options.emitter The emitter to which this behavior should be added\n * (e.g. a plugin instance).\n * @param {String} options.attribute Attribute for which this behavior will be added.\n * @param {module:utils/locale~Locale} options.locale The {@link module:core/editor/editor~Editor#locale} instance.\n */\nexport default function bindTwoStepCaretToAttribute( { view, model, emitter, attribute, locale } ) {\n\tconst twoStepCaretHandler = new TwoStepCaretHandler( model, emitter, attribute );\n\tconst modelSelection = model.document.selection;\n\n\t// Listen to keyboard events and handle the caret movement according to the 2-step caret logic.\n\t//\n\t// Note: This listener has the \"high+1\" priority:\n\t// * \"high\" because of the filler logic implemented in the renderer which also engages on #keydown.\n\t// When the gravity is overridden the attributes of the (model) selection attributes are reset.\n\t// It may end up with the filler kicking in and breaking the selection.\n\t// * \"+1\" because we would like to avoid collisions with other features (like Widgets), which\n\t// take over the keydown events with the \"high\" priority. Two-step caret movement takes precedence\n\t// over Widgets in that matter.\n\t//\n\t// Find out more in https://github.com/ckeditor/ckeditor5-engine/issues/1301.\n\temitter.listenTo( view.document, 'keydown', ( evt, data ) => {\n\t\t// This implementation works only for collapsed selection.\n\t\tif ( !modelSelection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// When user tries to expand the selection or jump over the whole word or to the beginning/end then\n\t\t// two-steps movement is not necessary.\n\t\tif ( data.shiftKey || data.altKey || data.ctrlKey ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst arrowRightPressed = data.keyCode == keyCodes.arrowright;\n\t\tconst arrowLeftPressed = data.keyCode == keyCodes.arrowleft;\n\n\t\t// When neither left or right arrow has been pressed then do noting.\n\t\tif ( !arrowRightPressed && !arrowLeftPressed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst position = modelSelection.getFirstPosition();\n\t\tconst contentDirection = locale.contentLanguageDirection;\n\t\tlet isMovementHandled;\n\n\t\tif ( ( contentDirection === 'ltr' && arrowRightPressed ) || ( contentDirection === 'rtl' && arrowLeftPressed ) ) {\n\t\t\tisMovementHandled = twoStepCaretHandler.handleForwardMovement( position, data );\n\t\t} else {\n\t\t\tisMovementHandled = twoStepCaretHandler.handleBackwardMovement( position, data );\n\t\t}\n\n\t\t// Stop the keydown event if the two-step caret movement handled it. Avoid collisions\n\t\t// with other features which may also take over the caret movement (e.g. Widget).\n\t\tif ( isMovementHandled ) {\n\t\t\tevt.stop();\n\t\t}\n\t}, { priority: priorities.get( 'high' ) + 1 } );\n}\n\n/**\n * This is a protected helper–class for {@link module:engine/utils/bindtwostepcarettoattribute}.\n * It handles the state of the 2-step caret movement for a single {@link module:engine/model/model~Model}\n * attribute upon the `keypress` in the {@link module:engine/view/view~View}.\n *\n * @protected\n */\nexport class TwoStepCaretHandler {\n\t/*\n\t * Creates two step handler instance.\n\t *\n\t * @param {module:engine/model/model~Model} model Data model instance.\n\t * @param {module:utils/dom/emittermixin~Emitter} emitter The emitter to which this behavior should be added\n\t * (e.g. a plugin instance).\n\t * @param {String} attribute Attribute for which the behavior will be added.\n\t */\n\tconstructor( model, emitter, attribute ) {\n\t\t/**\n\t\t * The model instance this class instance operates on.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model#schema}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * The Attribute this class instance operates on.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.attribute = attribute;\n\n\t\t/**\n\t\t * A reference to the document selection.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/selection~Selection}\n\t\t */\n\t\tthis._modelSelection = model.document.selection;\n\n\t\t/**\n\t\t * The current UID of the overridden gravity, as returned by\n\t\t * {@link module:engine/model/writer~Writer#overrideSelectionGravity}.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._overrideUid = null;\n\n\t\t/**\n\t\t * A flag indicating that the automatic gravity restoration for this attribute\n\t\t * should not happen upon the next\n\t\t * {@link module:engine/model/selection~Selection#event:change:range} event.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._isNextGravityRestorationSkipped = false;\n\n\t\t// The automatic gravity restoration logic.\n\t\temitter.listenTo( this._modelSelection, 'change:range', ( evt, data ) => {\n\t\t\t// Skipping the automatic restoration is needed if the selection should change\n\t\t\t// but the gravity must remain overridden afterwards. See the #handleBackwardMovement\n\t\t\t// to learn more.\n\t\t\tif ( this._isNextGravityRestorationSkipped ) {\n\t\t\t\tthis._isNextGravityRestorationSkipped = false;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip automatic restore when the gravity is not overridden — simply, there's nothing to restore\n\t\t\t// at this moment.\n\t\t\tif ( !this._isGravityOverridden ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip automatic restore when the change is indirect AND the selection is at the attribute boundary.\n\t\t\t// It means that e.g. if the change was external (collaboration) and the user had their\n\t\t\t// selection around the link, its gravity should remain intact in this change:range event.\n\t\t\tif ( !data.directChange && isAtBoundary( this._modelSelection.getFirstPosition(), attribute ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._restoreGravity();\n\t\t} );\n\t}\n\n\t/**\n\t * Updates the document selection and the view according to the two–step caret movement state\n\t * when moving **forwards**. Executed upon `keypress` in the {@link module:engine/view/view~View}.\n\t *\n\t * @param {module:engine/model/position~Position} position The model position at the moment of the key press.\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} data Data of the key press.\n\t * @returns {Boolean} `true` when the handler prevented caret movement\n\t */\n\thandleForwardMovement( position, data ) {\n\t\tconst attribute = this.attribute;\n\n\t\t// DON'T ENGAGE 2-SCM if gravity is already overridden. It means that we just entered\n\t\t//\n\t\t// \t\t<paragraph>foo<$text attribute>{}bar</$text>baz</paragraph>\n\t\t//\n\t\t// or left the attribute\n\t\t//\n\t\t// \t\t<paragraph>foo<$text attribute>bar</$text>{}baz</paragraph>\n\t\t//\n\t\t// and the gravity will be restored automatically.\n\t\tif ( this._isGravityOverridden ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// DON'T ENGAGE 2-SCM when the selection is at the beginning of the block AND already has the\n\t\t// attribute:\n\t\t// * when the selection was initially set there using the mouse,\n\t\t// * when the editor has just started\n\t\t//\n\t\t//\t\t<paragraph><$text attribute>{}bar</$text>baz</paragraph>\n\t\t//\n\t\tif ( position.isAtStart && this._hasSelectionAttribute ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// ENGAGE 2-SCM when about to leave one attribute value and enter another:\n\t\t//\n\t\t// \t\t<paragraph><$text attribute=\"1\">foo{}</$text><$text attribute=\"2\">bar</$text></paragraph>\n\t\t//\n\t\t// but DON'T when already in between of them (no attribute selection):\n\t\t//\n\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text>{}<$text attribute=\"2\">bar</$text></paragraph>\n\t\t//\n\t\tif ( isBetweenDifferentValues( position, attribute ) && this._hasSelectionAttribute ) {\n\t\t\tthis._preventCaretMovement( data );\n\t\t\tthis._removeSelectionAttribute();\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// ENGAGE 2-SCM when entering an attribute:\n\t\t//\n\t\t// \t\t<paragraph>foo{}<$text attribute>bar</$text>baz</paragraph>\n\t\t//\n\t\tif ( isAtStartBoundary( position, attribute ) ) {\n\t\t\tthis._preventCaretMovement( data );\n\t\t\tthis._overrideGravity();\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// ENGAGE 2-SCM when leaving an attribute:\n\t\t//\n\t\t//\t\t<paragraph>foo<$text attribute>bar{}</$text>baz</paragraph>\n\t\t//\n\t\tif ( isAtEndBoundary( position, attribute ) && this._hasSelectionAttribute ) {\n\t\t\tthis._preventCaretMovement( data );\n\t\t\tthis._overrideGravity();\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the document selection and the view according to the two–step caret movement state\n\t * when moving **backwards**. Executed upon `keypress` in the {@link module:engine/view/view~View}.\n\t *\n\t * @param {module:engine/model/position~Position} position The model position at the moment of the key press.\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} data Data of the key press.\n\t * @returns {Boolean} `true` when the handler prevented caret movement\n\t */\n\thandleBackwardMovement( position, data ) {\n\t\tconst attribute = this.attribute;\n\n\t\t// When the gravity is already overridden...\n\t\tif ( this._isGravityOverridden ) {\n\t\t\t// ENGAGE 2-SCM & REMOVE SELECTION ATTRIBUTE\n\t\t\t// when about to leave one attribute value and enter another:\n\t\t\t//\n\t\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text><$text attribute=\"2\">{}bar</$text></paragraph>\n\t\t\t//\n\t\t\t// but DON'T when already in between of them (no attribute selection):\n\t\t\t//\n\t\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text>{}<$text attribute=\"2\">bar</$text></paragraph>\n\t\t\t//\n\t\t\tif ( isBetweenDifferentValues( position, attribute ) && this._hasSelectionAttribute ) {\n\t\t\t\tthis._preventCaretMovement( data );\n\t\t\t\tthis._restoreGravity();\n\t\t\t\tthis._removeSelectionAttribute();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// ENGAGE 2-SCM when at any boundary of the attribute:\n\t\t\t//\n\t\t\t// \t\t<paragraph>foo<$text attribute>bar</$text>{}baz</paragraph>\n\t\t\t// \t\t<paragraph>foo<$text attribute>{}bar</$text>baz</paragraph>\n\t\t\t//\n\t\t\telse {\n\t\t\t\tthis._preventCaretMovement( data );\n\t\t\t\tthis._restoreGravity();\n\n\t\t\t\t// REMOVE SELECTION ATRIBUTE at the beginning of the block.\n\t\t\t\t// It's like restoring gravity but towards a non-existent content when\n\t\t\t\t// the gravity is overridden:\n\t\t\t\t//\n\t\t\t\t// \t\t<paragraph><$text attribute>{}bar</$text></paragraph>\n\t\t\t\t//\n\t\t\t\t// becomes:\n\t\t\t\t//\n\t\t\t\t// \t\t<paragraph>{}<$text attribute>bar</$text></paragraph>\n\t\t\t\t//\n\t\t\t\tif ( position.isAtStart ) {\n\t\t\t\t\tthis._removeSelectionAttribute();\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\t// ENGAGE 2-SCM when between two different attribute values but selection has no attribute:\n\t\t\t//\n\t\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text>{}<$text attribute=\"2\">bar</$text></paragraph>\n\t\t\t//\n\t\t\tif ( isBetweenDifferentValues( position, attribute ) && !this._hasSelectionAttribute ) {\n\t\t\t\tthis._preventCaretMovement( data );\n\t\t\t\tthis._setSelectionAttributeFromTheNodeBefore( position );\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// End of block boundary cases:\n\t\t\t//\n\t\t\t// \t\t<paragraph><$text attribute>bar{}</$text></paragraph>\n\t\t\t// \t\t<paragraph><$text attribute>bar</$text>{}</paragraph>\n\t\t\t//\n\t\t\tif ( position.isAtEnd && isAtEndBoundary( position, attribute ) ) {\n\t\t\t\t// DON'T ENGAGE 2-SCM if the selection has the attribute already.\n\t\t\t\t// This is a common selection if set using the mouse.\n\t\t\t\t//\n\t\t\t\t// \t\t<paragraph><$text attribute>bar{}</$text></paragraph>\n\t\t\t\t//\n\t\t\t\tif ( this._hasSelectionAttribute ) {\n\t\t\t\t\t// DON'T ENGAGE 2-SCM if the attribute at the end of the block which has length == 1.\n\t\t\t\t\t// Make sure the selection will not the attribute after it moves backwards.\n\t\t\t\t\t//\n\t\t\t\t\t// \t\t<paragraph>foo<$text attribute>b{}</$text></paragraph>\n\t\t\t\t\t//\n\t\t\t\t\tif ( isStepAfterTheAttributeBoundary( position, attribute ) ) {\n\t\t\t\t\t\t// Skip the automatic gravity restore upon the next selection#change:range event.\n\t\t\t\t\t\t// If not skipped, it would automatically restore the gravity, which should remain\n\t\t\t\t\t\t// overridden.\n\t\t\t\t\t\tthis._skipNextAutomaticGravityRestoration();\n\t\t\t\t\t\tthis._overrideGravity();\n\n\t\t\t\t\t\t// Don't return \"true\" here because we didn't call _preventCaretMovement.\n\t\t\t\t\t\t// Returning here will destabilize the filler logic, which also listens to\n\t\t\t\t\t\t// keydown (and the event would be stopped).\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// ENGAGE 2-SCM if the selection has no attribute. This may happen when the user\n\t\t\t\t// left the attribute using a FORWARD 2-SCM.\n\t\t\t\t//\n\t\t\t\t// \t\t<paragraph><$text attribute>bar</$text>{}</paragraph>\n\t\t\t\t//\n\t\t\t\telse {\n\t\t\t\t\tthis._preventCaretMovement( data );\n\t\t\t\t\tthis._setSelectionAttributeFromTheNodeBefore( position );\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// REMOVE SELECTION ATRIBUTE when restoring gravity towards a non-existent content at the\n\t\t\t// beginning of the block.\n\t\t\t//\n\t\t\t// \t\t<paragraph>{}<$text attribute>bar</$text></paragraph>\n\t\t\t//\n\t\t\tif ( position.isAtStart ) {\n\t\t\t\tif ( this._hasSelectionAttribute ) {\n\t\t\t\t\tthis._removeSelectionAttribute();\n\t\t\t\t\tthis._preventCaretMovement( data );\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// DON'T ENGAGE 2-SCM when about to enter of leave an attribute.\n\t\t\t// We need to check if the caret is a one position before the attribute boundary:\n\t\t\t//\n\t\t\t// \t\t<paragraph>foo<$text attribute>b{}ar</$text>baz</paragraph>\n\t\t\t// \t\t<paragraph>foo<$text attribute>bar</$text>b{}az</paragraph>\n\t\t\t//\n\t\t\tif ( isStepAfterTheAttributeBoundary( position, attribute ) ) {\n\t\t\t\t// Skip the automatic gravity restore upon the next selection#change:range event.\n\t\t\t\t// If not skipped, it would automatically restore the gravity, which should remain\n\t\t\t\t// overridden.\n\t\t\t\tthis._skipNextAutomaticGravityRestoration();\n\t\t\t\tthis._overrideGravity();\n\n\t\t\t\t// Don't return \"true\" here because we didn't call _preventCaretMovement.\n\t\t\t\t// Returning here will destabilize the filler logic, which also listens to\n\t\t\t\t// keydown (and the event would be stopped).\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * `true` when the gravity is overridden for the {@link #attribute}.\n\t *\n\t * @readonly\n\t * @private\n\t * @type {Boolean}\n\t */\n\tget _isGravityOverridden() {\n\t\treturn !!this._overrideUid;\n\t}\n\n\t/**\n\t * `true` when the {@link module:engine/model/selection~Selection} has the {@link #attribute}.\n\t *\n\t * @readonly\n\t * @private\n\t * @type {Boolean}\n\t */\n\tget _hasSelectionAttribute() {\n\t\treturn this._modelSelection.hasAttribute( this.attribute );\n\t}\n\n\t/**\n\t * Overrides the gravity using the {@link module:engine/model/writer~Writer model writer}\n\t * and stores the information about this fact in the {@link #_overrideUid}.\n\t *\n\t * A shorthand for {@link module:engine/model/writer~Writer#overrideSelectionGravity}.\n\t *\n\t * @private\n\t */\n\t_overrideGravity() {\n\t\tthis._overrideUid = this.model.change( writer => writer.overrideSelectionGravity() );\n\t}\n\n\t/**\n\t * Restores the gravity using the {@link module:engine/model/writer~Writer model writer}.\n\t *\n\t * A shorthand for {@link module:engine/model/writer~Writer#restoreSelectionGravity}.\n\t *\n\t * @private\n\t */\n\t_restoreGravity() {\n\t\tthis.model.change( writer => {\n\t\t\twriter.restoreSelectionGravity( this._overrideUid );\n\t\t\tthis._overrideUid = null;\n\t\t} );\n\t}\n\n\t/**\n\t * Prevents the caret movement in the view by calling `preventDefault` on the event data.\n\t *\n\t * @private\n\t */\n\t_preventCaretMovement( data ) {\n\t\tdata.preventDefault();\n\t}\n\n\t/**\n\t * Removes the {@link #attribute} from the selection using using the\n\t * {@link module:engine/model/writer~Writer model writer}.\n\t *\n\t * @private\n\t */\n\t_removeSelectionAttribute() {\n\t\tthis.model.change( writer => {\n\t\t\twriter.removeSelectionAttribute( this.attribute );\n\t\t} );\n\t}\n\n\t/**\n\t * Applies the {@link #attribute} to the current selection using using the\n\t * value from the node before the current position. Uses\n\t * the {@link module:engine/model/writer~Writer model writer}.\n\t *\n\t * @private\n\t * @param {module:engine/model/position~Position} position\n\t */\n\t_setSelectionAttributeFromTheNodeBefore( position ) {\n\t\tconst attribute = this.attribute;\n\n\t\tthis.model.change( writer => {\n\t\t\twriter.setSelectionAttribute( this.attribute, position.nodeBefore.getAttribute( attribute ) );\n\t\t} );\n\t}\n\n\t/**\n\t * Skips the next automatic selection gravity restoration upon the\n\t * {@link module:engine/model/selection~Selection#event:change:range} event.\n\t *\n\t * See {@link #_isNextGravityRestorationSkipped}.\n\t *\n\t * @private\n\t */\n\t_skipNextAutomaticGravityRestoration() {\n\t\tthis._isNextGravityRestorationSkipped = true;\n\t}\n}\n\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\n// @returns {Boolean} `true` when position between the nodes sticks to the bound of text with given attribute.\nfunction isAtBoundary( position, attribute ) {\n\treturn isAtStartBoundary( position, attribute ) || isAtEndBoundary( position, attribute );\n}\n\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\nfunction isAtStartBoundary( position, attribute ) {\n\tconst { nodeBefore, nodeAfter } = position;\n\tconst isAttrBefore = nodeBefore ? nodeBefore.hasAttribute( attribute ) : false;\n\tconst isAttrAfter = nodeAfter ? nodeAfter.hasAttribute( attribute ) : false;\n\n\treturn isAttrAfter && ( !isAttrBefore || nodeBefore.getAttribute( attribute ) !== nodeAfter.getAttribute( attribute ) );\n}\n\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\nfunction isAtEndBoundary( position, attribute ) {\n\tconst { nodeBefore, nodeAfter } = position;\n\tconst isAttrBefore = nodeBefore ? nodeBefore.hasAttribute( attribute ) : false;\n\tconst isAttrAfter = nodeAfter ? nodeAfter.hasAttribute( attribute ) : false;\n\n\treturn isAttrBefore && ( !isAttrAfter || nodeBefore.getAttribute( attribute ) !== nodeAfter.getAttribute( attribute ) );\n}\n\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\nfunction isBetweenDifferentValues( position, attribute ) {\n\tconst { nodeBefore, nodeAfter } = position;\n\tconst isAttrBefore = nodeBefore ? nodeBefore.hasAttribute( attribute ) : false;\n\tconst isAttrAfter = nodeAfter ? nodeAfter.hasAttribute( attribute ) : false;\n\n\tif ( !isAttrAfter || !isAttrBefore ) {\n\t\treturn;\n\t}\n\n\treturn nodeAfter.getAttribute( attribute ) !== nodeBefore.getAttribute( attribute );\n}\n\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\nfunction isStepAfterTheAttributeBoundary( position, attribute ) {\n\treturn isAtBoundary( position.getShiftedBy( -1 ), attribute );\n}\n"]}]}