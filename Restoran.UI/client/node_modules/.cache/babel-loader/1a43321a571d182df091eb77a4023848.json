{"remainingRequest":"C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\dr-vue-echarts\\packages\\bar\\src\\Bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\dr-vue-echarts\\packages\\bar\\src\\Bar.vue","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279},{"path":"C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Vue\\Restoran.UI\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1581760786797}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Bar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <component\n    v-if=\"chart\"\n    :is=\"chart\"\n    ref=\"el\"\n    :style=\"style\"\n    autoresize\n    :theme=\"theme\"\n    :options=\"options\"\n    v-bind=\"$attrs\"\n  />\n</template>\n\n<script>\nimport { bar } from \"../../../utils/formatter\";\nimport { DEFAULT_COLORS } from \"../../../theme\";\nimport { emitEvent, registerTheme } from \"../../../utils/mixins\";\nimport flattenDeep from \"lodash/flattenDeep\";\nimport {\n  ARRAY_PROP,\n  OBJECT_PROP,\n  STRING_PROP,\n  BOOLEAN_PROP,\n  NUMBER_PROP\n} from \"../../../shared/constants\";\n\nconst INIT_GRID_LEFT = 10;\nconst INIT_GRID_RIGHT = 0;\nexport default {\n  name: \"BarChart\",\n  mixins: [emitEvent(\"el\"), registerTheme(\"chart\")],\n  props: {\n    option: OBJECT_PROP({}),\n    animation: BOOLEAN_PROP(true),\n    theme: STRING_PROP(\"walden\"),\n    data: ARRAY_PROP([]),\n    width: STRING_PROP(\"100%\"),\n    height: STRING_PROP(\"100%\"),\n    title: STRING_PROP(),\n    xName: STRING_PROP(),\n    yName: STRING_PROP(),\n    legend: BOOLEAN_PROP(true),\n    colors: ARRAY_PROP(),\n    zoom: BOOLEAN_PROP(false),\n    /** 同一类型数据每个柱状图颜色是否不相同 */\n    rainbow: BOOLEAN_PROP(false),\n    /** 水平柱状图 */\n    horizontal: BOOLEAN_PROP(false),\n    /** 默认缩放范围 */\n    zoomRange: ARRAY_PROP([0, 100]),\n    /** 图表布局设置 */\n    grid: OBJECT_PROP(),\n    labelRotate: BOOLEAN_PROP(false),\n    labelRotateDeg: NUMBER_PROP(40),\n    barMaxWidth: STRING_PROP(\"100%\")\n  },\n  data() {\n    return {\n      chart: null\n    };\n  },\n\n  computed: {\n    style() {\n      const { width, height } = this;\n      return {\n        width,\n        height\n      };\n    },\n    legendShow() {\n      if (this.rainbow) {\n        return false;\n      }\n      return this.legend;\n    },\n    gridLeft() {\n      const labelMaxLength = this.getDataLabelMaxLength();\n      if (this.horizontal) {\n        let leftGap = labelMaxLength * 3 + 10;\n        this.zoom && (leftGap += 50);\n        return leftGap;\n      } else {\n        let valueDistance = this.getDataMaxValueLength() * 5;\n        return this.yName ? valueDistance + 10 : valueDistance;\n      }\n    },\n    gridRight() {\n      return this.xName ? this.xName.length * 12 + 20 : INIT_GRID_RIGHT;\n    },\n    yAxisNameLocation() {\n      return this.horizontal ? \"end\" : \"middle\";\n    },\n    yAxisNameGap() {\n      if (this.horizontal) {\n        return 10;\n      }\n      return this.getDataMaxValueLength() * 10 + 10;\n    },\n    options() {\n      const { seriesData, labels, names, colors } = this.getData();\n      this.rainbow && this.setRainbow(seriesData);\n      seriesData.forEach(item => {\n        item.barMaxWidth = this.barMaxWidth;\n      });\n      let options = {\n        animation: this.animation,\n        grid: {\n          containLabel: true,\n          bottom: 10,\n          left: this.gridLeft,\n          right: this.gridRight\n        },\n        xAxis: {\n          name: this.xName,\n          type: this.horizontal ? \"value\" : \"category\",\n          data: labels,\n          splitLine: {\n            show: this.horizontal,\n            lineStyle: {\n              type: \"dashed\"\n            }\n          }\n        },\n        yAxis: {\n          name: this.horizontal\n            ? this.yName\n            : this.yName && this.yName.split(\"\").join(\"\\n\"),\n          nameLocation: this.yAxisNameLocation,\n          nameRotate: 0.1,\n          nameGap: this.yAxisNameGap,\n          type: this.horizontal ? \"category\" : \"value\",\n          data: labels,\n\n          splitLine: {\n            show: !this.horizontal,\n            lineStyle: {\n              type: \"dashed\"\n            }\n          }\n        },\n        legend: {\n          show: this.legendShow,\n          data: names,\n          type: \"scroll\",\n          width: \"70%\",\n          right: \"10px\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            animation: false\n          }\n        },\n        series: seriesData\n      };\n\n      this.labelRotate && this.setxNameRotate(options);\n      this.zoom && this.setZoom(options);\n      this.colors.length > 0 && this.setColor(options);\n\n      return {\n        ...options,\n        ...this.option\n      };\n    }\n  },\n  methods: {\n    getData() {\n      return bar(this.data);\n    },\n    getDataLabelMaxLength() {\n      const { labels } = this.getData();\n      return Math.max(...labels.map(i => i.length));\n    },\n    getDataMaxValueLength() {\n      const { seriesData } = this.getData();\n      const allData = flattenDeep(seriesData.map(item => item.data));\n      return `${Math.max(...allData)}`.length;\n    },\n    setxNameRotate(options) {\n      options.xAxis.axisLabel = {\n        ...options.xAxis.axisLabel,\n        interval: 0,\n        rotate: this.labelRotateDeg\n      };\n    },\n    setRainbow(seriesData) {\n      seriesData.forEach(item => {\n        item.itemStyle = {\n          normal: {\n            color: params => {\n              const colors =\n                this.colors.length > 0 ? this.colors : DEFAULT_COLORS;\n              const index = params.dataIndex % colors.length;\n              return colors[index];\n            }\n          }\n        };\n      });\n    },\n    setColor(options) {\n      options.color = this.colors;\n    },\n\n    setZoom(options) {\n      let slider = this.horizontal\n        ? {\n            ...slider,\n            yAxisIndex: 0,\n            top: 30,\n            bottom: 30,\n            left: 20\n          }\n        : {\n            type: \"slider\",\n            bottom: 0,\n            right: 10\n          };\n      options.dataZoom = [\n        {\n          disabled: this.horizontal,\n          type: \"inside\",\n          start: this.zoomRange[0] || 0,\n          end: this.zoomRange[1] || 100\n        },\n        {\n          ...slider\n        }\n      ];\n      options.grid = {\n        ...options.grid,\n        bottom: 40\n      };\n    }\n  }\n};\n</script>\n"],"sourceRoot":"node_modules/dr-vue-echarts/packages/bar/src"}]}