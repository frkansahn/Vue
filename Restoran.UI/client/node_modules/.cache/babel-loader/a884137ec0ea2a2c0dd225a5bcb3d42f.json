{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-ui\\src\\labeledinput\\labeledinputview.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-ui\\src\\labeledinput\\labeledinputview.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1581760786382},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-ui/src/labeledinput/labeledinputview.js"],"names":["View","uid","LabelView","LabeledInputView","locale","InputView","inputUid","statusUid","set","labelView","_createLabelView","inputView","_createInputView","statusView","_createStatusView","bind","to","errorText","infoText","bindTemplate","setTemplate","tag","attributes","class","if","children","id","for","ariaDescribedById","value","on","role","text","select","focus"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/labeledinput/labeledinputview\n */\n\nimport View from '../view';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nimport LabelView from '../label/labelview';\nimport '../../theme/components/labeledinput/labeledinput.css';\n\n/**\n * The labeled input view class.\n *\n * @extends module:ui/view~View\n */\nexport default class LabeledInputView extends View {\n\t/**\n\t * Creates an instance of the labeled input view class.\n\t *\n\t * @param {module:utils/locale~Locale} locale The locale instance.\n\t * @param {Function} InputView Constructor of the input view.\n\t */\n\tconstructor( locale, InputView ) {\n\t\tsuper( locale );\n\n\t\tconst inputUid = `ck-input-${ uid() }`;\n\t\tconst statusUid = `ck-status-${ uid() }`;\n\n\t\t/**\n\t\t * The text of the label.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #label\n\t\t */\n\t\tthis.set( 'label' );\n\n\t\t/**\n\t\t * The value of the input.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #value\n\t\t */\n\t\tthis.set( 'value' );\n\n\t\t/**\n\t\t * Controls whether the component is in read-only mode.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * The validation error text. When set, it will be displayed\n\t\t * next to the {@link #inputView} as a typical validation error message.\n\t\t * Set it to `null` to hide the message.\n\t\t *\n\t\t * **Note:** Setting this property to anything but `null` will automatically\n\t\t * make the {@link module:ui/inputtext/inputtextview~InputTextView#hasError `hasError`}\n\t\t * of the {@link #inputView} `true`.\n\t\t *\n\t\t * **Note:** Typing in the {@link #inputView} which fires the\n\t\t * {@link module:ui/inputtext/inputtextview~InputTextView#event:input `input` event}\n\t\t * resets this property back to `null`, indicating that the input field can be re–validated.\n\t\t *\n\t\t * @observable\n\t\t * @member {String|null} #errorText\n\t\t */\n\t\tthis.set( 'errorText', null );\n\n\t\t/**\n\t\t * The additional information text displayed next to the {@link #inputView} which can\n\t\t * be used to inform the user about the purpose of the input, provide help or hints.\n\t\t *\n\t\t * Set it to `null` to hide the message.\n\t\t *\n\t\t * **Note:** This text will be displayed in the same place as {@link #errorText} but the\n\t\t * latter always takes precedence: if the {@link #errorText} is set, it replaces\n\t\t * {@link #errorText} for as long as the value of the input is invalid.\n\t\t *\n\t\t * @observable\n\t\t * @member {String|null} #infoText\n\t\t */\n\t\tthis.set( 'infoText', null );\n\n\t\t/**\n\t\t * The label view.\n\t\t *\n\t\t * @member {module:ui/label/labelview~LabelView} #labelView\n\t\t */\n\t\tthis.labelView = this._createLabelView( inputUid );\n\n\t\t/**\n\t\t * The input view.\n\t\t *\n\t\t * @member {module:ui/inputtext/inputtextview~InputTextView} #inputView\n\t\t */\n\t\tthis.inputView = this._createInputView( InputView, inputUid, statusUid );\n\n\t\t/**\n\t\t * The status view for the {@link #inputView}. It displays {@link #errorText} and\n\t\t * {@link #infoText}.\n\t\t *\n\t\t * @member {module:ui/view~View} #statusView\n\t\t */\n\t\tthis.statusView = this._createStatusView( statusUid );\n\n\t\t/**\n\t\t * The combined status text made of {@link #errorText} and {@link #infoText}.\n\t\t * Note that when present, {@link #errorText} always takes precedence in the\n\t\t * status.\n\t\t *\n\t\t * @see #errorText\n\t\t * @see #infoText\n\t\t * @see #statusView\n\t\t * @private\n\t\t * @observable\n\t\t * @member {String|null} #_statusText\n\t\t */\n\t\tthis.bind( '_statusText' ).to(\n\t\t\tthis, 'errorText',\n\t\t\tthis, 'infoText',\n\t\t\t( errorText, infoText ) => errorText || infoText\n\t\t);\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-labeled-input',\n\t\t\t\t\tbind.if( 'isReadOnly', 'ck-disabled' )\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis.labelView,\n\t\t\t\tthis.inputView,\n\t\t\t\tthis.statusView\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * Creates label view class instance and bind with view.\n\t *\n\t * @private\n\t * @param {String} id Unique id to set as labelView#for attribute.\n\t * @returns {module:ui/label/labelview~LabelView}\n\t */\n\t_createLabelView( id ) {\n\t\tconst labelView = new LabelView( this.locale );\n\n\t\tlabelView.for = id;\n\t\tlabelView.bind( 'text' ).to( this, 'label' );\n\n\t\treturn labelView;\n\t}\n\n\t/**\n\t * Creates input view class instance and bind with view.\n\t *\n\t * @private\n\t * @param {Function} InputView Input view constructor.\n\t * @param {String} inputUid Unique id to set as inputView#id attribute.\n\t * @param {String} statusUid Unique id of the status for the input's `aria-describedby` attribute.\n\t * @returns {module:ui/inputtext/inputtextview~InputTextView}\n\t */\n\t_createInputView( InputView, inputUid, statusUid ) {\n\t\tconst inputView = new InputView( this.locale, statusUid );\n\n\t\tinputView.id = inputUid;\n\t\tinputView.ariaDescribedById = statusUid;\n\t\tinputView.bind( 'value' ).to( this );\n\t\tinputView.bind( 'isReadOnly' ).to( this );\n\t\tinputView.bind( 'hasError' ).to( this, 'errorText', value => !!value );\n\n\t\tinputView.on( 'input', () => {\n\t\t\t// UX: Make the error text disappear and disable the error indicator as the user\n\t\t\t// starts fixing the errors.\n\t\t\tthis.errorText = null;\n\t\t} );\n\n\t\treturn inputView;\n\t}\n\n\t/**\n\t * Creates the status view instance. It displays {@link #errorText} and {@link #infoText}\n\t * next to the {@link #inputView}. See {@link #_statusText}.\n\t *\n\t * @private\n\t * @param {String} statusUid Unique id of the status, shared with the input's `aria-describedby` attribute.\n\t * @returns {module:ui/view~View}\n\t */\n\t_createStatusView( statusUid ) {\n\t\tconst statusView = new View( this.locale );\n\t\tconst bind = this.bindTemplate;\n\n\t\tstatusView.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-labeled-input__status',\n\t\t\t\t\tbind.if( 'errorText', 'ck-labeled-input__status_error' ),\n\t\t\t\t\tbind.if( '_statusText', 'ck-hidden', value => !value )\n\t\t\t\t],\n\t\t\t\tid: statusUid,\n\t\t\t\trole: bind.if( 'errorText', 'alert' )\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: bind.to( '_statusText' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn statusView;\n\t}\n\n\t/**\n\t * Moves the focus to the input and selects the value.\n\t */\n\tselect() {\n\t\tthis.inputView.select();\n\t}\n\n\t/**\n\t * Focuses the input.\n\t */\n\tfocus() {\n\t\tthis.inputView.focus();\n\t}\n}\n"]}]}