{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-engine\\src\\view\\uielement.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-engine\\src\\view\\uielement.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1581760786382},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-engine/src/view/uielement.js"],"names":["Element","CKEditorError","Node","keyCodes","UIElement","document","name","attributes","children","getFillerOffset","type","cutType","replace","index","nodes","Array","from","length","domDocument","toDomElement","domElement","createElement","getAttributeKeys","key","setAttribute","getAttribute","injectUiElementHandling","view","on","evt","data","jumpOverUiElement","domConverter","keyCode","arrowright","domSelection","domTarget","ownerDocument","defaultView","getSelection","domSelectionCollapsed","rangeCount","getRangeAt","collapsed","shiftKey","domParent","focusNode","domOffset","focusOffset","viewPosition","domPositionToView","jumpedOverAnyUiElement","nextViewPosition","getLastMatchingPosition","value","item","is","newDomPosition","viewPositionToDom","collapse","parent","offset","extend"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/uielement\n */\n\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * UI element class. It should be used to represent editing UI which needs to be injected into the editing view\n * If possible, you should keep your UI outside the editing view. However, if that is not possible,\n * UI elements can be used.\n *\n * How a UI element is rendered is in your control (you pass a callback to\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}).\n * The editor will ignore your UI element – the selection cannot be placed in it, it is skipped (invisible) when\n * the user modifies the selection by using arrow keys and the editor does not listen to any mutations which\n * happen inside your UI elements.\n *\n * The limitation is that you cannot convert a model element to a UI element. UI elements need to be\n * created for {@link module:engine/model/markercollection~Marker markers} or as additinal elements\n * inside normal {@link module:engine/view/containerelement~ContainerElement container elements}.\n *\n * To create a new UI element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class UIElement extends Element {\n\t/**\n\t * Creates new instance of UIElement.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` when third parameter is passed,\n\t * to inform that usage of UIElement is incorrect (adding child nodes to UIElement is forbidden).\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createUIElement\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attributes] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( document, name, attributes, children ) {\n\t\tsuper( document, name, attributes, children );\n\n\t\t/**\n\t\t * Returns `null` because filler is not needed for UIElements.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {null} Always returns null.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tuiElement.is( 'uiElement' ); // -> true\n\t *\t\tuiElement.is( 'element' ); // -> true\n\t *\t\tuiElement.is( 'node' ); // -> true\n\t *\t\tuiElement.is( 'view:uiElement' ); // -> true\n\t *\t\tuiElement.is( 'view:element' ); // -> true\n\t *\t\tuiElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\tuiElement.is( 'model:element' ); // -> false\n\t *\t\tuiElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an ui element, you can also check its\n\t * {@link module:engine/view/uielement~UIElement#name name}:\n\t *\n\t *\t\tuiElement.is( 'span' ); // -> true if this is a span ui element\n\t *\t\tuiElement.is( 'uiElement', 'span' ); // -> same as above\n\t *\t\ttext.is( 'span' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tconst cutType = type.replace( /^view:/, '' );\n\t\tif ( !name ) {\n\t\t\treturn cutType == 'uiElement' || super.is( type );\n\t\t} else {\n\t\t\treturn ( cutType == 'uiElement' && name == this.name ) || super.is( type, name );\n\t\t}\n\t}\n\n\t/**\n\t * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` to prevent adding any child nodes\n\t * to UIElement.\n\t *\n\t * @protected\n\t */\n\t_insertChild( index, nodes ) {\n\t\tif ( nodes && ( nodes instanceof Node || Array.from( nodes ).length > 0 ) ) {\n\t\t\t/**\n\t\t\t * Cannot add children to {@link module:engine/view/uielement~UIElement}.\n\t\t\t *\n\t\t\t * @error view-uielement-cannot-add\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-uielement-cannot-add: Cannot add child nodes to UIElement instance.', this );\n\t\t}\n\t}\n\n\t/**\n\t * Renders this {@link module:engine/view/uielement~UIElement} to DOM. This method is called by\n\t * {@link module:engine/view/domconverter~DomConverter}.\n\t * Do not use inheritance to create custom rendering method, replace `render()` method instead:\n\t *\n\t *\t\tconst myUIElement = downcastWriter.createUIElement( 'span' );\n\t *\t\tmyUIElement.render = function( domDocument ) {\n\t *\t\t\tconst domElement = this.toDomElement( domDocument );\n\t *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\n\t *\n\t *\t\t\treturn domElement;\n\t *\t\t};\n\t *\n\t * If changes in your UI element should trigger some editor UI update you should call\n\t * the {@link module:core/editor/editorui~EditorUI#update `editor.ui.update()`} method\n\t * after rendering your UI element.\n\t *\n\t * @param {Document} domDocument\n\t * @returns {HTMLElement}\n\t */\n\trender( domDocument ) {\n\t\treturn this.toDomElement( domDocument );\n\t}\n\n\t/**\n\t * Creates DOM element based on this view UIElement.\n\t * Note that each time this method is called new DOM element is created.\n\t *\n\t * @param {Document} domDocument\n\t * @returns {HTMLElement}\n\t */\n\ttoDomElement( domDocument ) {\n\t\tconst domElement = domDocument.createElement( this.name );\n\n\t\tfor ( const key of this.getAttributeKeys() ) {\n\t\t\tdomElement.setAttribute( key, this.getAttribute( key ) );\n\t\t}\n\n\t\treturn domElement;\n\t}\n}\n\n/**\n * This function injects UI element handling to the given {@link module:engine/view/document~Document document}.\n *\n * A callback is added to {@link module:engine/view/document~Document#event:keydown document keydown event}.\n * The callback handles the situation when right arrow key is pressed and selection is collapsed before a UI element.\n * Without this handler, it would be impossible to \"jump over\" UI element using right arrow key.\n *\n * @param {module:engine/view/view~View} view View controller to which the quirks handling will be injected.\n */\nexport function injectUiElementHandling( view ) {\n\tview.document.on( 'keydown', ( evt, data ) => jumpOverUiElement( evt, data, view.domConverter ) );\n}\n\n// Returns `null` because block filler is not needed for UIElements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n\n// Selection cannot be placed in a `UIElement`. Whenever it is placed there, it is moved before it. This\n// causes a situation when it is impossible to jump over `UIElement` using right arrow key, because the selection\n// ends up in ui element (in DOM) and is moved back to the left. This handler fixes this situation.\nfunction jumpOverUiElement( evt, data, domConverter ) {\n\tif ( data.keyCode == keyCodes.arrowright ) {\n\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\t\tconst domSelectionCollapsed = domSelection.rangeCount == 1 && domSelection.getRangeAt( 0 ).collapsed;\n\n\t\t// Jump over UI element if selection is collapsed or shift key is pressed. These are the cases when selection would extend.\n\t\tif ( domSelectionCollapsed || data.shiftKey ) {\n\t\t\tconst domParent = domSelection.focusNode;\n\t\t\tconst domOffset = domSelection.focusOffset;\n\n\t\t\tconst viewPosition = domConverter.domPositionToView( domParent, domOffset );\n\n\t\t\t// In case if dom element is not converted to view or is not mapped or something. Happens for example in some tests.\n\t\t\tif ( viewPosition === null ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip all following ui elements.\n\t\t\tlet jumpedOverAnyUiElement = false;\n\n\t\t\tconst nextViewPosition = viewPosition.getLastMatchingPosition( value => {\n\t\t\t\tif ( value.item.is( 'uiElement' ) ) {\n\t\t\t\t\t// Remember that there was at least one ui element.\n\t\t\t\t\tjumpedOverAnyUiElement = true;\n\t\t\t\t}\n\n\t\t\t\t// Jump over ui elements, jump over empty attribute elements, move up from inside of attribute element.\n\t\t\t\tif ( value.item.is( 'uiElement' ) || value.item.is( 'attributeElement' ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// Don't jump over text or don't get out of container element.\n\t\t\t\treturn false;\n\t\t\t} );\n\n\t\t\t// If anything has been skipped, fix position.\n\t\t\t// This `if` could be possibly omitted but maybe it is better not to mess with DOM selection if not needed.\n\t\t\tif ( jumpedOverAnyUiElement ) {\n\t\t\t\tconst newDomPosition = domConverter.viewPositionToDom( nextViewPosition );\n\n\t\t\t\tif ( domSelectionCollapsed ) {\n\t\t\t\t\t// Selection was collapsed, so collapse it at further position.\n\t\t\t\t\tdomSelection.collapse( newDomPosition.parent, newDomPosition.offset );\n\t\t\t\t} else {\n\t\t\t\t\t// Selection was not collapse, so extend it instead of collapsing.\n\t\t\t\t\tdomSelection.extend( newDomPosition.parent, newDomPosition.offset );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"]}]}