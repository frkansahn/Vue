{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-ui\\src\\dropdown\\dropdownview.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-ui\\src\\dropdown\\dropdownview.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1581760786382},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownview.js"],"names":["View","FocusTracker","KeystrokeHandler","getOptimalPosition","DropdownView","locale","buttonView","panelView","bind","bindTemplate","set","focusTracker","keystrokes","setTemplate","tag","attributes","class","to","if","value","id","children","extendTemplate","listenTo","isOpen","on","panelPosition","position","_getOptimalPosition","element","target","fitInViewport","positions","_panelPositions","name","add","closeDropdown","data","cancel","focus","isEnabled","defaultPanelPositions","southEast","southWest","northEast","northWest","uiLanguageDirection","buttonRect","top","bottom","left","panelRect","width","height"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/dropdownview\n */\n\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\nimport '../../theme/components/dropdown/dropdown.css';\n\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\n\n/**\n * The dropdown view class. It manages the dropdown button and dropdown panel.\n *\n * In most cases, the easiest way to create a dropdown is by using the {@link module:ui/dropdown/utils~createDropdown}\n * util:\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * If you want to add a richer content to the dropdown panel, you can use the {@link module:ui/dropdown/utils~addListToDropdown}\n * and {@link module:ui/dropdown/utils~addToolbarToDropdown} helpers. See more examples in\n * {@link module:ui/dropdown/utils~createDropdown} documentation.\n *\n * If you want to create a completely custom dropdown, then you can compose it manually:\n *\n *\t\tconst button = new DropdownButtonView( locale );\n *\t\tconst panel = new DropdownPanelView( locale );\n *\t\tconst dropdown = new DropdownView( locale, button, panel );\n *\n *\t\tbutton.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tpanel.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * However, dropdown created this way will contain little behavior. You will need to implement handlers for actions\n * such as {@link module:ui/bindings/clickoutsidehandler~clickOutsideHandler clicking outside an open dropdown}\n * (which should close it) and support for arrow keys inside the panel. Therefore, unless you really know what\n * you do and you really need to do it, it is recommended to use the {@link module:ui/dropdown/utils~createDropdown} helper.\n *\n * @extends module:ui/view~View\n */\nexport default class DropdownView extends View {\n\t/**\n\t * Creates an instance of the dropdown.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t * @param {module:ui/dropdown/button/dropdownbutton~DropdownButton} buttonView\n\t * @param {module:ui/dropdown/dropdownpanelview~DropdownPanelView} panelView\n\t */\n\tconstructor( locale, buttonView, panelView ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Button of the dropdown view. Clicking the button opens the {@link #panelView}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/button/buttonview~ButtonView} #buttonView\n\t\t */\n\t\tthis.buttonView = buttonView;\n\n\t\t/**\n\t\t * Panel of the dropdown. It opens when the {@link #buttonView} is\n\t\t * {@link module:ui/button/buttonview~ButtonView#event:execute executed} (i.e. clicked).\n\t\t *\n\t\t * Child views can be added to the panel's `children` collection:\n\t\t *\n\t\t *\t\tdropdown.panelView.children.add( childView );\n\t\t *\n\t\t * See {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#children} and\n\t\t * {@link module:ui/viewcollection~ViewCollection#add}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/dropdown/dropdownpanelview~DropdownPanelView} #panelView\n\t\t */\n\t\tthis.panelView = panelView;\n\n\t\t/**\n\t\t * Controls whether the dropdown view is open, i.e. shows or hides the {@link #panelView panel}.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isOpen\n\t\t */\n\t\tthis.set( 'isOpen', false );\n\n\t\t/**\n\t\t * Controls whether the dropdown is enabled, i.e. it can be clicked and execute an action.\n\t\t *\n\t\t * See {@link module:ui/button/buttonview~ButtonView#isEnabled}.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\t\tthis.set( 'isEnabled', true );\n\n\t\t/**\n\t\t * (Optional) The additional CSS class set on the dropdown {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\t\tthis.set( 'class' );\n\n\t\t/**\n\t\t * (Optional) The `id` attribute of the dropdown (i.e. to pair with a `<label>` element).\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #id\n\t\t */\n\t\tthis.set( 'id' );\n\n\t\t/**\n\t\t * The position of the panel, relative to the dropdown.\n\t\t *\n\t\t * **Note**: When `'auto'`, the panel will use one of the remaining positions to stay\n\t\t * in the viewport, visible to the user. The positions correspond directly to\n\t\t * {@link module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions default panel positions}.\n\t\t *\n\t\t * **Note**: This value has an impact on the\n\t\t * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#position} property\n\t\t * each time the panel becomes {@link #isOpen open}.\n\t\t *\n\t\t * @observable\n\t\t * @default 'auto'\n\t\t * @member {'auto'|'se'|'sw'|'ne'|'nw'} #panelPosition\n\t\t */\n\t\tthis.set( 'panelPosition', 'auto' );\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the dropdown.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t\t * keystrokes of the dropdown:\n\t\t *\n\t\t * * <kbd>▼</kbd> opens the dropdown,\n\t\t * * <kbd>◀</kbd> and <kbd>Esc</kbd> closes the dropdown.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-dropdown',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value )\n\t\t\t\t],\n\t\t\t\tid: bind.to( 'id' ),\n\t\t\t\t'aria-describedby': bind.to( 'ariaDescribedById' )\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tbuttonView,\n\t\t\t\tpanelView\n\t\t\t]\n\t\t} );\n\n\t\tbuttonView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-dropdown__button'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * A child {@link module:ui/list/listview~ListView list view} of the dropdown located\n\t\t * in its {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t\t *\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/list/listview~ListView} #listView\n\t\t */\n\n\t\t/**\n\t\t * A child toolbar of the dropdown located in the\n\t\t * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t\t *\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarView} #toolbarView\n\t\t */\n\n\t\t/**\n\t\t * Fired when the toolbar button or list item is executed.\n\t\t *\n\t\t * For {@link #listView} It fires when a child of some {@link module:ui/list/listitemview~ListItemView}\n\t\t * fired `execute`.\n\t\t *\n\t\t * For {@link #toolbarView} It fires when one of the buttons has been\n\t\t * {@link module:ui/button/buttonview~ButtonView#event:execute executed}.\n\t\t *\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}\n\t\t * or {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n\t\t *\n\t\t * @event execute\n\t\t */\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Toggle the dropdown when its button has been clicked.\n\t\tthis.listenTo( this.buttonView, 'open', () => {\n\t\t\tthis.isOpen = !this.isOpen;\n\t\t} );\n\n\t\t// Toggle the visibility of the panel when the dropdown becomes open.\n\t\tthis.panelView.bind( 'isVisible' ).to( this, 'isOpen' );\n\n\t\t// Let the dropdown control the position of the panel. The position must\n\t\t// be updated every time the dropdown is open.\n\t\tthis.on( 'change:isOpen', () => {\n\t\t\tif ( !this.isOpen ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If \"auto\", find the best position of the panel to fit into the viewport.\n\t\t\t// Otherwise, simply assign the static position.\n\t\t\tif ( this.panelPosition === 'auto' ) {\n\t\t\t\tthis.panelView.position = DropdownView._getOptimalPosition( {\n\t\t\t\t\telement: this.panelView.element,\n\t\t\t\t\ttarget: this.buttonView.element,\n\t\t\t\t\tfitInViewport: true,\n\t\t\t\t\tpositions: this._panelPositions\n\t\t\t\t} ).name;\n\t\t\t} else {\n\t\t\t\tthis.panelView.position = this.panelPosition;\n\t\t\t}\n\t\t} );\n\n\t\t// Listen for keystrokes coming from within #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\t// Register #element in the focus tracker.\n\t\tthis.focusTracker.add( this.element );\n\n\t\tconst closeDropdown = ( data, cancel ) => {\n\t\t\tif ( this.isOpen ) {\n\t\t\t\tthis.buttonView.focus();\n\t\t\t\tthis.isOpen = false;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t};\n\n\t\t// Open the dropdown panel using the arrow down key, just like with return or space.\n\t\tthis.keystrokes.set( 'arrowdown', ( data, cancel ) => {\n\t\t\t// Don't open if the dropdown is disabled or already open.\n\t\t\tif ( this.buttonView.isEnabled && !this.isOpen ) {\n\t\t\t\tthis.isOpen = true;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Block the right arrow key (until nested dropdowns are implemented).\n\t\tthis.keystrokes.set( 'arrowright', ( data, cancel ) => {\n\t\t\tif ( this.isOpen ) {\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Close the dropdown using the arrow left/escape key.\n\t\tthis.keystrokes.set( 'arrowleft', closeDropdown );\n\t\tthis.keystrokes.set( 'esc', closeDropdown );\n\t}\n\n\t/**\n\t * Focuses the {@link #buttonView}.\n\t */\n\tfocus() {\n\t\tthis.buttonView.focus();\n\t}\n\n\t/**\n\t * Returns {@link #panelView panel} positions to be used by the\n\t * {@link module:utils/dom/position~getOptimalPosition `getOptimalPosition()`}\n\t * utility considering the direction of the language the UI of the editor is displayed in.\n\t *\n\t * @type {module:utils/dom/position~Options#positions}\n\t * @private\n\t */\n\tget _panelPositions() {\n\t\tconst { southEast, southWest, northEast, northWest } = DropdownView.defaultPanelPositions;\n\n\t\tif ( this.locale.uiLanguageDirection === 'ltr' ) {\n\t\t\treturn [ southEast, southWest, northEast, northWest ];\n\t\t} else {\n\t\t\treturn [ southWest, southEast, northWest, northEast ];\n\t\t}\n\t}\n}\n\n/**\n * A set of positioning functions used by the dropdown view to determine\n * the optimal position (i.e. fitting into the browser viewport) of its\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel} when\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition} is set to 'auto'`.\n *\n * The available positioning functions are as follow:\n *\n * **South**\n *\n * * `southEast`\n *\n *\t\t[ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * * `southWest`\n *\n *\t\t         [ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * **North**\n *\n * * `northEast`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t[ Button ]\n *\n * * `northWest`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t         [ Button ]\n *\n * Positioning functions are compatible with {@link module:utils/dom/position~Position}.\n *\n * The name that position function returns will be reflected in dropdown panel's class that\n * controls its placement. See {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition}\n * to learn more.\n *\n * @member {Object} module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions\n */\nDropdownView.defaultPanelPositions = {\n\tsouthEast: buttonRect => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom,\n\t\t\tleft: buttonRect.left,\n\t\t\tname: 'se'\n\t\t};\n\t},\n\tsouthWest: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom,\n\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\n\t\t\tname: 'sw'\n\t\t};\n\t},\n\tnorthEast: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.top - panelRect.height,\n\t\t\tleft: buttonRect.left,\n\t\t\tname: 'ne'\n\t\t};\n\t},\n\tnorthWest: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom - panelRect.height,\n\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\n\t\t\tname: 'nw'\n\t\t};\n\t}\n};\n\n/**\n * A function used to calculate the optimal position for the dropdown panel.\n *\n * @protected\n * @member {Function} module:ui/dropdown/dropdownview~DropdownView._getOptimalPosition\n */\nDropdownView._getOptimalPosition = getOptimalPosition;\n"]}]}