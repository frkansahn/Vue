{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-link\\src\\linkui.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-link\\src\\linkui.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1581760786382},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-link/src/linkui.js"],"names":["Plugin","ClickObserver","isLinkElement","ContextualBalloon","clickOutsideHandler","ButtonView","LinkFormView","LinkActionsView","linkIcon","linkKeystroke","LinkUI","editor","editing","view","addObserver","actionsView","_createActionsView","formView","_createFormView","_balloon","plugins","get","_createToolbarLinkButton","_enableUserBalloonInteractions","destroy","locale","linkCommand","commands","unlinkCommand","bind","to","editButtonView","unlinkButtonView","listenTo","_addFormView","execute","_hideUI","keystrokes","set","data","cancel","manualDecorators","urlInputView","value","saveButtonView","inputView","element","getDecoratorSwitchesState","_closeFormView","t","keyEvtData","_showUI","ui","componentFactory","add","button","isEnabled","label","icon","keystroke","tooltip","isToggleable","viewDocument","document","parentLink","_getSelectedLinkElement","_areActionsVisible","focusTracker","isFocused","focus","priority","_isUIVisible","emitter","activator","_isUIInPanel","contextElements","callback","_areActionsInPanel","position","_getBalloonPositionData","_isFormInPanel","visibleView","select","restoreManualDecoratorStates","undefined","_removeFormView","remove","forceVisible","_addActionsView","showStack","_startUpdatingUI","stopListening","prevSelectedLink","prevSelectionParent","getSelectionParent","update","selectedLink","selectionParent","updatePosition","selection","getAncestors","reverse","find","node","is","targetLink","target","domConverter","mapViewToDom","viewRangeToDom","getFirstRange","isCollapsed","findLinkElementAncestor","getFirstPosition","range","getTrimmed","startLink","start","endLink","end","createRangeIn","isEqual","hasView","ancestor"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/linkui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ClickObserver from '@ckeditor/ckeditor5-engine/src/view/observer/clickobserver';\nimport { isLinkElement } from './utils';\nimport ContextualBalloon from '@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon';\n\nimport clickOutsideHandler from '@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler';\n\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport LinkFormView from './ui/linkformview';\nimport LinkActionsView from './ui/linkactionsview';\n\nimport linkIcon from '../theme/icons/link.svg';\n\nconst linkKeystroke = 'Ctrl+K';\n\n/**\n * The link UI plugin. It introduces the `'link'` and `'unlink'` buttons and support for the <kbd>Ctrl+K</kbd> keystroke.\n *\n * It uses the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon plugin}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class LinkUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ContextualBalloon ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'LinkUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\teditor.editing.view.addObserver( ClickObserver );\n\n\t\t/**\n\t\t * The actions view displayed inside of the balloon.\n\t\t *\n\t\t * @member {module:link/ui/linkactionsview~LinkActionsView}\n\t\t */\n\t\tthis.actionsView = this._createActionsView();\n\n\t\t/**\n\t\t * The form view displayed inside the balloon.\n\t\t *\n\t\t * @member {module:link/ui/linkformview~LinkFormView}\n\t\t */\n\t\tthis.formView = this._createFormView();\n\n\t\t/**\n\t\t * The contextual balloon plugin instance.\n\t\t *\n\t\t * @private\n\t\t * @member {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\n\t\t */\n\t\tthis._balloon = editor.plugins.get( ContextualBalloon );\n\n\t\t// Create toolbar buttons.\n\t\tthis._createToolbarLinkButton();\n\n\t\t// Attach lifecycle actions to the the balloon.\n\t\tthis._enableUserBalloonInteractions();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\t// Destroy created UI components as they are not automatically destroyed (see ckeditor5#1341).\n\t\tthis.formView.destroy();\n\t}\n\n\t/**\n\t * Creates the {@link module:link/ui/linkactionsview~LinkActionsView} instance.\n\t *\n\t * @private\n\t * @returns {module:link/ui/linkactionsview~LinkActionsView} The link actions view instance.\n\t */\n\t_createActionsView() {\n\t\tconst editor = this.editor;\n\t\tconst actionsView = new LinkActionsView( editor.locale );\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\t\tconst unlinkCommand = editor.commands.get( 'unlink' );\n\n\t\tactionsView.bind( 'href' ).to( linkCommand, 'value' );\n\t\tactionsView.editButtonView.bind( 'isEnabled' ).to( linkCommand );\n\t\tactionsView.unlinkButtonView.bind( 'isEnabled' ).to( unlinkCommand );\n\n\t\t// Execute unlink command after clicking on the \"Edit\" button.\n\t\tthis.listenTo( actionsView, 'edit', () => {\n\t\t\tthis._addFormView();\n\t\t} );\n\n\t\t// Execute unlink command after clicking on the \"Unlink\" button.\n\t\tthis.listenTo( actionsView, 'unlink', () => {\n\t\t\teditor.execute( 'unlink' );\n\t\t\tthis._hideUI();\n\t\t} );\n\n\t\t// Close the panel on esc key press when the **actions have focus**.\n\t\tactionsView.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tthis._hideUI();\n\t\t\tcancel();\n\t\t} );\n\n\t\t// Open the form view on Ctrl+K when the **actions have focus**..\n\t\tactionsView.keystrokes.set( linkKeystroke, ( data, cancel ) => {\n\t\t\tthis._addFormView();\n\t\t\tcancel();\n\t\t} );\n\n\t\treturn actionsView;\n\t}\n\n\t/**\n\t * Creates the {@link module:link/ui/linkformview~LinkFormView} instance.\n\t *\n\t * @private\n\t * @returns {module:link/ui/linkformview~LinkFormView} The link form view instance.\n\t */\n\t_createFormView() {\n\t\tconst editor = this.editor;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\n\t\tconst formView = new LinkFormView( editor.locale, linkCommand.manualDecorators );\n\n\t\tformView.urlInputView.bind( 'value' ).to( linkCommand, 'value' );\n\n\t\t// Form elements should be read-only when corresponding commands are disabled.\n\t\tformView.urlInputView.bind( 'isReadOnly' ).to( linkCommand, 'isEnabled', value => !value );\n\t\tformView.saveButtonView.bind( 'isEnabled' ).to( linkCommand );\n\n\t\t// Execute link command after clicking the \"Save\" button.\n\t\tthis.listenTo( formView, 'submit', () => {\n\t\t\teditor.execute( 'link', formView.urlInputView.inputView.element.value, formView.getDecoratorSwitchesState() );\n\t\t\tthis._closeFormView();\n\t\t} );\n\n\t\t// Hide the panel after clicking the \"Cancel\" button.\n\t\tthis.listenTo( formView, 'cancel', () => {\n\t\t\tthis._closeFormView();\n\t\t} );\n\n\t\t// Close the panel on esc key press when the **form has focus**.\n\t\tformView.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tthis._closeFormView();\n\t\t\tcancel();\n\t\t} );\n\n\t\treturn formView;\n\t}\n\n\t/**\n\t * Creates a toolbar Link button. Clicking this button will show\n\t * a {@link #_balloon} attached to the selection.\n\t *\n\t * @private\n\t */\n\t_createToolbarLinkButton() {\n\t\tconst editor = this.editor;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\t\tconst t = editor.t;\n\n\t\t// Handle the `Ctrl+K` keystroke and show the panel.\n\t\teditor.keystrokes.set( linkKeystroke, ( keyEvtData, cancel ) => {\n\t\t\t// Prevent focusing the search bar in FF and opening new tab in Edge. #153, #154.\n\t\t\tcancel();\n\n\t\t\tthis._showUI( true );\n\t\t} );\n\n\t\teditor.ui.componentFactory.add( 'link', locale => {\n\t\t\tconst button = new ButtonView( locale );\n\n\t\t\tbutton.isEnabled = true;\n\t\t\tbutton.label = t( 'Link' );\n\t\t\tbutton.icon = linkIcon;\n\t\t\tbutton.keystroke = linkKeystroke;\n\t\t\tbutton.tooltip = true;\n\t\t\tbutton.isToggleable = true;\n\n\t\t\t// Bind button to the command.\n\t\t\tbutton.bind( 'isEnabled' ).to( linkCommand, 'isEnabled' );\n\t\t\tbutton.bind( 'isOn' ).to( linkCommand, 'value', value => !!value );\n\n\t\t\t// Show the panel on button click.\n\t\t\tthis.listenTo( button, 'execute', () => this._showUI( true ) );\n\n\t\t\treturn button;\n\t\t} );\n\t}\n\n\t/**\n\t * Attaches actions that control whether the balloon panel containing the\n\t * {@link #formView} is visible or not.\n\t *\n\t * @private\n\t */\n\t_enableUserBalloonInteractions() {\n\t\tconst viewDocument = this.editor.editing.view.document;\n\n\t\t// Handle click on view document and show panel when selection is placed inside the link element.\n\t\t// Keep panel open until selection will be inside the same link element.\n\t\tthis.listenTo( viewDocument, 'click', () => {\n\t\t\tconst parentLink = this._getSelectedLinkElement();\n\n\t\t\tif ( parentLink ) {\n\t\t\t\t// Then show panel but keep focus inside editor editable.\n\t\t\t\tthis._showUI();\n\t\t\t}\n\t\t} );\n\n\t\t// Focus the form if the balloon is visible and the Tab key has been pressed.\n\t\tthis.editor.keystrokes.set( 'Tab', ( data, cancel ) => {\n\t\t\tif ( this._areActionsVisible && !this.actionsView.focusTracker.isFocused ) {\n\t\t\t\tthis.actionsView.focus();\n\t\t\t\tcancel();\n\t\t\t}\n\t\t}, {\n\t\t\t// Use the high priority because the link UI navigation is more important\n\t\t\t// than other feature's actions, e.g. list indentation.\n\t\t\t// https://github.com/ckeditor/ckeditor5-link/issues/146\n\t\t\tpriority: 'high'\n\t\t} );\n\n\t\t// Close the panel on the Esc key press when the editable has focus and the balloon is visible.\n\t\tthis.editor.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tif ( this._isUIVisible ) {\n\t\t\t\tthis._hideUI();\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Close on click outside of balloon panel element.\n\t\tclickOutsideHandler( {\n\t\t\temitter: this.formView,\n\t\t\tactivator: () => this._isUIInPanel,\n\t\t\tcontextElements: [ this._balloon.view.element ],\n\t\t\tcallback: () => this._hideUI()\n\t\t} );\n\t}\n\n\t/**\n\t * Adds the {@link #actionsView} to the {@link #_balloon}.\n\t *\n\t * @protected\n\t */\n\t_addActionsView() {\n\t\tif ( this._areActionsInPanel ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._balloon.add( {\n\t\t\tview: this.actionsView,\n\t\t\tposition: this._getBalloonPositionData()\n\t\t} );\n\t}\n\n\t/**\n\t * Adds the {@link #formView} to the {@link #_balloon}.\n\t *\n\t * @protected\n\t */\n\t_addFormView() {\n\t\tif ( this._isFormInPanel ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this.editor;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\n\t\tthis._balloon.add( {\n\t\t\tview: this.formView,\n\t\t\tposition: this._getBalloonPositionData()\n\t\t} );\n\n\t\t// Select input when form view is currently visible.\n\t\tif ( this._balloon.visibleView === this.formView ) {\n\t\t\tthis.formView.urlInputView.select();\n\t\t}\n\n\t\t// Make sure that each time the panel shows up, the URL field remains in sync with the value of\n\t\t// the command. If the user typed in the input, then canceled the balloon (`urlInputView#value` stays\n\t\t// unaltered) and re-opened it without changing the value of the link command (e.g. because they\n\t\t// clicked the same link), they would see the old value instead of the actual value of the command.\n\t\t// https://github.com/ckeditor/ckeditor5-link/issues/78\n\t\t// https://github.com/ckeditor/ckeditor5-link/issues/123\n\t\tthis.formView.urlInputView.inputView.element.value = linkCommand.value || '';\n\t}\n\n\t/**\n\t * Closes the form view. Decides whether the balloon should be hidden completely or if the action view should be shown. This is\n\t * decided upon the link command value (which has a value if the document selection is in the link).\n\t *\n\t * Additionally, if any {@link module:link/link~LinkConfig#decorators} are defined in the editor configuration, the state of\n\t * switch buttons responsible for manual decorator handling is restored.\n\t *\n\t * @private\n\t */\n\t_closeFormView() {\n\t\tconst linkCommand = this.editor.commands.get( 'link' );\n\n\t\t// Restore manual decorator states to represent the current model state. This case is important to reset the switch buttons\n\t\t// when the user cancels the editing form.\n\t\tlinkCommand.restoreManualDecoratorStates();\n\n\t\tif ( linkCommand.value !== undefined ) {\n\t\t\tthis._removeFormView();\n\t\t} else {\n\t\t\tthis._hideUI();\n\t\t}\n\t}\n\n\t/**\n\t * Removes the {@link #formView} from the {@link #_balloon}.\n\t *\n\t * @protected\n\t */\n\t_removeFormView() {\n\t\tif ( this._isFormInPanel ) {\n\t\t\t// Blur the input element before removing it from DOM to prevent issues in some browsers.\n\t\t\t// See https://github.com/ckeditor/ckeditor5/issues/1501.\n\t\t\tthis.formView.saveButtonView.focus();\n\n\t\t\tthis._balloon.remove( this.formView );\n\n\t\t\t// Because the form has an input which has focus, the focus must be brought back\n\t\t\t// to the editor. Otherwise, it would be lost.\n\t\t\tthis.editor.editing.view.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Shows the correct UI type. It is either {@link #formView} or {@link #actionsView}.\n\t *\n\t * @param {Boolean} forceVisible\n\t * @private\n\t */\n\t_showUI( forceVisible = false ) {\n\t\t// When there's no link under the selection, go straight to the editing UI.\n\t\tif ( !this._getSelectedLinkElement() ) {\n\t\t\tthis._addActionsView();\n\n\t\t\t// Be sure panel with link is visible.\n\t\t\tif ( forceVisible ) {\n\t\t\t\tthis._balloon.showStack( 'main' );\n\t\t\t}\n\n\t\t\tthis._addFormView();\n\t\t}\n\t\t// If there's a link under the selection...\n\t\telse {\n\t\t\t// Go to the editing UI if actions are already visible.\n\t\t\tif ( this._areActionsVisible ) {\n\t\t\t\tthis._addFormView();\n\t\t\t}\n\t\t\t// Otherwise display just the actions UI.\n\t\t\telse {\n\t\t\t\tthis._addActionsView();\n\t\t\t}\n\n\t\t\t// Be sure panel with link is visible.\n\t\t\tif ( forceVisible ) {\n\t\t\t\tthis._balloon.showStack( 'main' );\n\t\t\t}\n\t\t}\n\n\t\t// Begin responding to ui#update once the UI is added.\n\t\tthis._startUpdatingUI();\n\t}\n\n\t/**\n\t * Removes the {@link #formView} from the {@link #_balloon}.\n\t *\n\t * See {@link #_addFormView}, {@link #_addActionsView}.\n\t *\n\t * @protected\n\t */\n\t_hideUI() {\n\t\tif ( !this._isUIInPanel ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this.editor;\n\n\t\tthis.stopListening( editor.ui, 'update' );\n\t\tthis.stopListening( this._balloon, 'change:visibleView' );\n\n\t\t// Make sure the focus always gets back to the editable _before_ removing the focused form view.\n\t\t// Doing otherwise causes issues in some browsers. See https://github.com/ckeditor/ckeditor5-link/issues/193.\n\t\teditor.editing.view.focus();\n\n\t\t// Remove form first because it's on top of the stack.\n\t\tthis._removeFormView();\n\n\t\t// Then remove the actions view because it's beneath the form.\n\t\tthis._balloon.remove( this.actionsView );\n\t}\n\n\t/**\n\t * Makes the UI react to the {@link module:core/editor/editorui~EditorUI#event:update} event to\n\t * reposition itself when the editor UI should be refreshed.\n\t *\n\t * See: {@link #_hideUI} to learn when the UI stops reacting to the `update` event.\n\t *\n\t * @protected\n\t */\n\t_startUpdatingUI() {\n\t\tconst editor = this.editor;\n\t\tconst viewDocument = editor.editing.view.document;\n\n\t\tlet prevSelectedLink = this._getSelectedLinkElement();\n\t\tlet prevSelectionParent = getSelectionParent();\n\n\t\tconst update = () => {\n\t\t\tconst selectedLink = this._getSelectedLinkElement();\n\t\t\tconst selectionParent = getSelectionParent();\n\n\t\t\t// Hide the panel if:\n\t\t\t//\n\t\t\t// * the selection went out of the EXISTING link element. E.g. user moved the caret out\n\t\t\t//   of the link,\n\t\t\t// * the selection went to a different parent when creating a NEW link. E.g. someone\n\t\t\t//   else modified the document.\n\t\t\t// * the selection has expanded (e.g. displaying link actions then pressing SHIFT+Right arrow).\n\t\t\t//\n\t\t\t// Note: #_getSelectedLinkElement will return a link for a non-collapsed selection only\n\t\t\t// when fully selected.\n\t\t\tif ( ( prevSelectedLink && !selectedLink ) ||\n\t\t\t\t( !prevSelectedLink && selectionParent !== prevSelectionParent ) ) {\n\t\t\t\tthis._hideUI();\n\t\t\t}\n\t\t\t// Update the position of the panel when:\n\t\t\t//  * link panel is in the visible stack\n\t\t\t//  * the selection remains in the original link element,\n\t\t\t//  * there was no link element in the first place, i.e. creating a new link\n\t\t\telse if ( this._isUIVisible ) {\n\t\t\t\t// If still in a link element, simply update the position of the balloon.\n\t\t\t\t// If there was no link (e.g. inserting one), the balloon must be moved\n\t\t\t\t// to the new position in the editing view (a new native DOM range).\n\t\t\t\tthis._balloon.updatePosition( this._getBalloonPositionData() );\n\t\t\t}\n\n\t\t\tprevSelectedLink = selectedLink;\n\t\t\tprevSelectionParent = selectionParent;\n\t\t};\n\n\t\tfunction getSelectionParent() {\n\t\t\treturn viewDocument.selection.focus.getAncestors()\n\t\t\t\t.reverse()\n\t\t\t\t.find( node => node.is( 'element' ) );\n\t\t}\n\n\t\tthis.listenTo( editor.ui, 'update', update );\n\t\tthis.listenTo( this._balloon, 'change:visibleView', update );\n\t}\n\n\t/**\n\t * Returns `true` when {@link #formView} is in the {@link #_balloon}.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n\tget _isFormInPanel() {\n\t\treturn this._balloon.hasView( this.formView );\n\t}\n\n\t/**\n\t * Returns `true` when {@link #actionsView} is in the {@link #_balloon}.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n\tget _areActionsInPanel() {\n\t\treturn this._balloon.hasView( this.actionsView );\n\t}\n\n\t/**\n\t * Returns `true` when {@link #actionsView} is in the {@link #_balloon} and it is\n\t * currently visible.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n\tget _areActionsVisible() {\n\t\treturn this._balloon.visibleView === this.actionsView;\n\t}\n\n\t/**\n\t * Returns `true` when {@link #actionsView} or {@link #formView} is in the {@link #_balloon}.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n\tget _isUIInPanel() {\n\t\treturn this._isFormInPanel || this._areActionsInPanel;\n\t}\n\n\t/**\n\t * Returns `true` when {@link #actionsView} or {@link #formView} is in the {@link #_balloon} and it is\n\t * currently visible.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n\tget _isUIVisible() {\n\t\tconst visibleView = this._balloon.visibleView;\n\n\t\treturn visibleView == this.formView || this._areActionsVisible;\n\t}\n\n\t/**\n\t * Returns positioning options for the {@link #_balloon}. They control the way the balloon is attached\n\t * to the target element or selection.\n\t *\n\t * If the selection is collapsed and inside a link element, the panel will be attached to the\n\t * entire link element. Otherwise, it will be attached to the selection.\n\t *\n\t * @private\n\t * @returns {module:utils/dom/position~Options}\n\t */\n\t_getBalloonPositionData() {\n\t\tconst view = this.editor.editing.view;\n\t\tconst viewDocument = view.document;\n\t\tconst targetLink = this._getSelectedLinkElement();\n\n\t\tconst target = targetLink ?\n\t\t\t// When selection is inside link element, then attach panel to this element.\n\t\t\tview.domConverter.mapViewToDom( targetLink ) :\n\t\t\t// Otherwise attach panel to the selection.\n\t\t\tview.domConverter.viewRangeToDom( viewDocument.selection.getFirstRange() );\n\n\t\treturn { target };\n\t}\n\n\t/**\n\t * Returns the link {@link module:engine/view/attributeelement~AttributeElement} under\n\t * the {@link module:engine/view/document~Document editing view's} selection or `null`\n\t * if there is none.\n\t *\n\t * **Note**: For a non–collapsed selection, the link element is only returned when **fully**\n\t * selected and the **only** element within the selection boundaries.\n\t *\n\t * @private\n\t * @returns {module:engine/view/attributeelement~AttributeElement|null}\n\t */\n\t_getSelectedLinkElement() {\n\t\tconst view = this.editor.editing.view;\n\t\tconst selection = view.document.selection;\n\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn findLinkElementAncestor( selection.getFirstPosition() );\n\t\t} else {\n\t\t\t// The range for fully selected link is usually anchored in adjacent text nodes.\n\t\t\t// Trim it to get closer to the actual link element.\n\t\t\tconst range = selection.getFirstRange().getTrimmed();\n\t\t\tconst startLink = findLinkElementAncestor( range.start );\n\t\t\tconst endLink = findLinkElementAncestor( range.end );\n\n\t\t\tif ( !startLink || startLink != endLink ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Check if the link element is fully selected.\n\t\t\tif ( view.createRangeIn( startLink ).getTrimmed().isEqual( range ) ) {\n\t\t\t\treturn startLink;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Returns a link element if there's one among the ancestors of the provided `Position`.\n//\n// @private\n// @param {module:engine/view/position~Position} View position to analyze.\n// @returns {module:engine/view/attributeelement~AttributeElement|null} Link element at the position or null.\nfunction findLinkElementAncestor( position ) {\n\treturn position.getAncestors().find( ancestor => isLinkElement( ancestor ) );\n}\n"]}]}