{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-typing\\src\\utils\\utils.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-typing\\src\\utils\\utils.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwoKLyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDIwLCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHR5cGluZy91dGlscy91dGlscwogKi8KaW1wb3J0IGRpZmYgZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS11dGlscy9zcmMvZGlmZic7CmltcG9ydCBkaWZmVG9DaGFuZ2VzIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL2RpZmZ0b2NoYW5nZXMnOwovKioKICogUmV0dXJucyB0cnVlIGlmIGNvbnRhaW5lciBjaGlsZHJlbiBoYXZlIG11dGF0ZWQgb3IgbW9yZSB0aGFuIGEgc2luZ2xlIHRleHQgbm9kZSB3YXMgY2hhbmdlZC4KICoKICogQHByaXZhdGUKICogQHBhcmFtIHtBcnJheS48bW9kdWxlOmVuZ2luZS92aWV3L29ic2VydmVyL211dGF0aW9ub2JzZXJ2ZXJ+TXV0YXRlZFRleHR8CiAqIG1vZHVsZTplbmdpbmUvdmlldy9vYnNlcnZlci9tdXRhdGlvbm9ic2VydmVyfk11dGF0ZWRDaGlsZHJlbj59IG11dGF0aW9ucwogKiBAcmV0dXJucyB7Qm9vbGVhbn0KICovCgpleHBvcnQgZnVuY3Rpb24gY29udGFpbmVyQ2hpbGRyZW5NdXRhdGVkKG11dGF0aW9ucykgewogIGlmIChtdXRhdGlvbnMubGVuZ3RoID09IDApIHsKICAgIHJldHVybiBmYWxzZTsKICB9IC8vIENoZWNrIGlmIHRoZXJlIGlzIGFueSBtdXRhdGlvbiBvZiBgY2hpbGRyZW5gIHR5cGUgb3IgYW55IG11dGF0aW9uIHRoYXQgY2hhbmdlcyBtb3JlIHRoYW4gb25lIHRleHQgbm9kZS4KCgogIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZTsKICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTsKICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7CgogIHRyeSB7CiAgICBmb3IgKHZhciBfaXRlcmF0b3IgPSBtdXRhdGlvbnNbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7CiAgICAgIHZhciBtdXRhdGlvbiA9IF9zdGVwLnZhbHVlOwoKICAgICAgaWYgKG11dGF0aW9uLnR5cGUgPT09ICdjaGlsZHJlbicgJiYgIWdldFNpbmdsZVRleHROb2RlQ2hhbmdlKG11dGF0aW9uKSkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7CiAgICBfaXRlcmF0b3JFcnJvciA9IGVycjsKICB9IGZpbmFsbHkgewogICAgdHJ5IHsKICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4gIT0gbnVsbCkgewogICAgICAgIF9pdGVyYXRvci5yZXR1cm4oKTsKICAgICAgfQogICAgfSBmaW5hbGx5IHsKICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yKSB7CiAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7CiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiBmYWxzZTsKfQovKioKICogUmV0dXJucyBjaGFuZ2UgbWFkZSB0byBhIHNpbmdsZSB0ZXh0IG5vZGUuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS92aWV3L29ic2VydmVyL211dGF0aW9ub2JzZXJ2ZXJ+TXV0YXRlZFRleHR8CiAqIG1vZHVsZTplbmdpbmUvdmlldy9vYnNlcnZlci9tdXRhdGlvbm9ic2VydmVyfk11dGF0ZWRDaGlsZHJlbn0gbXV0YXRpb24KICogQHJldHVybnMge09iamVjdHx1bmRlZmluZWR9IENoYW5nZSBvYmplY3QgKHNlZSB7QGxpbmsgbW9kdWxlOnV0aWxzL2RpZmZ0b2NoYW5nZXN+ZGlmZlRvQ2hhbmdlc30gb3V0cHV0KQogKiBvciB1bmRlZmluZWQgaWYgbW9yZSB0aGFuIGEgc2luZ2xlIHRleHQgbm9kZSB3YXMgY2hhbmdlZC4KICovCgpleHBvcnQgZnVuY3Rpb24gZ2V0U2luZ2xlVGV4dE5vZGVDaGFuZ2UobXV0YXRpb24pIHsKICAvLyBPbmUgbmV3IG5vZGUuCiAgaWYgKG11dGF0aW9uLm5ld0NoaWxkcmVuLmxlbmd0aCAtIG11dGF0aW9uLm9sZENoaWxkcmVuLmxlbmd0aCAhPSAxKSB7CiAgICByZXR1cm47CiAgfSAvLyBXaGljaCBpcyB0ZXh0LgoKCiAgdmFyIGRpZmZSZXN1bHQgPSBkaWZmKG11dGF0aW9uLm9sZENoaWxkcmVuLCBtdXRhdGlvbi5uZXdDaGlsZHJlbiwgY29tcGFyZUNoaWxkTm9kZXMpOwogIHZhciBjaGFuZ2VzID0gZGlmZlRvQ2hhbmdlcyhkaWZmUmVzdWx0LCBtdXRhdGlvbi5uZXdDaGlsZHJlbik7IC8vIEluIGNhc2Ugb2YgWyBkZWxldGUsIGluc2VydCwgaW5zZXJ0IF0gdGhlIHByZXZpb3VzIGNoZWNrIHdpbGwgbm90IGV4aXQuCgogIGlmIChjaGFuZ2VzLmxlbmd0aCA+IDEpIHsKICAgIHJldHVybjsKICB9CgogIHZhciBjaGFuZ2UgPSBjaGFuZ2VzWzBdOyAvLyBXaGljaCBpcyB0ZXh0LgoKICBpZiAoISghIWNoYW5nZS52YWx1ZXNbMF0gJiYgY2hhbmdlLnZhbHVlc1swXS5pcygndGV4dCcpKSkgewogICAgcmV0dXJuOwogIH0KCiAgcmV0dXJuIGNoYW5nZTsKfQovKioKICogQ2hlY2tzIHdoZXRoZXIgdHdvIHZpZXcgbm9kZXMgYXJlIGlkZW50aWNhbCwgd2hpY2ggbWVhbnMgdGhleSBhcmUgdGhlIHNhbWUgb2JqZWN0CiAqIG9yIGNvbnRhaW4gZXhhY3RseSBzYW1lIGRhdGEgKGluIGNhc2Ugb2YgdGV4dCBub2RlcykuCiAqCiAqIEBwcml2YXRlCiAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS92aWV3L25vZGV+Tm9kZX0gb2xkQ2hpbGQKICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL3ZpZXcvbm9kZX5Ob2RlfSBuZXdDaGlsZAogKiBAcmV0dXJucyB7Qm9vbGVhbn0KICovCgpleHBvcnQgZnVuY3Rpb24gY29tcGFyZUNoaWxkTm9kZXMob2xkQ2hpbGQsIG5ld0NoaWxkKSB7CiAgaWYgKCEhb2xkQ2hpbGQgJiYgb2xkQ2hpbGQuaXMoJ3RleHQnKSAmJiAhIW5ld0NoaWxkICYmIG5ld0NoaWxkLmlzKCd0ZXh0JykpIHsKICAgIHJldHVybiBvbGRDaGlsZC5kYXRhID09PSBuZXdDaGlsZC5kYXRhOwogIH0gZWxzZSB7CiAgICByZXR1cm4gb2xkQ2hpbGQgPT09IG5ld0NoaWxkOwogIH0KfQ=="},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-typing/src/utils/utils.js"],"names":["diff","diffToChanges","containerChildrenMutated","mutations","length","mutation","type","getSingleTextNodeChange","newChildren","oldChildren","diffResult","compareChildNodes","changes","change","values","is","oldChild","newChild","data"],"mappings":";;;;;;;AAAA;;;;;AAKA;;;AAIA,OAAOA,IAAP,MAAiB,oCAAjB;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AAEA;;;;;;;;;AAQA,OAAO,SAASC,wBAAT,CAAmCC,SAAnC,EAA+C;AACrD,MAAKA,SAAS,CAACC,MAAV,IAAoB,CAAzB,EAA6B;AAC5B,WAAO,KAAP;AACA,GAHoD,CAKrD;;;AALqD;AAAA;AAAA;;AAAA;AAMrD,yBAAwBD,SAAxB,8HAAoC;AAAA,UAAxBE,QAAwB;;AACnC,UAAKA,QAAQ,CAACC,IAAT,KAAkB,UAAlB,IAAgC,CAACC,uBAAuB,CAAEF,QAAF,CAA7D,EAA4E;AAC3E,eAAO,IAAP;AACA;AACD;AAVoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYrD,SAAO,KAAP;AACA;AAED;;;;;;;;;;AASA,OAAO,SAASE,uBAAT,CAAkCF,QAAlC,EAA6C;AACnD;AACA,MAAKA,QAAQ,CAACG,WAAT,CAAqBJ,MAArB,GAA8BC,QAAQ,CAACI,WAAT,CAAqBL,MAAnD,IAA6D,CAAlE,EAAsE;AACrE;AACA,GAJkD,CAMnD;;;AACA,MAAMM,UAAU,GAAGV,IAAI,CAAEK,QAAQ,CAACI,WAAX,EAAwBJ,QAAQ,CAACG,WAAjC,EAA8CG,iBAA9C,CAAvB;AACA,MAAMC,OAAO,GAAGX,aAAa,CAAES,UAAF,EAAcL,QAAQ,CAACG,WAAvB,CAA7B,CARmD,CAUnD;;AACA,MAAKI,OAAO,CAACR,MAAR,GAAiB,CAAtB,EAA0B;AACzB;AACA;;AAED,MAAMS,MAAM,GAAGD,OAAO,CAAE,CAAF,CAAtB,CAfmD,CAiBnD;;AACA,MAAK,EAAG,CAAC,CAACC,MAAM,CAACC,MAAP,CAAe,CAAf,CAAF,IAAwBD,MAAM,CAACC,MAAP,CAAe,CAAf,EAAmBC,EAAnB,CAAuB,MAAvB,CAA3B,CAAL,EAAoE;AACnE;AACA;;AAED,SAAOF,MAAP;AACA;AAED;;;;;;;;;;AASA,OAAO,SAASF,iBAAT,CAA4BK,QAA5B,EAAsCC,QAAtC,EAAiD;AACvD,MAAK,CAAC,CAACD,QAAF,IAAcA,QAAQ,CAACD,EAAT,CAAa,MAAb,CAAd,IAAuC,CAAC,CAACE,QAAzC,IAAqDA,QAAQ,CAACF,EAAT,CAAa,MAAb,CAA1D,EAAkF;AACjF,WAAOC,QAAQ,CAACE,IAAT,KAAkBD,QAAQ,CAACC,IAAlC;AACA,GAFD,MAEO;AACN,WAAOF,QAAQ,KAAKC,QAApB;AACA;AACD","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/utils\n */\n\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport diffToChanges from '@ckeditor/ckeditor5-utils/src/difftochanges';\n\n/**\n * Returns true if container children have mutated or more than a single text node was changed.\n *\n * @private\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n * @returns {Boolean}\n */\nexport function containerChildrenMutated( mutations ) {\n\tif ( mutations.length == 0 ) {\n\t\treturn false;\n\t}\n\n\t// Check if there is any mutation of `children` type or any mutation that changes more than one text node.\n\tfor ( const mutation of mutations ) {\n\t\tif ( mutation.type === 'children' && !getSingleTextNodeChange( mutation ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * Returns change made to a single text node.\n *\n * @private\n * @param {module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren} mutation\n * @returns {Object|undefined} Change object (see {@link module:utils/difftochanges~diffToChanges} output)\n * or undefined if more than a single text node was changed.\n */\nexport function getSingleTextNodeChange( mutation ) {\n\t// One new node.\n\tif ( mutation.newChildren.length - mutation.oldChildren.length != 1 ) {\n\t\treturn;\n\t}\n\n\t// Which is text.\n\tconst diffResult = diff( mutation.oldChildren, mutation.newChildren, compareChildNodes );\n\tconst changes = diffToChanges( diffResult, mutation.newChildren );\n\n\t// In case of [ delete, insert, insert ] the previous check will not exit.\n\tif ( changes.length > 1 ) {\n\t\treturn;\n\t}\n\n\tconst change = changes[ 0 ];\n\n\t// Which is text.\n\tif ( !( !!change.values[ 0 ] && change.values[ 0 ].is( 'text' ) ) ) {\n\t\treturn;\n\t}\n\n\treturn change;\n}\n\n/**\n * Checks whether two view nodes are identical, which means they are the same object\n * or contain exactly same data (in case of text nodes).\n *\n * @private\n * @param {module:engine/view/node~Node} oldChild\n * @param {module:engine/view/node~Node} newChild\n * @returns {Boolean}\n */\nexport function compareChildNodes( oldChild, newChild ) {\n\tif ( !!oldChild && oldChild.is( 'text' ) && !!newChild && newChild.is( 'text' ) ) {\n\t\treturn oldChild.data === newChild.data;\n\t} else {\n\t\treturn oldChild === newChild;\n\t}\n}\n"]}]}