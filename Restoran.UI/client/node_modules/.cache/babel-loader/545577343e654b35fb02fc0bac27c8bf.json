{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-engine\\src\\model\\utils\\modifyselection.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-engine\\src\\model\\utils\\modifyselection.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-engine/src/model/utils/modifyselection.js"],"names":["Position","TreeWalker","Range","isInsideSurrogatePair","isInsideCombinedSymbol","DocumentSelection","wordBoundaryCharacters","modifySelection","model","selection","options","schema","isForward","direction","unit","focus","walker","boundaries","getSearchRange","singleCharacters","data","next","done","position","tryExtendingTo","value","change","writer","setSelectionFocus","setFocus","type","getCorrectWordBreakPosition","getCorrectPosition","isObject","item","_createAt","checkChild","nextPosition","isLimit","skip","textNode","offset","startOffset","isAtWordBoundary","isAtNodeBoundary","nextNode","nodeAfter","nodeBefore","is","boundaryChar","charAt","length","includes","start","root","searchEnd","offsetToCheck","endOffset"],"mappings":";;;AAAA;;;;;AAKA;;;AAIA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,qBAAT,EAAgCC,sBAAhC,QAA8D,uCAA9D;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AAEA,IAAMC,sBAAsB,GAAG,aAA/B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,eAAe,SAASC,eAAT,CAA0BC,KAA1B,EAAiCC,SAAjC,EAA2D;AAAA,MAAfC,OAAe,uEAAL,EAAK;AACzE,MAAMC,MAAM,GAAGH,KAAK,CAACG,MAArB;AACA,MAAMC,SAAS,GAAGF,OAAO,CAACG,SAAR,IAAqB,UAAvC;AACA,MAAMC,IAAI,GAAGJ,OAAO,CAACI,IAAR,GAAeJ,OAAO,CAACI,IAAvB,GAA8B,WAA3C;AAEA,MAAMC,KAAK,GAAGN,SAAS,CAACM,KAAxB;AAEA,MAAMC,MAAM,GAAG,IAAIf,UAAJ,CAAgB;AAC9BgB,IAAAA,UAAU,EAAEC,cAAc,CAAEH,KAAF,EAASH,SAAT,CADI;AAE9BO,IAAAA,gBAAgB,EAAE,IAFY;AAG9BN,IAAAA,SAAS,EAAED,SAAS,GAAG,SAAH,GAAe;AAHL,GAAhB,CAAf;AAMA,MAAMQ,IAAI,GAAG;AAAEJ,IAAAA,MAAM,EAANA,MAAF;AAAUL,IAAAA,MAAM,EAANA,MAAV;AAAkBC,IAAAA,SAAS,EAATA,SAAlB;AAA6BE,IAAAA,IAAI,EAAJA;AAA7B,GAAb;AAEA,MAAIO,IAAJ;;AAfyE;AAkBxE,QAAKA,IAAI,CAACC,IAAV,EAAiB;AAChB;AAAA;AAAA;AACA;;AAED,QAAMC,QAAQ,GAAGC,cAAc,CAAEJ,IAAF,EAAQC,IAAI,CAACI,KAAb,CAA/B;;AAEA,QAAKF,QAAL,EAAgB;AACf,UAAKd,SAAS,YAAYJ,iBAA1B,EAA8C;AAC7CG,QAAAA,KAAK,CAACkB,MAAN,CAAc,UAAAC,MAAM,EAAI;AACvBA,UAAAA,MAAM,CAACC,iBAAP,CAA0BL,QAA1B;AACA,SAFD;AAGA,OAJD,MAIO;AACNd,QAAAA,SAAS,CAACoB,QAAV,CAAoBN,QAApB;AACA;;AAED;AAAA;AAAA;AACA;AAlCuE;;AAiBzE,SAAUF,IAAI,GAAGL,MAAM,CAACK,IAAP,EAAjB,EAAmC;AAAA;;AAAA;AAkBlC;AACD,C,CAED;AACA;AACA;;AACA,SAASG,cAAT,CAAyBJ,IAAzB,EAA+BK,KAA/B,EAAuC;AACtC;AACA;AACA,MAAKA,KAAK,CAACK,IAAN,IAAc,MAAnB,EAA4B;AAC3B,QAAKV,IAAI,CAACN,IAAL,KAAc,MAAnB,EAA4B;AAC3B,aAAOiB,2BAA2B,CAAEX,IAAI,CAACJ,MAAP,EAAeI,IAAI,CAACR,SAApB,CAAlC;AACA;;AAED,WAAOoB,kBAAkB,CAAEZ,IAAI,CAACJ,MAAP,EAAeI,IAAI,CAACN,IAApB,EAA0BM,IAAI,CAACR,SAA/B,CAAzB;AACA,GATqC,CAWtC;;;AACA,MAAKa,KAAK,CAACK,IAAN,KAAgBV,IAAI,CAACR,SAAL,GAAiB,cAAjB,GAAkC,YAAlD,CAAL,EAAwE;AACvE;AACA,QAAKQ,IAAI,CAACT,MAAL,CAAYsB,QAAZ,CAAsBR,KAAK,CAACS,IAA5B,CAAL,EAA0C;AACzC,aAAOlC,QAAQ,CAACmC,SAAT,CAAoBV,KAAK,CAACS,IAA1B,EAAgCd,IAAI,CAACR,SAAL,GAAiB,OAAjB,GAA2B,QAA3D,CAAP;AACA,KAJsE,CAMvE;;;AACA,QAAKQ,IAAI,CAACT,MAAL,CAAYyB,UAAZ,CAAwBX,KAAK,CAACY,YAA9B,EAA4C,OAA5C,CAAL,EAA6D;AAC5D,aAAOZ,KAAK,CAACY,YAAb;AACA;AACD,GAVD,CAWA;AAXA,OAYK;AACJ;AACA,UAAKjB,IAAI,CAACT,MAAL,CAAY2B,OAAZ,CAAqBb,KAAK,CAACS,IAA3B,CAAL,EAAyC;AACxC;AACAd,QAAAA,IAAI,CAACJ,MAAL,CAAYuB,IAAZ,CAAkB;AAAA,iBAAM,IAAN;AAAA,SAAlB;AAEA;AACA,OAPG,CASJ;;;AACA,UAAKnB,IAAI,CAACT,MAAL,CAAYyB,UAAZ,CAAwBX,KAAK,CAACY,YAA9B,EAA4C,OAA5C,CAAL,EAA6D;AAC5D,eAAOZ,KAAK,CAACY,YAAb;AACA;AACD;AACD,C,CAED;AACA;AACA;AACA;AACA;;;AACA,SAASL,kBAAT,CAA6BhB,MAA7B,EAAqCF,IAArC,EAA4C;AAC3C,MAAM0B,QAAQ,GAAGxB,MAAM,CAACO,QAAP,CAAgBiB,QAAjC;;AAEA,MAAKA,QAAL,EAAgB;AACf,QAAMpB,IAAI,GAAGoB,QAAQ,CAACpB,IAAtB;AACA,QAAIqB,MAAM,GAAGzB,MAAM,CAACO,QAAP,CAAgBkB,MAAhB,GAAyBD,QAAQ,CAACE,WAA/C;;AAEA,WAAQvC,qBAAqB,CAAEiB,IAAF,EAAQqB,MAAR,CAArB,IAA2C3B,IAAI,IAAI,WAAR,IAAuBV,sBAAsB,CAAEgB,IAAF,EAAQqB,MAAR,CAAhG,EAAqH;AACpHzB,MAAAA,MAAM,CAACK,IAAP;AAEAoB,MAAAA,MAAM,GAAGzB,MAAM,CAACO,QAAP,CAAgBkB,MAAhB,GAAyBD,QAAQ,CAACE,WAA3C;AACA;AACD;;AAED,SAAO1B,MAAM,CAACO,QAAd;AACA,C,CAED;AACA;AACA;AACA;AACA;;;AACA,SAASQ,2BAAT,CAAsCf,MAAtC,EAA8CJ,SAA9C,EAA0D;AACzD,MAAI4B,QAAQ,GAAGxB,MAAM,CAACO,QAAP,CAAgBiB,QAA/B;;AAEA,MAAKA,QAAL,EAAgB;AACf,QAAIC,MAAM,GAAGzB,MAAM,CAACO,QAAP,CAAgBkB,MAAhB,GAAyBD,QAAQ,CAACE,WAA/C;;AAEA,WAAQ,CAACC,gBAAgB,CAAEH,QAAQ,CAACpB,IAAX,EAAiBqB,MAAjB,EAAyB7B,SAAzB,CAAjB,IAAyD,CAACgC,gBAAgB,CAAEJ,QAAF,EAAYC,MAAZ,EAAoB7B,SAApB,CAAlF,EAAoH;AACnHI,MAAAA,MAAM,CAACK,IAAP,GADmH,CAGnH;AACA;AACA;;AACA,UAAMwB,QAAQ,GAAGjC,SAAS,GAAGI,MAAM,CAACO,QAAP,CAAgBuB,SAAnB,GAA+B9B,MAAM,CAACO,QAAP,CAAgBwB,UAAzE,CANmH,CAQnH;;AACA,UAAKF,QAAQ,IAAIA,QAAQ,CAACG,EAAT,CAAa,MAAb,CAAjB,EAAyC;AACxC;AACA,YAAMC,YAAY,GAAGJ,QAAQ,CAACzB,IAAT,CAAc8B,MAAd,CAAsBtC,SAAS,GAAG,CAAH,GAAOiC,QAAQ,CAACzB,IAAT,CAAc+B,MAAd,GAAuB,CAA7D,CAArB,CAFwC,CAIxC;;AACA,YAAK,CAAC7C,sBAAsB,CAAC8C,QAAvB,CAAiCH,YAAjC,CAAN,EAAwD;AACvD;AACAjC,UAAAA,MAAM,CAACK,IAAP;AAEAmB,UAAAA,QAAQ,GAAGxB,MAAM,CAACO,QAAP,CAAgBiB,QAA3B;AACA;AACD;;AAEDC,MAAAA,MAAM,GAAGzB,MAAM,CAACO,QAAP,CAAgBkB,MAAhB,GAAyBD,QAAQ,CAACE,WAA3C;AACA;AACD;;AAED,SAAO1B,MAAM,CAACO,QAAd;AACA;;AAED,SAASL,cAAT,CAAyBmC,KAAzB,EAAgCzC,SAAhC,EAA4C;AAC3C,MAAM0C,IAAI,GAAGD,KAAK,CAACC,IAAnB;;AACA,MAAMC,SAAS,GAAGvD,QAAQ,CAACmC,SAAT,CAAoBmB,IAApB,EAA0B1C,SAAS,GAAG,KAAH,GAAW,CAA9C,CAAlB;;AAEA,MAAKA,SAAL,EAAiB;AAChB,WAAO,IAAIV,KAAJ,CAAWmD,KAAX,EAAkBE,SAAlB,CAAP;AACA,GAFD,MAEO;AACN,WAAO,IAAIrD,KAAJ,CAAWqD,SAAX,EAAsBF,KAAtB,CAAP;AACA;AACD,C,CAED;AACA;AACA;AACA;AACA;;;AACA,SAASV,gBAAT,CAA2BvB,IAA3B,EAAiCqB,MAAjC,EAAyC7B,SAAzC,EAAqD;AACpD;AACA,MAAM4C,aAAa,GAAGf,MAAM,IAAK7B,SAAS,GAAG,CAAH,GAAO,CAAC,CAAtB,CAA5B;AAEA,SAAON,sBAAsB,CAAC8C,QAAvB,CAAiChC,IAAI,CAAC8B,MAAL,CAAaM,aAAb,CAAjC,CAAP;AACA,C,CAED;AACA;AACA;AACA;AACA;;;AACA,SAASZ,gBAAT,CAA2BJ,QAA3B,EAAqCC,MAArC,EAA6C7B,SAA7C,EAAyD;AACxD,SAAO6B,MAAM,MAAO7B,SAAS,GAAG4B,QAAQ,CAACiB,SAAZ,GAAwB,CAAxC,CAAb;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/modifyselection\n */\n\nimport Position from '../position';\nimport TreeWalker from '../treewalker';\nimport Range from '../range';\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\nimport DocumentSelection from '../documentselection';\n\nconst wordBoundaryCharacters = ' ,.?!:;\"-()';\n\n/**\n * Modifies the selection. Currently, the supported modifications are:\n *\n * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\n * Possible values for `unit` are:\n *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\n *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\n *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\n *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\n *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\n *  why `'character'` value is most natural and common method of modifying selection.\n *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\n *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\n *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\n *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\n *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\n *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\n *  extension will include whole \"surrogate pair\".\n *  * `'word'` - moves selection by a whole word.\n *\n * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\n *\n * **Note:** Use {@link module:engine/model/model~Model#modifySelection} instead of this function.\n * This function is only exposed to be reusable in algorithms\n * which change the {@link module:engine/model/model~Model#modifySelection}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection to modify.\n * @param {Object} [options]\n * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\n * @param {'character'|'codePoint'|'word'} [options.unit='character'] The unit by which selection should be modified.\n */\nexport default function modifySelection( model, selection, options = {} ) {\n\tconst schema = model.schema;\n\tconst isForward = options.direction != 'backward';\n\tconst unit = options.unit ? options.unit : 'character';\n\n\tconst focus = selection.focus;\n\n\tconst walker = new TreeWalker( {\n\t\tboundaries: getSearchRange( focus, isForward ),\n\t\tsingleCharacters: true,\n\t\tdirection: isForward ? 'forward' : 'backward'\n\t} );\n\n\tconst data = { walker, schema, isForward, unit };\n\n\tlet next;\n\n\twhile ( ( next = walker.next() ) ) {\n\t\tif ( next.done ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst position = tryExtendingTo( data, next.value );\n\n\t\tif ( position ) {\n\t\t\tif ( selection instanceof DocumentSelection ) {\n\t\t\t\tmodel.change( writer => {\n\t\t\t\t\twriter.setSelectionFocus( position );\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tselection.setFocus( position );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n// Checks whether the selection can be extended to the the walker's next value (next position).\n// @param {{ walker, unit, isForward, schema }} data\n// @param {module:engine/view/treewalker~TreeWalkerValue} value\nfunction tryExtendingTo( data, value ) {\n\t// If found text, we can certainly put the focus in it. Let's just find a correct position\n\t// based on the unit.\n\tif ( value.type == 'text' ) {\n\t\tif ( data.unit === 'word' ) {\n\t\t\treturn getCorrectWordBreakPosition( data.walker, data.isForward );\n\t\t}\n\n\t\treturn getCorrectPosition( data.walker, data.unit, data.isForward );\n\t}\n\n\t// Entering an element.\n\tif ( value.type == ( data.isForward ? 'elementStart' : 'elementEnd' ) ) {\n\t\t// If it's an object, we can select it now.\n\t\tif ( data.schema.isObject( value.item ) ) {\n\t\t\treturn Position._createAt( value.item, data.isForward ? 'after' : 'before' );\n\t\t}\n\n\t\t// If text allowed on this position, extend to this place.\n\t\tif ( data.schema.checkChild( value.nextPosition, '$text' ) ) {\n\t\t\treturn value.nextPosition;\n\t\t}\n\t}\n\t// Leaving an element.\n\telse {\n\t\t// If leaving a limit element, stop.\n\t\tif ( data.schema.isLimit( value.item ) ) {\n\t\t\t// NOTE: Fast-forward the walker until the end.\n\t\t\tdata.walker.skip( () => true );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// If text allowed on this position, extend to this place.\n\t\tif ( data.schema.checkChild( value.nextPosition, '$text' ) ) {\n\t\t\treturn value.nextPosition;\n\t\t}\n\t}\n}\n\n// Finds a correct position by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\n//\n// @param {module:engine/model/treewalker~TreeWalker} walker\n// @param {String} unit The unit by which selection should be modified.\nfunction getCorrectPosition( walker, unit ) {\n\tconst textNode = walker.position.textNode;\n\n\tif ( textNode ) {\n\t\tconst data = textNode.data;\n\t\tlet offset = walker.position.offset - textNode.startOffset;\n\n\t\twhile ( isInsideSurrogatePair( data, offset ) || ( unit == 'character' && isInsideCombinedSymbol( data, offset ) ) ) {\n\t\t\twalker.next();\n\n\t\t\toffset = walker.position.offset - textNode.startOffset;\n\t\t}\n\t}\n\n\treturn walker.position;\n}\n\n// Finds a correct position of a word break by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\n//\n// @param {module:engine/model/treewalker~TreeWalker} walker\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\nfunction getCorrectWordBreakPosition( walker, isForward ) {\n\tlet textNode = walker.position.textNode;\n\n\tif ( textNode ) {\n\t\tlet offset = walker.position.offset - textNode.startOffset;\n\n\t\twhile ( !isAtWordBoundary( textNode.data, offset, isForward ) && !isAtNodeBoundary( textNode, offset, isForward ) ) {\n\t\t\twalker.next();\n\n\t\t\t// Check of adjacent text nodes with different attributes (like BOLD).\n\t\t\t// Example          : 'foofoo []bar<$text bold=\"true\">bar</$text> bazbaz'\n\t\t\t// should expand to : 'foofoo [bar<$text bold=\"true\">bar</$text>] bazbaz'.\n\t\t\tconst nextNode = isForward ? walker.position.nodeAfter : walker.position.nodeBefore;\n\n\t\t\t// Scan only text nodes. Ignore inline elements (like `<softBreak>`).\n\t\t\tif ( nextNode && nextNode.is( 'text' ) ) {\n\t\t\t\t// Check boundary char of an adjacent text node.\n\t\t\t\tconst boundaryChar = nextNode.data.charAt( isForward ? 0 : nextNode.data.length - 1 );\n\n\t\t\t\t// Go to the next node if the character at the boundary of that node belongs to the same word.\n\t\t\t\tif ( !wordBoundaryCharacters.includes( boundaryChar ) ) {\n\t\t\t\t\t// If adjacent text node belongs to the same word go to it & reset values.\n\t\t\t\t\twalker.next();\n\n\t\t\t\t\ttextNode = walker.position.textNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toffset = walker.position.offset - textNode.startOffset;\n\t\t}\n\t}\n\n\treturn walker.position;\n}\n\nfunction getSearchRange( start, isForward ) {\n\tconst root = start.root;\n\tconst searchEnd = Position._createAt( root, isForward ? 'end' : 0 );\n\n\tif ( isForward ) {\n\t\treturn new Range( start, searchEnd );\n\t} else {\n\t\treturn new Range( searchEnd, start );\n\t}\n}\n\n// Checks if selection is on word boundary.\n//\n// @param {String} data The text node value to investigate.\n// @param {Number} offset Position offset.\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\nfunction isAtWordBoundary( data, offset, isForward ) {\n\t// The offset to check depends on direction.\n\tconst offsetToCheck = offset + ( isForward ? 0 : -1 );\n\n\treturn wordBoundaryCharacters.includes( data.charAt( offsetToCheck ) );\n}\n\n// Checks if selection is on node boundary.\n//\n// @param {module:engine/model/text~Text} textNode The text node to investigate.\n// @param {Number} offset Position offset.\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\nfunction isAtNodeBoundary( textNode, offset, isForward ) {\n\treturn offset === ( isForward ? textNode.endOffset : 0 );\n}\n"]}]}