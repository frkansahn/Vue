{"remainingRequest":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-upload\\src\\adapters\\simpleuploadadapter.js","dependencies":[{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-upload\\src\\adapters\\simpleuploadadapter.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\@ckeditor\\ckeditor5-dev-webpack-plugin\\lib\\translatesourceloader.js","mtime":499162500000},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581760768702},{"path":"C:\\Users\\pc\\Desktop\\Restoran\\Restoran\\Restoran.UI\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1581760768279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/pc/Desktop/Restoran/Restoran/Restoran.UI/client/node_modules/@ckeditor/ckeditor5-upload/src/adapters/simpleuploadadapter.js"],"names":["Plugin","FileRepository","attachLinkToDocumentation","SimpleUploadAdapter","options","editor","config","get","uploadUrl","console","warn","plugins","createUploadAdapter","loader","Adapter","file","then","Promise","resolve","reject","_initRequest","_initListeners","_sendRequest","xhr","abort","XMLHttpRequest","open","responseType","genericErrorText","name","addEventListener","response","error","message","url","default","urls","upload","evt","lengthComputable","uploadTotal","total","uploaded","loaded","headers","Object","keys","headerName","setRequestHeader","data","FormData","append","send"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module upload/adapters/simpleuploadadapter\n */\n\n/* globals XMLHttpRequest, FormData, console */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FileRepository from '../filerepository';\nimport { attachLinkToDocumentation } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * The Simple upload adapter allows uploading images to an application running on your server using\n * the [`XMLHttpRequest`](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) API with a\n * minimal {@link module:upload/adapters/simpleuploadadapter~SimpleUploadConfig editor configuration}.\n *\n *\t\tClassicEditor\n *\t\t\t.create( document.querySelector( '#editor' ), {\n *\t\t\t\tsimpleUpload: {\n *\t\t\t\t\tuploadUrl: 'http://example.com',\n *\t\t\t\t\theaders: {\n *\t\t\t\t\t\t...\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See the {@glink features/image-upload/simple-upload-adapter \"Simple upload adapter\"} guide to learn how to\n * learn more about the feature (configuration, server–side requirements, etc.).\n *\n * Check out the {@glink features/image-upload/image-upload comprehensive \"Image upload overview\"} to learn about\n * other ways to upload images into CKEditor 5.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class SimpleUploadAdapter extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ FileRepository ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'SimpleUploadAdapter';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst options = this.editor.config.get( 'simpleUpload' );\n\n\t\tif ( !options ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !options.uploadUrl ) {\n\t\t\t/**\n\t\t\t * The {@link module:upload/adapters/simpleuploadadapter~SimpleUploadConfig#uploadUrl `config.simpleUpload.uploadUrl`}\n\t\t\t * configuration required by the {@link module:upload/adapters/simpleuploadadapter~SimpleUploadAdapter `SimpleUploadAdapter`}\n\t\t\t * is missing. Make sure the correct URL is specified for the image upload to work properly.\n\t\t\t *\n\t\t\t * @error simple-upload-adapter-missing-uploadUrl\n\t\t\t */\n\t\t\tconsole.warn( attachLinkToDocumentation(\n\t\t\t\t'simple-upload-adapter-missing-uploadUrl: Missing the \"uploadUrl\" property in the \"simpleUpload\" editor configuration.'\n\t\t\t) );\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editor.plugins.get( FileRepository ).createUploadAdapter = loader => {\n\t\t\treturn new Adapter( loader, options );\n\t\t};\n\t}\n}\n\n/**\n * Upload adapter.\n *\n * @private\n * @implements module:upload/filerepository~UploadAdapter\n */\nclass Adapter {\n\t/**\n\t * Creates a new adapter instance.\n\t *\n\t * @param {module:upload/filerepository~FileLoader} loader\n\t * @param {module:upload/adapters/simpleuploadadapter~SimpleUploadConfig} options\n\t */\n\tconstructor( loader, options ) {\n\t\t/**\n\t\t * FileLoader instance to use during the upload.\n\t\t *\n\t\t * @member {module:upload/filerepository~FileLoader} #loader\n\t\t */\n\t\tthis.loader = loader;\n\n\t\t/**\n\t\t * The configuration of the adapter.\n\t\t *\n\t\t * @member {module:upload/adapters/simpleuploadadapter~SimpleUploadConfig} #options\n\t\t */\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Starts the upload process.\n\t *\n\t * @see module:upload/filerepository~UploadAdapter#upload\n\t * @returns {Promise}\n\t */\n\tupload() {\n\t\treturn this.loader.file\n\t\t\t.then( file => new Promise( ( resolve, reject ) => {\n\t\t\t\tthis._initRequest();\n\t\t\t\tthis._initListeners( resolve, reject, file );\n\t\t\t\tthis._sendRequest( file );\n\t\t\t} ) );\n\t}\n\n\t/**\n\t * Aborts the upload process.\n\t *\n\t * @see module:upload/filerepository~UploadAdapter#abort\n\t * @returns {Promise}\n\t */\n\tabort() {\n\t\tif ( this.xhr ) {\n\t\t\tthis.xhr.abort();\n\t\t}\n\t}\n\n\t/**\n\t * Initializes the `XMLHttpRequest` object using the URL specified as\n\t * {@link module:upload/adapters/simpleuploadadapter~SimpleUploadConfig#uploadUrl `simpleUpload.uploadUrl`} in the editor's\n\t * configuration.\n\t *\n\t * @private\n\t */\n\t_initRequest() {\n\t\tconst xhr = this.xhr = new XMLHttpRequest();\n\n\t\txhr.open( 'POST', this.options.uploadUrl, true );\n\t\txhr.responseType = 'json';\n\t}\n\n\t/**\n\t * Initializes XMLHttpRequest listeners\n\t *\n\t * @private\n\t * @param {Function} resolve Callback function to be called when the request is successful.\n\t * @param {Function} reject Callback function to be called when the request cannot be completed.\n\t * @param {File} file Native File object.\n\t */\n\t_initListeners( resolve, reject, file ) {\n\t\tconst xhr = this.xhr;\n\t\tconst loader = this.loader;\n\t\tconst genericErrorText = `Couldn't upload file: ${ file.name }.`;\n\n\t\txhr.addEventListener( 'error', () => reject( genericErrorText ) );\n\t\txhr.addEventListener( 'abort', () => reject() );\n\t\txhr.addEventListener( 'load', () => {\n\t\t\tconst response = xhr.response;\n\n\t\t\tif ( !response || response.error ) {\n\t\t\t\treturn reject( response && response.error && response.error.message ? response.error.message : genericErrorText );\n\t\t\t}\n\n\t\t\tresolve( response.url ? { default: response.url } : response.urls );\n\t\t} );\n\n\t\t// Upload progress when it is supported.\n\t\t/* istanbul ignore else */\n\t\tif ( xhr.upload ) {\n\t\t\txhr.upload.addEventListener( 'progress', evt => {\n\t\t\t\tif ( evt.lengthComputable ) {\n\t\t\t\t\tloader.uploadTotal = evt.total;\n\t\t\t\t\tloader.uploaded = evt.loaded;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the data and sends the request.\n\t *\n\t * @private\n\t * @param {File} file File instance to be uploaded.\n\t */\n\t_sendRequest( file ) {\n\t\t// Set headers if specified.\n\t\tconst headers = this.options.headers || {};\n\n\t\tfor ( const headerName of Object.keys( headers ) ) {\n\t\t\tthis.xhr.setRequestHeader( headerName, headers[ headerName ] );\n\t\t}\n\n\t\t// Prepare the form data.\n\t\tconst data = new FormData();\n\n\t\tdata.append( 'upload', file );\n\n\t\t// Send the request.\n\t\tthis.xhr.send( data );\n\t}\n}\n\n/**\n * The configuration of the {@link module:upload/adapters/simpleuploadadapter~SimpleUploadAdapter simple upload adapter}.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\tsimpleUpload: {\n *\t\t\t\t\t// The URL the images are uploaded to.\n *\t\t\t\t\tuploadUrl: 'http://example.com',\n *\n *\t\t\t\t\t// Headers sent along with the XMLHttpRequest to the upload server.\n *\t\t\t\t\theaders: {\n *\t\t\t\t\t\t...\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t} );\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See the {@glink features/image-upload/simple-upload-adapter \"Simple upload adapter\"} guide to learn more.\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor configuration options}.\n *\n * @interface SimpleUploadConfig\n */\n\n/**\n * The configuration of the {@link module:upload/adapters/simpleuploadadapter~SimpleUploadAdapter simple upload adapter}.\n *\n * Read more in {@link module:upload/adapters/simpleuploadadapter~SimpleUploadConfig}.\n *\n * @member {module:upload/adapters/simpleuploadadapter~SimpleUploadConfig} module:core/editor/editorconfig~EditorConfig#simpleUpload\n */\n\n/**\n * The path (URL) to the server (application) which handles the file upload. When specified, enables the automatic\n * upload of resources (images) inserted into the editor content.\n *\n * Learn more about the server application requirements in the\n * {@glink features/image-upload/simple-upload-adapter#server-side-configuration \"Server-side configuration\"} section\n * of the feature guide.\n *\n * @member {String} module:upload/adapters/simpleuploadadapter~SimpleUploadConfig#uploadUrl\n */\n\n/**\n * An object that defines additional [headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers) sent with\n * the request to the server during the upload. This is the right place to implement security mechanisms like\n * authentication and [CSRF](https://developer.mozilla.org/en-US/docs/Glossary/CSRF) protection.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\tsimpleUpload: {\n *\t\t\t\t\theaders: {\n *\t\t\t\t\t\t'X-CSRF-TOKEN': 'CSRF-Token',\n *\t\t\t\t\t\tAuthorization: 'Bearer <JSON Web Token>'\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t} );\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * Learn more about the server application requirements in the\n * {@glink features/image-upload/simple-upload-adapter#server-side-configuration \"Server-side configuration\"} section\n * of the feature guide.\n *\n * @member {Object.<String, String>} module:upload/adapters/simpleuploadadapter~SimpleUploadConfig#headers\n */\n"]}]}